{"expireTime":9007200903816782000,"key":"transformer-remark-markdown-ast-795fc9205770c79b8006f7013dde19d8--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Array.prototype.filter()","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":27,"offset":28},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":27,"offset":28},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":5,"offset":36},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":4,"column":5,"offset":36},"end":{"line":4,"column":15,"offset":46},"indent":[]}},{"type":"text","value":" method ","position":{"start":{"line":4,"column":15,"offset":46},"end":{"line":4,"column":23,"offset":54},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"creates a new array","position":{"start":{"line":4,"column":25,"offset":56},"end":{"line":4,"column":44,"offset":75},"indent":[]}}],"position":{"start":{"line":4,"column":23,"offset":54},"end":{"line":4,"column":46,"offset":77},"indent":[]}},{"type":"text","value":" with all elements that pass the test implemented by the provided function.","position":{"start":{"line":4,"column":46,"offset":77},"end":{"line":4,"column":121,"offset":152},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":121,"offset":152},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":6,"column":4,"offset":159},"end":{"line":6,"column":10,"offset":165},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":156},"end":{"line":6,"column":10,"offset":165},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Arrow function\nfilter((element) => { ... } )\nfilter((element, index) => { ... } )\nfilter((element, index, array) => { ... } )\n\n// Callback function\nfilter(callbackFn)\nfilter(callbackFn, thisArg)\n\n// Inline callback function\nfilter(function callbackFn(element) { ... })\nfilter(function callbackFn(element, index) { ... })\nfilter(function callbackFn(element, index, array){ ... })\nfilter(function callbackFn(element, index, array) { ... }, thisArg)","position":{"start":{"line":8,"column":1,"offset":169},"end":{"line":21,"column":72,"offset":679},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":23,"column":5,"offset":687},"end":{"line":23,"column":15,"offset":697},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":683},"end":{"line":23,"column":15,"offset":697},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":25,"column":1,"offset":701},"end":{"line":25,"column":13,"offset":713},"indent":[]}},{"type":"text","value":"\nFunction is a predicate, to test each element of the array. Return a value that coerces to ","position":{"start":{"line":25,"column":13,"offset":713},"end":{"line":26,"column":92,"offset":806},"indent":[1]}},{"type":"inlineCode","value":"true","position":{"start":{"line":26,"column":92,"offset":806},"end":{"line":26,"column":98,"offset":812},"indent":[]}},{"type":"text","value":" to keep the element, or to ","position":{"start":{"line":26,"column":98,"offset":812},"end":{"line":26,"column":126,"offset":840},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":26,"column":126,"offset":840},"end":{"line":26,"column":133,"offset":847},"indent":[]}},{"type":"text","value":" otherwise.","position":{"start":{"line":26,"column":133,"offset":847},"end":{"line":26,"column":144,"offset":858},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":701},"end":{"line":26,"column":144,"offset":858},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It accepts three arguments:","position":{"start":{"line":28,"column":1,"offset":862},"end":{"line":28,"column":28,"offset":889},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":862},"end":{"line":28,"column":28,"offset":889},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"element","position":{"start":{"line":30,"column":1,"offset":893},"end":{"line":30,"column":10,"offset":902},"indent":[]}},{"type":"text","value":"\nThe current element being processed in the array.","position":{"start":{"line":30,"column":10,"offset":902},"end":{"line":31,"column":50,"offset":953},"indent":[1]}}],"position":{"start":{"line":30,"column":1,"offset":893},"end":{"line":31,"column":50,"offset":953},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"index","position":{"start":{"line":33,"column":1,"offset":957},"end":{"line":33,"column":8,"offset":964},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":33,"column":8,"offset":964},"end":{"line":33,"column":44,"offset":1000},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":33,"column":44,"offset":1000},"end":{"line":33,"column":52,"offset":1008},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":33,"column":52,"offset":1008},"end":{"line":33,"column":59,"offset":1015},"indent":[]}},{"type":"text","value":"\nThe index of the current element being processed in the array.","position":{"start":{"line":33,"column":59,"offset":1015},"end":{"line":34,"column":63,"offset":1079},"indent":[1]}}],"position":{"start":{"line":33,"column":1,"offset":957},"end":{"line":34,"column":63,"offset":1079},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"array","position":{"start":{"line":36,"column":1,"offset":1083},"end":{"line":36,"column":8,"offset":1090},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":36,"column":8,"offset":1090},"end":{"line":36,"column":44,"offset":1126},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":36,"column":44,"offset":1126},"end":{"line":36,"column":52,"offset":1134},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":36,"column":52,"offset":1134},"end":{"line":36,"column":59,"offset":1141},"indent":[]}},{"type":"text","value":"\nThe array ","position":{"start":{"line":36,"column":59,"offset":1141},"end":{"line":37,"column":11,"offset":1153},"indent":[1]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":37,"column":11,"offset":1153},"end":{"line":37,"column":19,"offset":1161},"indent":[]}},{"type":"text","value":" was called upon.","position":{"start":{"line":37,"column":19,"offset":1161},"end":{"line":37,"column":36,"offset":1178},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1083},"end":{"line":37,"column":36,"offset":1178},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"thisArg","position":{"start":{"line":39,"column":1,"offset":1182},"end":{"line":39,"column":10,"offset":1191},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":39,"column":10,"offset":1191},"end":{"line":39,"column":46,"offset":1227},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":39,"column":46,"offset":1227},"end":{"line":39,"column":54,"offset":1235},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":39,"column":54,"offset":1235},"end":{"line":39,"column":61,"offset":1242},"indent":[]}},{"type":"text","value":"\nValue to use as ","position":{"start":{"line":39,"column":61,"offset":1242},"end":{"line":40,"column":17,"offset":1260},"indent":[1]}},{"type":"inlineCode","value":"this","position":{"start":{"line":40,"column":17,"offset":1260},"end":{"line":40,"column":23,"offset":1266},"indent":[]}},{"type":"text","value":" when executing ","position":{"start":{"line":40,"column":23,"offset":1266},"end":{"line":40,"column":39,"offset":1282},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":40,"column":39,"offset":1282},"end":{"line":40,"column":51,"offset":1294},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":40,"column":51,"offset":1294},"end":{"line":40,"column":52,"offset":1295},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1182},"end":{"line":40,"column":52,"offset":1295},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":42,"column":5,"offset":1303},"end":{"line":42,"column":17,"offset":1315},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1299},"end":{"line":42,"column":17,"offset":1315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.","position":{"start":{"line":44,"column":1,"offset":1319},"end":{"line":44,"column":113,"offset":1431},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1319},"end":{"line":44,"column":113,"offset":1431},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":46,"column":4,"offset":1438},"end":{"line":46,"column":15,"offset":1449},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1435},"end":{"line":46,"column":15,"offset":1449},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":48,"column":1,"offset":1453},"end":{"line":48,"column":11,"offset":1463},"indent":[]}},{"type":"text","value":" calls a provided ","position":{"start":{"line":48,"column":11,"offset":1463},"end":{"line":48,"column":29,"offset":1481},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":48,"column":29,"offset":1481},"end":{"line":48,"column":41,"offset":1493},"indent":[]}},{"type":"text","value":" function once for each element in an array, and constructs a new array of all the values for which ","position":{"start":{"line":48,"column":41,"offset":1493},"end":{"line":48,"column":141,"offset":1593},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":48,"column":141,"offset":1593},"end":{"line":48,"column":153,"offset":1605},"indent":[]}},{"type":"text","value":" returns ","position":{"start":{"line":48,"column":153,"offset":1605},"end":{"line":48,"column":162,"offset":1614},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Truthy","children":[{"type":"text","value":"a value that coerces to ","position":{"start":{"line":48,"column":163,"offset":1615},"end":{"line":48,"column":187,"offset":1639},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":48,"column":187,"offset":1639},"end":{"line":48,"column":193,"offset":1645},"indent":[]}}],"position":{"start":{"line":48,"column":162,"offset":1614},"end":{"line":48,"column":252,"offset":1704},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":48,"column":252,"offset":1704},"end":{"line":48,"column":254,"offset":1706},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":48,"column":254,"offset":1706},"end":{"line":48,"column":266,"offset":1718},"indent":[]}},{"type":"text","value":" is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values. Array elements which do not pass the ","position":{"start":{"line":48,"column":266,"offset":1718},"end":{"line":48,"column":469,"offset":1921},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":48,"column":469,"offset":1921},"end":{"line":48,"column":481,"offset":1933},"indent":[]}},{"type":"text","value":" test are skipped, and are not included in the new array.","position":{"start":{"line":48,"column":481,"offset":1933},"end":{"line":48,"column":538,"offset":1990},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1453},"end":{"line":48,"column":538,"offset":1990},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":50,"column":1,"offset":1994},"end":{"line":50,"column":13,"offset":2006},"indent":[]}},{"type":"text","value":" is invoked with three arguments:","position":{"start":{"line":50,"column":13,"offset":2006},"end":{"line":50,"column":46,"offset":2039},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1994},"end":{"line":50,"column":46,"offset":2039},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the value of the element","position":{"start":{"line":52,"column":5,"offset":2047},"end":{"line":52,"column":29,"offset":2071},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":2047},"end":{"line":52,"column":29,"offset":2071},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2043},"end":{"line":52,"column":29,"offset":2071},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the index of the element","position":{"start":{"line":53,"column":5,"offset":2077},"end":{"line":53,"column":29,"offset":2101},"indent":[]}}],"position":{"start":{"line":53,"column":5,"offset":2077},"end":{"line":53,"column":29,"offset":2101},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2073},"end":{"line":53,"column":29,"offset":2101},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the Array object being traversed","position":{"start":{"line":54,"column":5,"offset":2107},"end":{"line":54,"column":37,"offset":2139},"indent":[]}}],"position":{"start":{"line":54,"column":5,"offset":2107},"end":{"line":54,"column":37,"offset":2139},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2103},"end":{"line":54,"column":37,"offset":2139},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":2043},"end":{"line":54,"column":37,"offset":2139},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If a ","position":{"start":{"line":56,"column":1,"offset":2143},"end":{"line":56,"column":6,"offset":2148},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":56,"column":6,"offset":2148},"end":{"line":56,"column":15,"offset":2157},"indent":[]}},{"type":"text","value":" parameter is provided to ","position":{"start":{"line":56,"column":15,"offset":2157},"end":{"line":56,"column":41,"offset":2183},"indent":[]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":56,"column":41,"offset":2183},"end":{"line":56,"column":49,"offset":2191},"indent":[]}},{"type":"text","value":", it will be used as the callback's ","position":{"start":{"line":56,"column":49,"offset":2191},"end":{"line":56,"column":85,"offset":2227},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":56,"column":85,"offset":2227},"end":{"line":56,"column":91,"offset":2233},"indent":[]}},{"type":"text","value":" value. Otherwise, the value ","position":{"start":{"line":56,"column":91,"offset":2233},"end":{"line":56,"column":120,"offset":2262},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":56,"column":120,"offset":2262},"end":{"line":56,"column":131,"offset":2273},"indent":[]}},{"type":"text","value":" will be used as its ","position":{"start":{"line":56,"column":131,"offset":2273},"end":{"line":56,"column":152,"offset":2294},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":56,"column":152,"offset":2294},"end":{"line":56,"column":158,"offset":2300},"indent":[]}},{"type":"text","value":" value. The ","position":{"start":{"line":56,"column":158,"offset":2300},"end":{"line":56,"column":170,"offset":2312},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":56,"column":170,"offset":2312},"end":{"line":56,"column":176,"offset":2318},"indent":[]}},{"type":"text","value":" value ultimately observable by ","position":{"start":{"line":56,"column":176,"offset":2318},"end":{"line":56,"column":208,"offset":2350},"indent":[]}},{"type":"inlineCode","value":"callback","position":{"start":{"line":56,"column":208,"offset":2350},"end":{"line":56,"column":218,"offset":2360},"indent":[]}},{"type":"text","value":" is determined according to ","position":{"start":{"line":56,"column":218,"offset":2360},"end":{"line":56,"column":246,"offset":2388},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"text","value":"the usual rules for determining the ","position":{"start":{"line":56,"column":247,"offset":2389},"end":{"line":56,"column":283,"offset":2425},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":56,"column":283,"offset":2425},"end":{"line":56,"column":289,"offset":2431},"indent":[]}},{"type":"text","value":" seen by a function","position":{"start":{"line":56,"column":289,"offset":2431},"end":{"line":56,"column":308,"offset":2450},"indent":[]}}],"position":{"start":{"line":56,"column":246,"offset":2388},"end":{"line":56,"column":331,"offset":2473},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":331,"offset":2473},"end":{"line":56,"column":332,"offset":2474},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2143},"end":{"line":56,"column":332,"offset":2474},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":58,"column":1,"offset":2478},"end":{"line":58,"column":11,"offset":2488},"indent":[]}},{"type":"text","value":" does not mutate the array on which it is called.","position":{"start":{"line":58,"column":11,"offset":2488},"end":{"line":58,"column":60,"offset":2537},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2478},"end":{"line":58,"column":60,"offset":2537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The range of elements processed by ","position":{"start":{"line":60,"column":1,"offset":2541},"end":{"line":60,"column":36,"offset":2576},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":60,"column":36,"offset":2576},"end":{"line":60,"column":46,"offset":2586},"indent":[]}},{"type":"text","value":" is set before the first invocation of ","position":{"start":{"line":60,"column":46,"offset":2586},"end":{"line":60,"column":85,"offset":2625},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":60,"column":85,"offset":2625},"end":{"line":60,"column":97,"offset":2637},"indent":[]}},{"type":"text","value":". Elements which are appended to the array (from ","position":{"start":{"line":60,"column":97,"offset":2637},"end":{"line":60,"column":146,"offset":2686},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":60,"column":146,"offset":2686},"end":{"line":60,"column":158,"offset":2698},"indent":[]}},{"type":"text","value":") after the call to ","position":{"start":{"line":60,"column":158,"offset":2698},"end":{"line":60,"column":178,"offset":2718},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":60,"column":178,"offset":2718},"end":{"line":60,"column":188,"offset":2728},"indent":[]}},{"type":"text","value":" begins will not be visited by ","position":{"start":{"line":60,"column":188,"offset":2728},"end":{"line":60,"column":219,"offset":2759},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":60,"column":219,"offset":2759},"end":{"line":60,"column":231,"offset":2771},"indent":[]}},{"type":"text","value":". If existing elements of the array are deleted in the same way they will not be visited.","position":{"start":{"line":60,"column":231,"offset":2771},"end":{"line":60,"column":320,"offset":2860},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2541},"end":{"line":60,"column":320,"offset":2860},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":62,"column":4,"offset":2867},"end":{"line":62,"column":12,"offset":2875},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2864},"end":{"line":62,"column":12,"offset":2875},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"filter()","position":{"start":{"line":64,"column":1,"offset":2879},"end":{"line":64,"column":11,"offset":2889},"indent":[]}},{"type":"text","value":" was added to the ECMA-262 standard in the 5th edition. Therefore, it may not be present in all implementations of the standard.","position":{"start":{"line":64,"column":11,"offset":2889},"end":{"line":64,"column":139,"offset":3017},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":2879},"end":{"line":64,"column":139,"offset":3017},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can work around this by inserting the following code at the beginning of your scripts, allowing use of ","position":{"start":{"line":66,"column":1,"offset":3021},"end":{"line":66,"column":108,"offset":3128},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":66,"column":108,"offset":3128},"end":{"line":66,"column":118,"offset":3138},"indent":[]}},{"type":"text","value":" in ECMA-262 implementations which do not natively support it. This algorithm is exactly equivalent to the one specified in ECMA-262, 5th edition, assuming that ","position":{"start":{"line":66,"column":118,"offset":3138},"end":{"line":66,"column":279,"offset":3299},"indent":[]}},{"type":"inlineCode","value":"fn.call","position":{"start":{"line":66,"column":279,"offset":3299},"end":{"line":66,"column":288,"offset":3308},"indent":[]}},{"type":"text","value":" evaluates to the original value of ","position":{"start":{"line":66,"column":288,"offset":3308},"end":{"line":66,"column":324,"offset":3344},"indent":[]}},{"type":"link","title":null,"url":"../function/bind","children":[{"type":"inlineCode","value":"Function.prototype.bind()","position":{"start":{"line":66,"column":325,"offset":3345},"end":{"line":66,"column":352,"offset":3372},"indent":[]}}],"position":{"start":{"line":66,"column":324,"offset":3344},"end":{"line":66,"column":371,"offset":3391},"indent":[]}},{"type":"text","value":", and that ","position":{"start":{"line":66,"column":371,"offset":3391},"end":{"line":66,"column":382,"offset":3402},"indent":[]}},{"type":"link","title":null,"url":"push","children":[{"type":"inlineCode","value":"Array.prototype.push()","position":{"start":{"line":66,"column":383,"offset":3403},"end":{"line":66,"column":407,"offset":3427},"indent":[]}}],"position":{"start":{"line":66,"column":382,"offset":3402},"end":{"line":66,"column":414,"offset":3434},"indent":[]}},{"type":"text","value":" has its original value.","position":{"start":{"line":66,"column":414,"offset":3434},"end":{"line":66,"column":438,"offset":3458},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3021},"end":{"line":66,"column":438,"offset":3458},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"if (!Array.prototype.filter){\n  Array.prototype.filter = function(func, thisArg) {\n    'use strict';\n    if ( ! ((typeof func === 'Function' || typeof func === 'function') && this) )\n        throw new TypeError();\n\n    var len = this.length >>> 0,\n        res = new Array(len), // preallocate array\n        t = this, c = 0, i = -1;\n\n    var kValue;\n    if (thisArg === undefined){\n      while (++i !== len){\n        // checks to see if the key was set\n        if (i in this){\n          kValue = t[i]; // in case t is changed in callback\n          if (func(t[i], i, t)){\n            res[c++] = kValue;\n          }\n        }\n      }\n    }\n    else{\n      while (++i !== len){\n        // checks to see if the key was set\n        if (i in this){\n          kValue = t[i];\n          if (func.call(thisArg, t[i], i, t)){\n            res[c++] = kValue;\n          }\n        }\n      }\n    }\n\n    res.length = c; // shrink down array to proper size\n    return res;\n  };\n}","position":{"start":{"line":68,"column":1,"offset":3462},"end":{"line":105,"column":6,"offset":4599},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":107,"column":4,"offset":4606},"end":{"line":107,"column":12,"offset":4614},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4603},"end":{"line":107,"column":12,"offset":4614},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Filtering out all small values","position":{"start":{"line":109,"column":5,"offset":4622},"end":{"line":109,"column":35,"offset":4652},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4618},"end":{"line":109,"column":35,"offset":4652},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example uses ","position":{"start":{"line":111,"column":1,"offset":4656},"end":{"line":111,"column":28,"offset":4683},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":111,"column":28,"offset":4683},"end":{"line":111,"column":38,"offset":4693},"indent":[]}},{"type":"text","value":" to create a filtered array that has all elements with values less than ","position":{"start":{"line":111,"column":38,"offset":4693},"end":{"line":111,"column":110,"offset":4765},"indent":[]}},{"type":"inlineCode","value":"10","position":{"start":{"line":111,"column":110,"offset":4765},"end":{"line":111,"column":114,"offset":4769},"indent":[]}},{"type":"text","value":" removed.","position":{"start":{"line":111,"column":114,"offset":4769},"end":{"line":111,"column":123,"offset":4778},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4656},"end":{"line":111,"column":123,"offset":4778},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function isBigEnough(value) {\n  return value >= 10\n}\n\nlet filtered = [12, 5, 8, 130, 44].filter(isBigEnough)\n// filtered is [12, 130, 44]","position":{"start":{"line":113,"column":1,"offset":4782},"end":{"line":118,"column":33,"offset":4944},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Find all prime numbers in an array","position":{"start":{"line":120,"column":5,"offset":4952},"end":{"line":120,"column":39,"offset":4986},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4948},"end":{"line":120,"column":39,"offset":4986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example returns all prime numbers in the array:","position":{"start":{"line":122,"column":1,"offset":4990},"end":{"line":122,"column":62,"offset":5051},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4990},"end":{"line":122,"column":62,"offset":5051},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const array = [-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n\nfunction isPrime(num) {\n  for (let i = 2; num > i; i++) {\n    if (num % i == 0) {\n      return false;\n    }\n  }\n  return num > 1;\n}\n\nconsole.log(array.filter(isPrime)); // [2, 3, 5, 7, 11, 13]","position":{"start":{"line":124,"column":1,"offset":5055},"end":{"line":135,"column":64,"offset":5373},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Filtering invalid entries from JSON","position":{"start":{"line":137,"column":5,"offset":5381},"end":{"line":137,"column":40,"offset":5416},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":5377},"end":{"line":137,"column":40,"offset":5416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example uses ","position":{"start":{"line":139,"column":1,"offset":5420},"end":{"line":139,"column":28,"offset":5447},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":139,"column":28,"offset":5447},"end":{"line":139,"column":38,"offset":5457},"indent":[]}},{"type":"text","value":" to create a filtered json of all elements with non-zero, numeric ","position":{"start":{"line":139,"column":38,"offset":5457},"end":{"line":139,"column":104,"offset":5523},"indent":[]}},{"type":"inlineCode","value":"id","position":{"start":{"line":139,"column":104,"offset":5523},"end":{"line":139,"column":108,"offset":5527},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":139,"column":108,"offset":5527},"end":{"line":139,"column":109,"offset":5528},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":5420},"end":{"line":139,"column":109,"offset":5528},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let arr = [\n  { id: 15 },\n  { id: -1 },\n  { id: 0 },\n  { id: 3 },\n  { id: 12.2 },\n  { },\n  { id: null },\n  { id: NaN },\n  { id: 'undefined' }\n]\n\nlet invalidEntries = 0\n\nfunction filterByID(item) {\n  if (Number.isFinite(item.id) && item.id !== 0) {\n    return true\n  }\n  invalidEntries++\n  return false;\n}\n\nlet arrByID = arr.filter(filterByID)\n\nconsole.log('Filtered Array\\n', arrByID)\n// Filtered Array\n// [{ id: 15 }, { id: -1 }, { id: 3 }, { id: 12.2 }]\n\nconsole.log('Number of Invalid Entries = ', invalidEntries)\n// Number of Invalid Entries = 5","position":{"start":{"line":141,"column":1,"offset":5532},"end":{"line":170,"column":37,"offset":6210},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Searching in array","position":{"start":{"line":172,"column":5,"offset":6218},"end":{"line":172,"column":23,"offset":6236},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":6214},"end":{"line":172,"column":23,"offset":6236},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Following example uses ","position":{"start":{"line":174,"column":1,"offset":6240},"end":{"line":174,"column":24,"offset":6263},"indent":[]}},{"type":"inlineCode","value":"filter()","position":{"start":{"line":174,"column":24,"offset":6263},"end":{"line":174,"column":34,"offset":6273},"indent":[]}},{"type":"text","value":" to filter array content based on search criteria.","position":{"start":{"line":174,"column":34,"offset":6273},"end":{"line":174,"column":84,"offset":6323},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":6240},"end":{"line":174,"column":84,"offset":6323},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let fruits = ['apple', 'banana', 'grapes', 'mango', 'orange']\n\n/**\n * Filter array items based on search criteria (query)\n */\nfunction filterItems(arr, query) {\n  return arr.filter(function(el) {\n      return el.toLowerCase().indexOf(query.toLowerCase()) !== -1\n  })\n}\n\nconsole.log(filterItems(fruits, 'ap'))  // ['apple', 'grapes']\nconsole.log(filterItems(fruits, 'an'))  // ['banana', 'mango', 'orange']","position":{"start":{"line":176,"column":1,"offset":6327},"end":{"line":188,"column":77,"offset":6788},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ES2015 Implementation","position":{"start":{"line":190,"column":6,"offset":6797},"end":{"line":190,"column":27,"offset":6818},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":6792},"end":{"line":190,"column":27,"offset":6818},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const fruits = ['apple', 'banana', 'grapes', 'mango', 'orange']\n\n/**\n * Filter array items based on search criteria (query)\n */\nconst filterItems = (arr, query) => {\n  return arr.filter(el => el.toLowerCase().indexOf(query.toLowerCase()) !== -1)\n}\n\nconsole.log(filterItems(fruits, 'ap'))  // ['apple', 'grapes']\nconsole.log(filterItems(fruits, 'an'))  // ['banana', 'mango', 'orange']","position":{"start":{"line":192,"column":1,"offset":6822},"end":{"line":202,"column":77,"offset":7252},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Affecting Initial Array (modifying, appending and deleting)","position":{"start":{"line":204,"column":5,"offset":7260},"end":{"line":204,"column":64,"offset":7319},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":7256},"end":{"line":204,"column":64,"offset":7319},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following examples tests the behavior of the ","position":{"start":{"line":206,"column":1,"offset":7323},"end":{"line":206,"column":50,"offset":7372},"indent":[]}},{"type":"inlineCode","value":"filter","position":{"start":{"line":206,"column":50,"offset":7372},"end":{"line":206,"column":58,"offset":7380},"indent":[]}},{"type":"text","value":" method when the array is modified.","position":{"start":{"line":206,"column":58,"offset":7380},"end":{"line":206,"column":93,"offset":7415},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":7323},"end":{"line":206,"column":93,"offset":7415},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Modifying each words\nlet words = ['spray', 'limit', 'exuberant', 'destruction','elite', 'present']\n\nconst modifiedWords = words.filter( (word, index, arr) => {\n  arr[index+1] +=' extra'\n  return word.length < 6\n})\n\nconsole.log(modifiedWords)\n// Notice there are three words below length 6, but since they've been modified one is returned\n// [\"spray\"]\n\n// Appending new words\nwords = ['spray', 'limit', 'exuberant', 'destruction','elite', 'present']\nconst appendedWords = words.filter( (word, index, arr) => {\n  arr.push('new')\n  return word.length < 6\n})\n\nconsole.log(appendedWords)\n// Only three fits the condition even though the `words` itself now has a lot more words with character length less than 6\n// [\"spray\" ,\"limit\" ,\"elite\"]\n\n// Deleting words\nwords = ['spray', 'limit', 'exuberant', 'destruction', 'elite', 'present']\nconst deleteWords = words.filter( (word, index, arr) => {\n  arr.pop()\n  return word.length < 6\n})\n\nconsole.log(deleteWords)\n// Notice 'elite' is not even obtained as its been popped off `words` before filter can even get there\n// [\"spray\" ,\"limit\"]","position":{"start":{"line":208,"column":1,"offset":7419},"end":{"line":240,"column":26,"offset":8641},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":241,"column":1,"offset":8643}}}}