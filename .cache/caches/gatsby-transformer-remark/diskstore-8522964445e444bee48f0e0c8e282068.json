{"expireTime":9007200904307322000,"key":"transformer-remark-markdown-ast-0283563f2df312c21e223dc75824ecfb--","val":{"type":"root","children":[{"type":"thematicBreak","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":4,"offset":5},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"description: Review","position":{"start":{"line":5,"column":4,"offset":10},"end":{"line":5,"column":23,"offset":29},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":7},"end":{"line":5,"column":23,"offset":29},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":7,"column":3,"offset":33},"end":{"line":7,"column":30,"offset":60},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":31},"end":{"line":7,"column":30,"offset":60},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":9,"column":5,"offset":66},"end":{"line":9,"column":23,"offset":84},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":62},"end":{"line":9,"column":23,"offset":84},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":11,"column":5,"offset":90},"end":{"line":11,"column":32,"offset":117},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":86},"end":{"line":11,"column":32,"offset":117},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":13,"column":3,"offset":121},"end":{"line":13,"column":22,"offset":140},"indent":[]}},{"type":"inlineCode","value":"ls","position":{"start":{"line":13,"column":22,"offset":140},"end":{"line":13,"column":26,"offset":144},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":13,"column":26,"offset":144},"end":{"line":13,"column":28,"offset":146},"indent":[]}},{"type":"inlineCode","value":"cd","position":{"start":{"line":13,"column":28,"offset":146},"end":{"line":13,"column":32,"offset":150},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":13,"column":32,"offset":150},"end":{"line":13,"column":34,"offset":152},"indent":[]}},{"type":"inlineCode","value":"pwd","position":{"start":{"line":13,"column":34,"offset":152},"end":{"line":13,"column":39,"offset":157},"indent":[]}},{"type":"text","value":" to their descriptions","position":{"start":{"line":13,"column":39,"offset":157},"end":{"line":13,"column":61,"offset":179},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":121},"end":{"line":13,"column":61,"offset":179},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ls","position":{"start":{"line":14,"column":7,"offset":186},"end":{"line":14,"column":11,"offset":190},"indent":[]}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":14,"column":11,"offset":190},"end":{"line":14,"column":47,"offset":226},"indent":[]}}],"position":{"start":{"line":14,"column":7,"offset":186},"end":{"line":14,"column":47,"offset":226},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":184},"end":{"line":14,"column":47,"offset":226},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":15,"column":7,"offset":233},"end":{"line":15,"column":11,"offset":237},"indent":[]}},{"type":"text","value":" changes current directory","position":{"start":{"line":15,"column":11,"offset":237},"end":{"line":15,"column":37,"offset":263},"indent":[]}}],"position":{"start":{"line":15,"column":7,"offset":233},"end":{"line":15,"column":37,"offset":263},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd ..","position":{"start":{"line":16,"column":11,"offset":274},"end":{"line":16,"column":18,"offset":281},"indent":[]}},{"type":"text","value":" takes you up one level","position":{"start":{"line":16,"column":18,"offset":281},"end":{"line":16,"column":41,"offset":304},"indent":[]}}],"position":{"start":{"line":16,"column":11,"offset":274},"end":{"line":16,"column":41,"offset":304},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":272},"end":{"line":16,"column":41,"offset":304},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cd","position":{"start":{"line":17,"column":11,"offset":315},"end":{"line":17,"column":15,"offset":319},"indent":[]}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":17,"column":15,"offset":319},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":17,"column":11,"offset":315},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":17,"column":9,"offset":313},"end":{"line":17,"column":41,"offset":345},"indent":[]}}],"position":{"start":{"line":16,"column":9,"offset":272},"end":{"line":17,"column":41,"offset":345},"indent":[9]}}],"position":{"start":{"line":15,"column":5,"offset":231},"end":{"line":17,"column":41,"offset":345},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"pwd","position":{"start":{"line":18,"column":7,"offset":352},"end":{"line":18,"column":12,"offset":357},"indent":[]}},{"type":"text","value":" returns current directory","position":{"start":{"line":18,"column":12,"offset":357},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":18,"column":7,"offset":352},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":18,"column":5,"offset":350},"end":{"line":18,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":14,"column":5,"offset":184},"end":{"line":18,"column":38,"offset":383},"indent":[5,5,5,5]}}],"position":{"start":{"line":13,"column":1,"offset":119},"end":{"line":18,"column":38,"offset":383},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":19,"column":3,"offset":386},"end":{"line":19,"column":51,"offset":434},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":19,"column":51,"offset":434},"end":{"line":19,"column":53,"offset":436},"indent":[]}},{"type":"text","value":"path","position":{"start":{"line":19,"column":53,"offset":436},"end":{"line":19,"column":57,"offset":440},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":19,"column":57,"offset":440},"end":{"line":19,"column":59,"offset":442},"indent":[]}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":19,"column":59,"offset":442},"end":{"line":19,"column":124,"offset":507},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":386},"end":{"line":19,"column":124,"offset":507},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":384},"end":{"line":19,"column":124,"offset":507},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":20,"column":3,"offset":510},"end":{"line":20,"column":81,"offset":588},"indent":[]}},{"type":"inlineCode","value":"console.log('hello new world');","position":{"start":{"line":20,"column":81,"offset":588},"end":{"line":20,"column":114,"offset":621},"indent":[]}},{"type":"text","value":" and save it.","position":{"start":{"line":20,"column":114,"offset":621},"end":{"line":20,"column":127,"offset":634},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":510},"end":{"line":20,"column":127,"offset":634},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":508},"end":{"line":20,"column":127,"offset":634},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":21,"column":3,"offset":637},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":637},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":635},"end":{"line":21,"column":56,"offset":690},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":119},"end":{"line":21,"column":56,"offset":690},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":23,"column":5,"offset":696},"end":{"line":23,"column":40,"offset":731},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":692},"end":{"line":23,"column":40,"offset":731},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":25,"column":3,"offset":735},"end":{"line":25,"column":52,"offset":784},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":735},"end":{"line":25,"column":52,"offset":784},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":26,"column":7,"offset":791},"end":{"line":26,"column":65,"offset":849},"indent":[]}}],"position":{"start":{"line":26,"column":7,"offset":791},"end":{"line":26,"column":65,"offset":849},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":27,"column":11,"offset":860},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":11,"offset":860},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":858},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":27,"column":9,"offset":858},"end":{"line":27,"column":35,"offset":884},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":789},"end":{"line":27,"column":35,"offset":884},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":28,"column":7,"offset":891},"end":{"line":28,"column":26,"offset":910},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":28,"column":26,"offset":910},"end":{"line":28,"column":28,"offset":912},"indent":[]}},{"type":"text","value":"including arrays","position":{"start":{"line":28,"column":28,"offset":912},"end":{"line":28,"column":44,"offset":928},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":28,"column":44,"offset":928},"end":{"line":28,"column":46,"offset":930},"indent":[]}}],"position":{"start":{"line":28,"column":7,"offset":891},"end":{"line":28,"column":46,"offset":930},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"references are mutable","position":{"start":{"line":29,"column":11,"offset":941},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":11,"offset":941},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":939},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":29,"column":9,"offset":939},"end":{"line":29,"column":33,"offset":963},"indent":[]}}],"position":{"start":{"line":28,"column":5,"offset":889},"end":{"line":29,"column":33,"offset":963},"indent":[5]}}],"position":{"start":{"line":26,"column":5,"offset":789},"end":{"line":29,"column":33,"offset":963},"indent":[5,5,5]}}],"position":{"start":{"line":25,"column":1,"offset":733},"end":{"line":29,"column":33,"offset":963},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":30,"column":3,"offset":966},"end":{"line":30,"column":24,"offset":987},"indent":[]}},{"type":"inlineCode","value":".","position":{"start":{"line":30,"column":24,"offset":987},"end":{"line":30,"column":27,"offset":990},"indent":[]}},{"type":"text","value":" vs ","position":{"start":{"line":30,"column":27,"offset":990},"end":{"line":30,"column":31,"offset":994},"indent":[]}},{"type":"inlineCode","value":"[]","position":{"start":{"line":30,"column":31,"offset":994},"end":{"line":30,"column":35,"offset":998},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":30,"column":35,"offset":998},"end":{"line":30,"column":70,"offset":1033},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":966},"end":{"line":30,"column":70,"offset":1033},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":31,"column":7,"offset":1040},"end":{"line":31,"column":18,"offset":1051},"indent":[]}},{"type":"inlineCode","value":"object.key","position":{"start":{"line":31,"column":18,"offset":1051},"end":{"line":31,"column":30,"offset":1063},"indent":[]}}],"position":{"start":{"line":31,"column":7,"offset":1040},"end":{"line":31,"column":30,"offset":1063},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to read","position":{"start":{"line":32,"column":11,"offset":1074},"end":{"line":32,"column":25,"offset":1088},"indent":[]}}],"position":{"start":{"line":32,"column":11,"offset":1074},"end":{"line":32,"column":25,"offset":1088},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1072},"end":{"line":32,"column":25,"offset":1088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"easier to write","position":{"start":{"line":33,"column":11,"offset":1099},"end":{"line":33,"column":26,"offset":1114},"indent":[]}}],"position":{"start":{"line":33,"column":11,"offset":1099},"end":{"line":33,"column":26,"offset":1114},"indent":[]}}],"position":{"start":{"line":33,"column":9,"offset":1097},"end":{"line":33,"column":26,"offset":1114},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":34,"column":11,"offset":1125},"end":{"line":34,"column":39,"offset":1153},"indent":[]}}],"position":{"start":{"line":34,"column":11,"offset":1125},"end":{"line":34,"column":39,"offset":1153},"indent":[]}}],"position":{"start":{"line":34,"column":9,"offset":1123},"end":{"line":34,"column":39,"offset":1153},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":35,"column":11,"offset":1164},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":35,"column":11,"offset":1164},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":35,"column":9,"offset":1162},"end":{"line":35,"column":42,"offset":1195},"indent":[]}}],"position":{"start":{"line":32,"column":9,"offset":1072},"end":{"line":35,"column":42,"offset":1195},"indent":[9,9,9]}}],"position":{"start":{"line":31,"column":5,"offset":1038},"end":{"line":35,"column":42,"offset":1195},"indent":[5,5,5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":36,"column":7,"offset":1202},"end":{"line":36,"column":24,"offset":1219},"indent":[]}},{"type":"inlineCode","value":"object[\"key]","position":{"start":{"line":36,"column":24,"offset":1219},"end":{"line":36,"column":38,"offset":1233},"indent":[]}}],"position":{"start":{"line":36,"column":7,"offset":1202},"end":{"line":36,"column":38,"offset":1233},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":37,"column":11,"offset":1244},"end":{"line":37,"column":35,"offset":1268},"indent":[]}}],"position":{"start":{"line":37,"column":11,"offset":1244},"end":{"line":37,"column":35,"offset":1268},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1242},"end":{"line":37,"column":35,"offset":1268},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":38,"column":11,"offset":1279},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":38,"column":11,"offset":1279},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":38,"column":9,"offset":1277},"end":{"line":38,"column":61,"offset":1329},"indent":[]}}],"position":{"start":{"line":37,"column":9,"offset":1242},"end":{"line":38,"column":61,"offset":1329},"indent":[9]}}],"position":{"start":{"line":36,"column":5,"offset":1200},"end":{"line":38,"column":61,"offset":1329},"indent":[5,5]}}],"position":{"start":{"line":31,"column":5,"offset":1038},"end":{"line":38,"column":61,"offset":1329},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":30,"column":1,"offset":964},"end":{"line":38,"column":61,"offset":1329},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":39,"column":3,"offset":1332},"end":{"line":39,"column":66,"offset":1395},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":1332},"end":{"line":39,"column":66,"offset":1395},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":41,"column":7,"offset":1403},"end":{"line":41,"column":106,"offset":1502},"indent":[]}}],"position":{"start":{"line":41,"column":7,"offset":1403},"end":{"line":41,"column":106,"offset":1502},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };","position":{"start":{"line":43,"column":9,"offset":1512},"end":{"line":46,"column":12,"offset":1604},"indent":[9,9,9]}}],"position":{"start":{"line":41,"column":5,"offset":1401},"end":{"line":46,"column":12,"offset":1604},"indent":[1,5,5,5,5]}}],"position":{"start":{"line":41,"column":5,"offset":1401},"end":{"line":46,"column":12,"offset":1604},"indent":[1,5,5,5,5]}}],"position":{"start":{"line":39,"column":1,"offset":1330},"end":{"line":47,"column":1,"offset":1605},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":48,"column":3,"offset":1608},"end":{"line":48,"column":11,"offset":1616},"indent":[]}},{"type":"inlineCode","value":"obj[key] !== undefined","position":{"start":{"line":48,"column":11,"offset":1616},"end":{"line":48,"column":35,"offset":1640},"indent":[]}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":48,"column":35,"offset":1640},"end":{"line":48,"column":112,"offset":1717},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1608},"end":{"line":48,"column":112,"offset":1717},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1606},"end":{"line":48,"column":112,"offset":1717},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"can also use ","position":{"start":{"line":49,"column":5,"offset":1722},"end":{"line":49,"column":18,"offset":1735},"indent":[]}},{"type":"inlineCode","value":"(key in object)","position":{"start":{"line":49,"column":18,"offset":1735},"end":{"line":49,"column":35,"offset":1752},"indent":[]}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":49,"column":35,"offset":1752},"end":{"line":49,"column":59,"offset":1776},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":49,"column":59,"offset":1776},"end":{"line":49,"column":61,"offset":1778},"indent":[]}},{"type":"text","value":"returns a boolean","position":{"start":{"line":49,"column":61,"offset":1778},"end":{"line":49,"column":78,"offset":1795},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":49,"column":78,"offset":1795},"end":{"line":49,"column":80,"offset":1797},"indent":[]}}],"position":{"start":{"line":49,"column":5,"offset":1722},"end":{"line":49,"column":80,"offset":1797},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1720},"end":{"line":49,"column":80,"offset":1797},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1720},"end":{"line":49,"column":80,"offset":1797},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1718},"end":{"line":49,"column":80,"offset":1797},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":50,"column":3,"offset":1800},"end":{"line":50,"column":54,"offset":1851},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1800},"end":{"line":50,"column":54,"offset":1851},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.keys(obj)","position":{"start":{"line":51,"column":7,"offset":1858},"end":{"line":51,"column":25,"offset":1876},"indent":[]}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":51,"column":25,"offset":1876},"end":{"line":51,"column":62,"offset":1913},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":51,"column":62,"offset":1913},"end":{"line":51,"column":67,"offset":1918},"indent":[]}}],"position":{"start":{"line":51,"column":7,"offset":1858},"end":{"line":51,"column":67,"offset":1918},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1856},"end":{"line":51,"column":67,"offset":1918},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.values(obj)","position":{"start":{"line":52,"column":7,"offset":1925},"end":{"line":52,"column":27,"offset":1945},"indent":[]}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":52,"column":27,"offset":1945},"end":{"line":52,"column":62,"offset":1980},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":52,"column":62,"offset":1980},"end":{"line":52,"column":67,"offset":1985},"indent":[]}}],"position":{"start":{"line":52,"column":7,"offset":1925},"end":{"line":52,"column":67,"offset":1985},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1923},"end":{"line":52,"column":67,"offset":1985},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1856},"end":{"line":52,"column":67,"offset":1985},"indent":[5]}}],"position":{"start":{"line":50,"column":1,"offset":1798},"end":{"line":52,"column":67,"offset":1985},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":53,"column":3,"offset":1988},"end":{"line":53,"column":37,"offset":2022},"indent":[]}},{"type":"inlineCode","value":"for in","position":{"start":{"line":53,"column":37,"offset":2022},"end":{"line":53,"column":45,"offset":2030},"indent":[]}},{"type":"text","value":" loop","position":{"start":{"line":53,"column":45,"offset":2030},"end":{"line":53,"column":50,"offset":2035},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1988},"end":{"line":53,"column":50,"offset":2035},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};","position":{"start":{"line":55,"column":5,"offset":2041},"end":{"line":62,"column":8,"offset":2207},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":53,"column":1,"offset":1986},"end":{"line":63,"column":1,"offset":2208},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":64,"column":3,"offset":2211},"end":{"line":64,"column":35,"offset":2243},"indent":[]}},{"type":"inlineCode","value":"...rest","position":{"start":{"line":64,"column":35,"offset":2243},"end":{"line":64,"column":44,"offset":2252},"indent":[]}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":64,"column":44,"offset":2252},"end":{"line":64,"column":94,"offset":2302},"indent":[]}}],"position":{"start":{"line":64,"column":3,"offset":2211},"end":{"line":64,"column":94,"offset":2302},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"...rest","position":{"start":{"line":66,"column":7,"offset":2310},"end":{"line":66,"column":16,"offset":2319},"indent":[]}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":66,"column":16,"offset":2319},"end":{"line":66,"column":71,"offset":2374},"indent":[]}}],"position":{"start":{"line":66,"column":7,"offset":2310},"end":{"line":66,"column":71,"offset":2374},"indent":[]}}],"position":{"start":{"line":66,"column":5,"offset":2308},"end":{"line":66,"column":71,"offset":2374},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":67,"column":7,"offset":2381},"end":{"line":67,"column":63,"offset":2437},"indent":[]}}],"position":{"start":{"line":67,"column":7,"offset":2381},"end":{"line":67,"column":63,"offset":2437},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};","position":{"start":{"line":69,"column":9,"offset":2447},"end":{"line":77,"column":12,"offset":2730},"indent":[9,9,9,9,9,9,9,9]}}],"position":{"start":{"line":67,"column":5,"offset":2379},"end":{"line":77,"column":12,"offset":2730},"indent":[1,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":66,"column":5,"offset":2308},"end":{"line":77,"column":12,"offset":2730},"indent":[5,1,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":64,"column":1,"offset":2209},"end":{"line":77,"column":12,"offset":2730},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":25,"column":1,"offset":733},"end":{"line":77,"column":12,"offset":2730},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":79,"column":1,"offset":2732},"end":{"line":79,"column":4,"offset":2735},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":81,"column":3,"offset":2739},"end":{"line":81,"column":7,"offset":2743},"indent":[]}},{"type":"inlineCode","value":"...spread","position":{"start":{"line":81,"column":7,"offset":2743},"end":{"line":81,"column":18,"offset":2754},"indent":[]}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":81,"column":18,"offset":2754},"end":{"line":81,"column":64,"offset":2800},"indent":[]}}],"position":{"start":{"line":81,"column":3,"offset":2739},"end":{"line":81,"column":64,"offset":2800},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]","position":{"start":{"line":83,"column":5,"offset":2806},"end":{"line":88,"column":8,"offset":3054},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":81,"column":1,"offset":2737},"end":{"line":89,"column":1,"offset":3055},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":90,"column":3,"offset":3058},"end":{"line":90,"column":54,"offset":3109},"indent":[]}}],"position":{"start":{"line":90,"column":3,"offset":3058},"end":{"line":90,"column":54,"offset":3109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":92,"column":5,"offset":3115},"end":{"line":92,"column":7,"offset":3117},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":92,"column":7,"offset":3117},"end":{"line":92,"column":9,"offset":3119},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":92,"column":9,"offset":3119},"end":{"line":92,"column":11,"offset":3121},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":92,"column":11,"offset":3121},"end":{"line":92,"column":21,"offset":3131},"indent":[]}}],"position":{"start":{"line":92,"column":5,"offset":3115},"end":{"line":92,"column":21,"offset":3131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let array = ","position":{"start":{"line":94,"column":5,"offset":3137},"end":{"line":94,"column":17,"offset":3149},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":94,"column":17,"offset":3149},"end":{"line":94,"column":19,"offset":3151},"indent":[]}},{"type":"text","value":"35,9","position":{"start":{"line":94,"column":19,"offset":3151},"end":{"line":94,"column":23,"offset":3155},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":94,"column":23,"offset":3155},"end":{"line":94,"column":25,"offset":3157},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":94,"column":25,"offset":3157},"end":{"line":94,"column":26,"offset":3158},"indent":[]}}],"position":{"start":{"line":94,"column":5,"offset":3137},"end":{"line":94,"column":26,"offset":3158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let ","position":{"start":{"line":96,"column":5,"offset":3164},"end":{"line":96,"column":9,"offset":3168},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":96,"column":9,"offset":3168},"end":{"line":96,"column":11,"offset":3170},"indent":[]}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":96,"column":11,"offset":3170},"end":{"line":96,"column":28,"offset":3187},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":96,"column":28,"offset":3187},"end":{"line":96,"column":30,"offset":3189},"indent":[]}},{"type":"text","value":" = array;","position":{"start":{"line":96,"column":30,"offset":3189},"end":{"line":96,"column":39,"offset":3198},"indent":[]}}],"position":{"start":{"line":96,"column":5,"offset":3164},"end":{"line":96,"column":39,"offset":3198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":98,"column":5,"offset":3204},"end":{"line":98,"column":16,"offset":3215},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":98,"column":16,"offset":3215},"end":{"line":98,"column":18,"offset":3217},"indent":[]}},{"type":"text","value":"firstEl","position":{"start":{"line":98,"column":18,"offset":3217},"end":{"line":98,"column":25,"offset":3224},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":98,"column":25,"offset":3224},"end":{"line":98,"column":27,"offset":3226},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":98,"column":27,"offset":3226},"end":{"line":98,"column":33,"offset":3232},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":98,"column":33,"offset":3232},"end":{"line":98,"column":37,"offset":3236},"indent":[]}},{"type":"text","value":" 35","position":{"start":{"line":98,"column":37,"offset":3236},"end":{"line":98,"column":40,"offset":3239},"indent":[]}}],"position":{"start":{"line":98,"column":5,"offset":3204},"end":{"line":98,"column":40,"offset":3239},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":100,"column":5,"offset":3245},"end":{"line":100,"column":16,"offset":3256},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":100,"column":16,"offset":3256},"end":{"line":100,"column":18,"offset":3258},"indent":[]}},{"type":"text","value":"secondEl","position":{"start":{"line":100,"column":18,"offset":3258},"end":{"line":100,"column":26,"offset":3266},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":100,"column":26,"offset":3266},"end":{"line":100,"column":28,"offset":3268},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":100,"column":28,"offset":3268},"end":{"line":100,"column":34,"offset":3274},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":100,"column":34,"offset":3274},"end":{"line":100,"column":38,"offset":3278},"indent":[]}},{"type":"text","value":" 9","position":{"start":{"line":100,"column":38,"offset":3278},"end":{"line":100,"column":40,"offset":3280},"indent":[]}}],"position":{"start":{"line":100,"column":5,"offset":3245},"end":{"line":100,"column":40,"offset":3280},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3056},"end":{"line":100,"column":40,"offset":3280},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":81,"column":1,"offset":2737},"end":{"line":100,"column":40,"offset":3280},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":102,"column":1,"offset":3282},"end":{"line":102,"column":54,"offset":3335},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":102,"column":54,"offset":3335},"end":{"line":102,"column":56,"offset":3337},"indent":[]}},{"type":"text","value":"35,9,14","position":{"start":{"line":102,"column":56,"offset":3337},"end":{"line":102,"column":63,"offset":3344},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":63,"offset":3344},"end":{"line":102,"column":65,"offset":3346},"indent":[]}},{"type":"text","value":"; let ","position":{"start":{"line":102,"column":65,"offset":3346},"end":{"line":102,"column":71,"offset":3352},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":102,"column":71,"offset":3352},"end":{"line":102,"column":73,"offset":3354},"indent":[]}},{"type":"text","value":"head, ...tail","position":{"start":{"line":102,"column":73,"offset":3354},"end":{"line":102,"column":86,"offset":3367},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":86,"offset":3367},"end":{"line":102,"column":88,"offset":3369},"indent":[]}},{"type":"text","value":" = array; console.log","position":{"start":{"line":102,"column":88,"offset":3369},"end":{"line":102,"column":109,"offset":3390},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":102,"column":109,"offset":3390},"end":{"line":102,"column":111,"offset":3392},"indent":[]}},{"type":"text","value":"head","position":{"start":{"line":102,"column":111,"offset":3392},"end":{"line":102,"column":115,"offset":3396},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":102,"column":115,"offset":3396},"end":{"line":102,"column":117,"offset":3398},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":102,"column":117,"offset":3398},"end":{"line":102,"column":123,"offset":3404},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":102,"column":123,"offset":3404},"end":{"line":102,"column":127,"offset":3408},"indent":[]}},{"type":"text","value":" 35 console.log","position":{"start":{"line":102,"column":127,"offset":3408},"end":{"line":102,"column":142,"offset":3423},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":102,"column":142,"offset":3423},"end":{"line":102,"column":144,"offset":3425},"indent":[]}},{"type":"text","value":"tail","position":{"start":{"line":102,"column":144,"offset":3425},"end":{"line":102,"column":148,"offset":3429},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":102,"column":148,"offset":3429},"end":{"line":102,"column":150,"offset":3431},"indent":[]}},{"type":"text","value":"; // =","position":{"start":{"line":102,"column":150,"offset":3431},"end":{"line":102,"column":156,"offset":3437},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":102,"column":156,"offset":3437},"end":{"line":102,"column":160,"offset":3441},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":102,"column":160,"offset":3441},"end":{"line":102,"column":161,"offset":3442},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":102,"column":161,"offset":3442},"end":{"line":102,"column":163,"offset":3444},"indent":[]}},{"type":"text","value":"9, 14","position":{"start":{"line":102,"column":163,"offset":3444},"end":{"line":102,"column":168,"offset":3449},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":168,"offset":3449},"end":{"line":102,"column":170,"offset":3451},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3282},"end":{"line":102,"column":170,"offset":3451},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```js\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash","position":{"start":{"line":104,"column":1,"offset":3453},"end":{"line":138,"column":4,"offset":4482},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":140,"column":3,"offset":4486},"end":{"line":140,"column":131,"offset":4614},"indent":[]}}],"position":{"start":{"line":140,"column":3,"offset":4486},"end":{"line":140,"column":131,"offset":4614},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}","position":{"start":{"line":142,"column":5,"offset":4620},"end":{"line":153,"column":8,"offset":4939},"indent":[5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":140,"column":1,"offset":4484},"end":{"line":153,"column":8,"offset":4939},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":140,"column":1,"offset":4484},"end":{"line":153,"column":8,"offset":4939},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":155,"column":5,"offset":4945},"end":{"line":155,"column":30,"offset":4970},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4941},"end":{"line":155,"column":30,"offset":4970},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":157,"column":3,"offset":4974},"end":{"line":157,"column":107,"offset":5078},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":4974},"end":{"line":157,"column":107,"offset":5078},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":158,"column":7,"offset":5085},"end":{"line":158,"column":120,"offset":5198},"indent":[]}}],"position":{"start":{"line":158,"column":7,"offset":5085},"end":{"line":158,"column":120,"offset":5198},"indent":[]}}],"position":{"start":{"line":158,"column":5,"offset":5083},"end":{"line":158,"column":120,"offset":5198},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":159,"column":7,"offset":5205},"end":{"line":159,"column":53,"offset":5251},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":159,"column":53,"offset":5251},"end":{"line":159,"column":55,"offset":5253},"indent":[]}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":159,"column":55,"offset":5253},"end":{"line":159,"column":78,"offset":5276},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":159,"column":78,"offset":5276},"end":{"line":159,"column":80,"offset":5278},"indent":[]}}],"position":{"start":{"line":159,"column":7,"offset":5205},"end":{"line":159,"column":80,"offset":5278},"indent":[]}}],"position":{"start":{"line":159,"column":5,"offset":5203},"end":{"line":159,"column":80,"offset":5278},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":160,"column":7,"offset":5285},"end":{"line":160,"column":87,"offset":5365},"indent":[]}}],"position":{"start":{"line":160,"column":7,"offset":5285},"end":{"line":160,"column":87,"offset":5365},"indent":[]}}],"position":{"start":{"line":160,"column":5,"offset":5283},"end":{"line":160,"column":87,"offset":5365},"indent":[]}}],"position":{"start":{"line":158,"column":5,"offset":5083},"end":{"line":160,"column":87,"offset":5365},"indent":[5,5]}}],"position":{"start":{"line":157,"column":1,"offset":4972},"end":{"line":160,"column":87,"offset":5365},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":161,"column":3,"offset":5368},"end":{"line":161,"column":89,"offset":5454},"indent":[]}},{"type":"inlineCode","value":"console.log","position":{"start":{"line":161,"column":89,"offset":5454},"end":{"line":161,"column":102,"offset":5467},"indent":[]}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":161,"column":102,"offset":5467},"end":{"line":161,"column":133,"offset":5498},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":5368},"end":{"line":161,"column":133,"offset":5498},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5366},"end":{"line":161,"column":133,"offset":5498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":162,"column":5,"offset":5503},"end":{"line":162,"column":31,"offset":5529},"indent":[]}}],"position":{"start":{"line":162,"column":5,"offset":5503},"end":{"line":162,"column":31,"offset":5529},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":5501},"end":{"line":162,"column":31,"offset":5529},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":5501},"end":{"line":162,"column":31,"offset":5529},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5499},"end":{"line":162,"column":31,"offset":5529},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":163,"column":3,"offset":5532},"end":{"line":163,"column":131,"offset":5660},"indent":[]}}],"position":{"start":{"line":163,"column":3,"offset":5532},"end":{"line":163,"column":131,"offset":5660},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5530},"end":{"line":163,"column":131,"offset":5660},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4972},"end":{"line":163,"column":131,"offset":5660},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};","position":{"start":{"line":165,"column":1,"offset":5662},"end":{"line":179,"column":4,"offset":6002},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":181,"column":1,"offset":6004},"end":{"line":181,"column":44,"offset":6047},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":44,"offset":6047},"end":{"line":181,"column":46,"offset":6049},"indent":[]}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":181,"column":46,"offset":6049},"end":{"line":181,"column":71,"offset":6074},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":71,"offset":6074},"end":{"line":181,"column":73,"offset":6076},"indent":[]}},{"type":"text","value":" { return Math.max","position":{"start":{"line":181,"column":73,"offset":6076},"end":{"line":181,"column":91,"offset":6094},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":91,"offset":6094},"end":{"line":181,"column":93,"offset":6096},"indent":[]}},{"type":"text","value":"callback1","position":{"start":{"line":181,"column":93,"offset":6096},"end":{"line":181,"column":102,"offset":6105},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":102,"offset":6105},"end":{"line":181,"column":104,"offset":6107},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":181,"column":104,"offset":6107},"end":{"line":181,"column":107,"offset":6110},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":107,"offset":6110},"end":{"line":181,"column":109,"offset":6112},"indent":[]}},{"type":"text","value":", callback2","position":{"start":{"line":181,"column":109,"offset":6112},"end":{"line":181,"column":120,"offset":6123},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":120,"offset":6123},"end":{"line":181,"column":122,"offset":6125},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":181,"column":122,"offset":6125},"end":{"line":181,"column":125,"offset":6128},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":125,"offset":6128},"end":{"line":181,"column":127,"offset":6130},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":127,"offset":6130},"end":{"line":181,"column":129,"offset":6132},"indent":[]}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":181,"column":129,"offset":6132},"end":{"line":181,"column":180,"offset":6183},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":180,"offset":6183},"end":{"line":181,"column":182,"offset":6185},"indent":[]}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":181,"column":182,"offset":6185},"end":{"line":181,"column":195,"offset":6198},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":195,"offset":6198},"end":{"line":181,"column":197,"offset":6200},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":181,"column":197,"offset":6200},"end":{"line":181,"column":199,"offset":6202},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":181,"column":199,"offset":6202},"end":{"line":181,"column":203,"offset":6206},"indent":[]}},{"type":"text","value":" Math.max","position":{"start":{"line":181,"column":203,"offset":6206},"end":{"line":181,"column":212,"offset":6215},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":212,"offset":6215},"end":{"line":181,"column":214,"offset":6217},"indent":[]}},{"type":"text","value":"cb1","position":{"start":{"line":181,"column":214,"offset":6217},"end":{"line":181,"column":217,"offset":6220},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":217,"offset":6220},"end":{"line":181,"column":219,"offset":6222},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":181,"column":219,"offset":6222},"end":{"line":181,"column":222,"offset":6225},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":222,"offset":6225},"end":{"line":181,"column":224,"offset":6227},"indent":[]}},{"type":"text","value":", cb2","position":{"start":{"line":181,"column":224,"offset":6227},"end":{"line":181,"column":229,"offset":6232},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":181,"column":229,"offset":6232},"end":{"line":181,"column":231,"offset":6234},"indent":[]}},{"type":"text","value":"val","position":{"start":{"line":181,"column":231,"offset":6234},"end":{"line":181,"column":234,"offset":6237},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":234,"offset":6237},"end":{"line":181,"column":236,"offset":6239},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":181,"column":236,"offset":6239},"end":{"line":181,"column":238,"offset":6241},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":181,"column":238,"offset":6241},"end":{"line":181,"column":239,"offset":6242},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":6004},"end":{"line":181,"column":239,"offset":6242},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```js\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];","position":{"start":{"line":183,"column":1,"offset":6244},"end":{"line":204,"column":4,"offset":6895},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":206,"column":3,"offset":6899},"end":{"line":206,"column":125,"offset":7021},"indent":[]}},{"type":"inlineCode","value":"Array#filter","position":{"start":{"line":206,"column":125,"offset":7021},"end":{"line":206,"column":139,"offset":7035},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":206,"column":139,"offset":7035},"end":{"line":206,"column":140,"offset":7036},"indent":[]}}],"position":{"start":{"line":206,"column":3,"offset":6899},"end":{"line":206,"column":140,"offset":7036},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};","position":{"start":{"line":208,"column":5,"offset":7042},"end":{"line":217,"column":8,"offset":7299},"indent":[5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":206,"column":1,"offset":6897},"end":{"line":218,"column":1,"offset":7300},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":219,"column":3,"offset":7303},"end":{"line":219,"column":124,"offset":7424},"indent":[]}},{"type":"inlineCode","value":"Array#every","position":{"start":{"line":219,"column":124,"offset":7424},"end":{"line":219,"column":137,"offset":7437},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":219,"column":137,"offset":7437},"end":{"line":219,"column":138,"offset":7438},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":7303},"end":{"line":219,"column":138,"offset":7438},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":221,"column":5,"offset":7444},"end":{"line":239,"column":8,"offset":7929},"indent":[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":219,"column":1,"offset":7301},"end":{"line":239,"column":8,"offset":7929},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":206,"column":1,"offset":6897},"end":{"line":239,"column":8,"offset":7929},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":241,"column":5,"offset":7935},"end":{"line":241,"column":26,"offset":7956},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":7931},"end":{"line":241,"column":26,"offset":7956},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":243,"column":3,"offset":7960},"end":{"line":243,"column":35,"offset":7992},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":243,"column":35,"offset":7992},"end":{"line":243,"column":42,"offset":7999},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":243,"column":42,"offset":7999},"end":{"line":243,"column":44,"offset":8001},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":243,"column":44,"offset":8001},"end":{"line":243,"column":49,"offset":8006},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":243,"column":49,"offset":8006},"end":{"line":243,"column":55,"offset":8012},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":243,"column":55,"offset":8012},"end":{"line":243,"column":60,"offset":8017},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":243,"column":60,"offset":8017},"end":{"line":243,"column":73,"offset":8030},"indent":[]}}],"position":{"start":{"line":243,"column":3,"offset":7960},"end":{"line":243,"column":73,"offset":8030},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":244,"column":7,"offset":8037},"end":{"line":244,"column":14,"offset":8044},"indent":[]}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":244,"column":14,"offset":8044},"end":{"line":244,"column":58,"offset":8088},"indent":[]}}],"position":{"start":{"line":244,"column":7,"offset":8037},"end":{"line":244,"column":58,"offset":8088},"indent":[]}}],"position":{"start":{"line":244,"column":5,"offset":8035},"end":{"line":244,"column":58,"offset":8088},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":245,"column":7,"offset":8095},"end":{"line":245,"column":12,"offset":8100},"indent":[]}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":245,"column":12,"offset":8100},"end":{"line":245,"column":53,"offset":8141},"indent":[]}}],"position":{"start":{"line":245,"column":7,"offset":8095},"end":{"line":245,"column":53,"offset":8141},"indent":[]}}],"position":{"start":{"line":245,"column":5,"offset":8093},"end":{"line":245,"column":53,"offset":8141},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":246,"column":7,"offset":8148},"end":{"line":246,"column":12,"offset":8153},"indent":[]}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":246,"column":12,"offset":8153},"end":{"line":246,"column":123,"offset":8264},"indent":[]}}],"position":{"start":{"line":246,"column":7,"offset":8148},"end":{"line":246,"column":123,"offset":8264},"indent":[]}}],"position":{"start":{"line":246,"column":5,"offset":8146},"end":{"line":246,"column":123,"offset":8264},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":247,"column":7,"offset":8271},"end":{"line":247,"column":97,"offset":8361},"indent":[]}}],"position":{"start":{"line":247,"column":7,"offset":8271},"end":{"line":247,"column":97,"offset":8361},"indent":[]}}],"position":{"start":{"line":247,"column":5,"offset":8269},"end":{"line":247,"column":97,"offset":8361},"indent":[]}}],"position":{"start":{"line":244,"column":5,"offset":8035},"end":{"line":247,"column":97,"offset":8361},"indent":[5,5,5]}}],"position":{"start":{"line":243,"column":1,"offset":7958},"end":{"line":247,"column":97,"offset":8361},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":248,"column":3,"offset":8364},"end":{"line":248,"column":34,"offset":8395},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":248,"column":34,"offset":8395},"end":{"line":248,"column":41,"offset":8402},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":248,"column":41,"offset":8402},"end":{"line":248,"column":43,"offset":8404},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":248,"column":43,"offset":8404},"end":{"line":248,"column":48,"offset":8409},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":248,"column":48,"offset":8409},"end":{"line":248,"column":54,"offset":8415},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":248,"column":54,"offset":8415},"end":{"line":248,"column":59,"offset":8420},"indent":[]}},{"type":"text","value":" declarations","position":{"start":{"line":248,"column":59,"offset":8420},"end":{"line":248,"column":72,"offset":8433},"indent":[]}}],"position":{"start":{"line":248,"column":3,"offset":8364},"end":{"line":248,"column":72,"offset":8433},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":249,"column":7,"offset":8440},"end":{"line":249,"column":12,"offset":8445},"indent":[]}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":249,"column":12,"offset":8445},"end":{"line":249,"column":93,"offset":8526},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":249,"column":93,"offset":8526},"end":{"line":249,"column":95,"offset":8528},"indent":[]}},{"type":"text","value":"but not assignment","position":{"start":{"line":249,"column":95,"offset":8528},"end":{"line":249,"column":113,"offset":8546},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":249,"column":113,"offset":8546},"end":{"line":249,"column":115,"offset":8548},"indent":[]}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":249,"column":115,"offset":8548},"end":{"line":249,"column":128,"offset":8561},"indent":[]}}],"position":{"start":{"line":249,"column":7,"offset":8440},"end":{"line":249,"column":128,"offset":8561},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":250,"column":11,"offset":8572},"end":{"line":250,"column":83,"offset":8644},"indent":[]}}],"position":{"start":{"line":250,"column":11,"offset":8572},"end":{"line":250,"column":83,"offset":8644},"indent":[]}}],"position":{"start":{"line":250,"column":9,"offset":8570},"end":{"line":250,"column":83,"offset":8644},"indent":[]}}],"position":{"start":{"line":250,"column":9,"offset":8570},"end":{"line":250,"column":83,"offset":8644},"indent":[]}}],"position":{"start":{"line":249,"column":5,"offset":8438},"end":{"line":250,"column":83,"offset":8644},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":251,"column":7,"offset":8651},"end":{"line":251,"column":12,"offset":8656},"indent":[]}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":251,"column":12,"offset":8656},"end":{"line":251,"column":64,"offset":8708},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":251,"column":64,"offset":8708},"end":{"line":251,"column":69,"offset":8713},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":251,"column":69,"offset":8713},"end":{"line":251,"column":73,"offset":8717},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":251,"column":73,"offset":8717},"end":{"line":251,"column":80,"offset":8724},"indent":[]}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":251,"column":80,"offset":8724},"end":{"line":251,"column":141,"offset":8785},"indent":[]}}],"position":{"start":{"line":251,"column":7,"offset":8651},"end":{"line":251,"column":141,"offset":8785},"indent":[]}}],"position":{"start":{"line":251,"column":5,"offset":8649},"end":{"line":251,"column":141,"offset":8785},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":252,"column":7,"offset":8792},"end":{"line":252,"column":14,"offset":8799},"indent":[]}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":252,"column":14,"offset":8799},"end":{"line":252,"column":153,"offset":8938},"indent":[]}}],"position":{"start":{"line":252,"column":7,"offset":8792},"end":{"line":252,"column":153,"offset":8938},"indent":[]}}],"position":{"start":{"line":252,"column":5,"offset":8790},"end":{"line":252,"column":153,"offset":8938},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":253,"column":7,"offset":8945},"end":{"line":253,"column":82,"offset":9020},"indent":[]}}],"position":{"start":{"line":253,"column":7,"offset":8945},"end":{"line":253,"column":82,"offset":9020},"indent":[]}}],"position":{"start":{"line":253,"column":5,"offset":8943},"end":{"line":253,"column":82,"offset":9020},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":254,"column":7,"offset":9027},"end":{"line":254,"column":121,"offset":9141},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":254,"column":121,"offset":9141},"end":{"line":254,"column":132,"offset":9152},"indent":[]}},{"type":"text","value":" like ","position":{"start":{"line":254,"column":132,"offset":9152},"end":{"line":254,"column":138,"offset":9158},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":254,"column":138,"offset":9158},"end":{"line":254,"column":143,"offset":9163},"indent":[]}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":254,"column":143,"offset":9163},"end":{"line":254,"column":248,"offset":9268},"indent":[]}}],"position":{"start":{"line":254,"column":7,"offset":9027},"end":{"line":254,"column":248,"offset":9268},"indent":[]}}],"position":{"start":{"line":254,"column":5,"offset":9025},"end":{"line":254,"column":248,"offset":9268},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":255,"column":7,"offset":9275},"end":{"line":255,"column":25,"offset":9293},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":255,"column":25,"offset":9293},"end":{"line":255,"column":30,"offset":9298},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":255,"column":30,"offset":9298},"end":{"line":255,"column":34,"offset":9302},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":255,"column":34,"offset":9302},"end":{"line":255,"column":39,"offset":9307},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":255,"column":39,"offset":9307},"end":{"line":255,"column":43,"offset":9311},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":255,"column":43,"offset":9311},"end":{"line":255,"column":50,"offset":9318},"indent":[]}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":255,"column":50,"offset":9318},"end":{"line":255,"column":111,"offset":9379},"indent":[]}}],"position":{"start":{"line":255,"column":7,"offset":9275},"end":{"line":255,"column":111,"offset":9379},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":256,"column":11,"offset":9390},"end":{"line":256,"column":86,"offset":9465},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":256,"column":86,"offset":9465},"end":{"line":256,"column":88,"offset":9467},"indent":[]}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":256,"column":88,"offset":9467},"end":{"line":256,"column":146,"offset":9525},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":256,"column":146,"offset":9525},"end":{"line":256,"column":148,"offset":9527},"indent":[]}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":256,"column":148,"offset":9527},"end":{"line":256,"column":240,"offset":9619},"indent":[]}}],"position":{"start":{"line":256,"column":11,"offset":9390},"end":{"line":256,"column":240,"offset":9619},"indent":[]}}],"position":{"start":{"line":256,"column":9,"offset":9388},"end":{"line":256,"column":240,"offset":9619},"indent":[]}}],"position":{"start":{"line":256,"column":9,"offset":9388},"end":{"line":256,"column":240,"offset":9619},"indent":[]}}],"position":{"start":{"line":255,"column":5,"offset":9273},"end":{"line":256,"column":240,"offset":9619},"indent":[5]}}],"position":{"start":{"line":249,"column":5,"offset":8438},"end":{"line":256,"column":240,"offset":9619},"indent":[5,5,5,5,5,5,5]}}],"position":{"start":{"line":248,"column":1,"offset":8362},"end":{"line":256,"column":240,"offset":9619},"indent":[1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":257,"column":3,"offset":9622},"end":{"line":257,"column":110,"offset":9729},"indent":[]}}],"position":{"start":{"line":257,"column":3,"offset":9622},"end":{"line":257,"column":110,"offset":9729},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":258,"column":7,"offset":9736},"end":{"line":258,"column":98,"offset":9827},"indent":[]}}],"position":{"start":{"line":258,"column":7,"offset":9736},"end":{"line":258,"column":98,"offset":9827},"indent":[]}}],"position":{"start":{"line":258,"column":5,"offset":9734},"end":{"line":258,"column":98,"offset":9827},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":259,"column":7,"offset":9834},"end":{"line":259,"column":42,"offset":9869},"indent":[]}},{"type":"inlineCode","value":"window","position":{"start":{"line":259,"column":42,"offset":9869},"end":{"line":259,"column":50,"offset":9877},"indent":[]}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":259,"column":50,"offset":9877},"end":{"line":259,"column":81,"offset":9908},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":259,"column":81,"offset":9908},"end":{"line":259,"column":89,"offset":9916},"indent":[]}},{"type":"text","value":" object in Node.js","position":{"start":{"line":259,"column":89,"offset":9916},"end":{"line":259,"column":107,"offset":9934},"indent":[]}}],"position":{"start":{"line":259,"column":7,"offset":9834},"end":{"line":259,"column":107,"offset":9934},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":260,"column":11,"offset":9945},"end":{"line":260,"column":97,"offset":10031},"indent":[]}}],"position":{"start":{"line":260,"column":11,"offset":9945},"end":{"line":260,"column":97,"offset":10031},"indent":[]}}],"position":{"start":{"line":260,"column":9,"offset":9943},"end":{"line":260,"column":97,"offset":10031},"indent":[]}}],"position":{"start":{"line":260,"column":9,"offset":9943},"end":{"line":260,"column":97,"offset":10031},"indent":[]}}],"position":{"start":{"line":259,"column":5,"offset":9832},"end":{"line":260,"column":97,"offset":10031},"indent":[5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":261,"column":7,"offset":10038},"end":{"line":261,"column":80,"offset":10111},"indent":[]}}],"position":{"start":{"line":261,"column":7,"offset":10038},"end":{"line":261,"column":80,"offset":10111},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":262,"column":11,"offset":10122},"end":{"line":262,"column":57,"offset":10168},"indent":[]}}],"position":{"start":{"line":262,"column":11,"offset":10122},"end":{"line":262,"column":57,"offset":10168},"indent":[]}}],"position":{"start":{"line":262,"column":9,"offset":10120},"end":{"line":262,"column":57,"offset":10168},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":263,"column":11,"offset":10179},"end":{"line":263,"column":157,"offset":10325},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":263,"column":157,"offset":10325},"end":{"line":263,"column":159,"offset":10327},"indent":[]}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":263,"column":159,"offset":10327},"end":{"line":263,"column":182,"offset":10350},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":263,"column":182,"offset":10350},"end":{"line":263,"column":184,"offset":10352},"indent":[]}}],"position":{"start":{"line":263,"column":11,"offset":10179},"end":{"line":263,"column":184,"offset":10352},"indent":[]}}],"position":{"start":{"line":263,"column":9,"offset":10177},"end":{"line":263,"column":184,"offset":10352},"indent":[]}}],"position":{"start":{"line":262,"column":9,"offset":10120},"end":{"line":263,"column":184,"offset":10352},"indent":[9]}}],"position":{"start":{"line":261,"column":5,"offset":10036},"end":{"line":263,"column":184,"offset":10352},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"for blocks ","position":{"start":{"line":264,"column":7,"offset":10359},"end":{"line":264,"column":18,"offset":10370},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":264,"column":18,"offset":10370},"end":{"line":264,"column":20,"offset":10372},"indent":[]}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":264,"column":20,"offset":10372},"end":{"line":264,"column":44,"offset":10396},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":264,"column":44,"offset":10396},"end":{"line":264,"column":48,"offset":10400},"indent":[]}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":264,"column":48,"offset":10400},"end":{"line":264,"column":72,"offset":10424},"indent":[]}},{"type":"inlineCode","value":"for","position":{"start":{"line":264,"column":72,"offset":10424},"end":{"line":264,"column":77,"offset":10429},"indent":[]}},{"type":"text","value":" loops","position":{"start":{"line":264,"column":77,"offset":10429},"end":{"line":264,"column":83,"offset":10435},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":264,"column":83,"offset":10435},"end":{"line":264,"column":85,"offset":10437},"indent":[]}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":264,"column":85,"offset":10437},"end":{"line":264,"column":116,"offset":10468},"indent":[]}}],"position":{"start":{"line":264,"column":7,"offset":10359},"end":{"line":264,"column":116,"offset":10468},"indent":[]}}],"position":{"start":{"line":264,"column":5,"offset":10357},"end":{"line":264,"column":116,"offset":10468},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":265,"column":7,"offset":10475},"end":{"line":265,"column":71,"offset":10539},"indent":[]}}],"position":{"start":{"line":265,"column":7,"offset":10475},"end":{"line":265,"column":71,"offset":10539},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":266,"column":11,"offset":10550},"end":{"line":266,"column":153,"offset":10692},"indent":[]}}],"position":{"start":{"line":266,"column":11,"offset":10550},"end":{"line":266,"column":153,"offset":10692},"indent":[]}}],"position":{"start":{"line":266,"column":9,"offset":10548},"end":{"line":266,"column":153,"offset":10692},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":267,"column":11,"offset":10703},"end":{"line":267,"column":61,"offset":10753},"indent":[]}}],"position":{"start":{"line":267,"column":11,"offset":10703},"end":{"line":267,"column":61,"offset":10753},"indent":[]}}],"position":{"start":{"line":267,"column":9,"offset":10701},"end":{"line":267,"column":61,"offset":10753},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":268,"column":11,"offset":10764},"end":{"line":268,"column":68,"offset":10821},"indent":[]}}],"position":{"start":{"line":268,"column":11,"offset":10764},"end":{"line":268,"column":68,"offset":10821},"indent":[]}}],"position":{"start":{"line":268,"column":9,"offset":10762},"end":{"line":268,"column":68,"offset":10821},"indent":[]}}],"position":{"start":{"line":266,"column":9,"offset":10548},"end":{"line":268,"column":68,"offset":10821},"indent":[9,9]}}],"position":{"start":{"line":265,"column":5,"offset":10473},"end":{"line":268,"column":68,"offset":10821},"indent":[5,5,5]}}],"position":{"start":{"line":258,"column":5,"offset":9734},"end":{"line":268,"column":68,"offset":10821},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":257,"column":1,"offset":9620},"end":{"line":268,"column":68,"offset":10821},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":269,"column":3,"offset":10824},"end":{"line":269,"column":27,"offset":10848},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":10824},"end":{"line":269,"column":27,"offset":10848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":271,"column":5,"offset":10854},"end":{"line":271,"column":7,"offset":10856},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":271,"column":7,"offset":10856},"end":{"line":271,"column":9,"offset":10858},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":271,"column":9,"offset":10858},"end":{"line":271,"column":11,"offset":10860},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":271,"column":11,"offset":10860},"end":{"line":271,"column":21,"offset":10870},"indent":[]}}],"position":{"start":{"line":271,"column":5,"offset":10854},"end":{"line":271,"column":21,"offset":10870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":273,"column":5,"offset":10876},"end":{"line":273,"column":25,"offset":10896},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":273,"column":25,"offset":10896},"end":{"line":273,"column":27,"offset":10898},"indent":[]}},{"type":"text","value":"param1, param2","position":{"start":{"line":273,"column":27,"offset":10898},"end":{"line":273,"column":41,"offset":10912},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":273,"column":41,"offset":10912},"end":{"line":273,"column":43,"offset":10914},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":273,"column":43,"offset":10914},"end":{"line":273,"column":45,"offset":10916},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":273,"column":45,"offset":10916},"end":{"line":273,"column":49,"offset":10920},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":273,"column":49,"offset":10920},"end":{"line":273,"column":51,"offset":10922},"indent":[]}}],"position":{"start":{"line":273,"column":5,"offset":10876},"end":{"line":273,"column":51,"offset":10922},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":275,"column":5,"offset":10928},"end":{"line":275,"column":31,"offset":10954},"indent":[]}}],"position":{"start":{"line":275,"column":5,"offset":10928},"end":{"line":275,"column":31,"offset":10954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return sum;","position":{"start":{"line":277,"column":5,"offset":10960},"end":{"line":277,"column":16,"offset":10971},"indent":[]}}],"position":{"start":{"line":277,"column":5,"offset":10960},"end":{"line":277,"column":16,"offset":10971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":279,"column":5,"offset":10977},"end":{"line":279,"column":6,"offset":10978},"indent":[]}}],"position":{"start":{"line":279,"column":5,"offset":10977},"end":{"line":279,"column":6,"offset":10978},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":10822},"end":{"line":279,"column":6,"offset":10978},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":243,"column":1,"offset":7958},"end":{"line":279,"column":6,"offset":10978},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":281,"column":1,"offset":10980},"end":{"line":281,"column":84,"offset":11063},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":281,"column":84,"offset":11063},"end":{"line":281,"column":88,"offset":11067},"indent":[]}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":281,"column":88,"offset":11067},"end":{"line":281,"column":118,"offset":11097},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":10980},"end":{"line":281,"column":118,"offset":11097},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":283,"column":1,"offset":11099},"end":{"line":283,"column":96,"offset":11194},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":283,"column":96,"offset":11194},"end":{"line":283,"column":100,"offset":11198},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":283,"column":100,"offset":11198},"end":{"line":283,"column":111,"offset":11209},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":11099},"end":{"line":283,"column":111,"offset":11209},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":285,"column":1,"offset":11211},"end":{"line":285,"column":103,"offset":11313},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":285,"column":103,"offset":11313},"end":{"line":285,"column":107,"offset":11317},"indent":[]}},{"type":"text","value":" param + 1;","position":{"start":{"line":285,"column":107,"offset":11317},"end":{"line":285,"column":118,"offset":11328},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":11211},"end":{"line":285,"column":118,"offset":11328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":287,"column":1,"offset":11330},"end":{"line":287,"column":3,"offset":11332},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":287,"column":3,"offset":11332},"end":{"line":287,"column":5,"offset":11334},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":287,"column":5,"offset":11334},"end":{"line":287,"column":7,"offset":11336},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":11330},"end":{"line":287,"column":7,"offset":11336},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":289,"column":3,"offset":11340},"end":{"line":289,"column":48,"offset":11385},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":289,"column":48,"offset":11385},"end":{"line":289,"column":54,"offset":11391},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":289,"column":54,"offset":11391},"end":{"line":289,"column":81,"offset":11418},"indent":[]}}],"position":{"start":{"line":289,"column":3,"offset":11340},"end":{"line":289,"column":81,"offset":11418},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":291,"column":7,"offset":11426},"end":{"line":291,"column":83,"offset":11502},"indent":[]}}],"position":{"start":{"line":291,"column":7,"offset":11426},"end":{"line":291,"column":83,"offset":11502},"indent":[]}}],"position":{"start":{"line":291,"column":5,"offset":11424},"end":{"line":291,"column":83,"offset":11502},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":292,"column":7,"offset":11509},"end":{"line":292,"column":73,"offset":11575},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":292,"column":73,"offset":11575},"end":{"line":292,"column":75,"offset":11577},"indent":[]}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":292,"column":75,"offset":11577},"end":{"line":292,"column":109,"offset":11611},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":292,"column":109,"offset":11611},"end":{"line":292,"column":124,"offset":11626},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":292,"column":124,"offset":11626},"end":{"line":292,"column":126,"offset":11628},"indent":[]}}],"position":{"start":{"line":292,"column":7,"offset":11509},"end":{"line":292,"column":126,"offset":11628},"indent":[]}}],"position":{"start":{"line":292,"column":5,"offset":11507},"end":{"line":292,"column":126,"offset":11628},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":293,"column":7,"offset":11635},"end":{"line":293,"column":147,"offset":11775},"indent":[]}}],"position":{"start":{"line":293,"column":7,"offset":11635},"end":{"line":293,"column":147,"offset":11775},"indent":[]}}],"position":{"start":{"line":293,"column":5,"offset":11633},"end":{"line":293,"column":147,"offset":11775},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":294,"column":7,"offset":11782},"end":{"line":294,"column":69,"offset":11844},"indent":[]}}],"position":{"start":{"line":294,"column":7,"offset":11782},"end":{"line":294,"column":69,"offset":11844},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":296,"column":9,"offset":11854},"end":{"line":296,"column":11,"offset":11856},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":296,"column":11,"offset":11856},"end":{"line":296,"column":13,"offset":11858},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":296,"column":13,"offset":11858},"end":{"line":296,"column":15,"offset":11860},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":296,"column":15,"offset":11860},"end":{"line":296,"column":25,"offset":11870},"indent":[]}}],"position":{"start":{"line":296,"column":9,"offset":11854},"end":{"line":296,"column":25,"offset":11870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let obj = {","position":{"start":{"line":298,"column":9,"offset":11880},"end":{"line":298,"column":20,"offset":11891},"indent":[]}}],"position":{"start":{"line":298,"column":9,"offset":11880},"end":{"line":298,"column":20,"offset":11891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":300,"column":9,"offset":11901},"end":{"line":300,"column":27,"offset":11919},"indent":[]}}],"position":{"start":{"line":300,"column":9,"offset":11901},"end":{"line":300,"column":27,"offset":11919},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":302,"column":9,"offset":11929},"end":{"line":302,"column":31,"offset":11951},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":302,"column":31,"offset":11951},"end":{"line":302,"column":33,"offset":11953},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":302,"column":33,"offset":11953},"end":{"line":302,"column":35,"offset":11955},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":302,"column":35,"offset":11955},"end":{"line":302,"column":37,"offset":11957},"indent":[]}}],"position":{"start":{"line":302,"column":9,"offset":11929},"end":{"line":302,"column":37,"offset":11957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"return this.name;","position":{"start":{"line":304,"column":9,"offset":11967},"end":{"line":304,"column":26,"offset":11984},"indent":[]}}],"position":{"start":{"line":304,"column":9,"offset":11967},"end":{"line":304,"column":26,"offset":11984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":306,"column":9,"offset":11994},"end":{"line":306,"column":72,"offset":12057},"indent":[]}}],"position":{"start":{"line":306,"column":9,"offset":11994},"end":{"line":306,"column":72,"offset":12057},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":308,"column":9,"offset":12067},"end":{"line":308,"column":11,"offset":12069},"indent":[]}}],"position":{"start":{"line":308,"column":9,"offset":12067},"end":{"line":308,"column":11,"offset":12069},"indent":[]}}],"position":{"start":{"line":294,"column":5,"offset":11780},"end":{"line":308,"column":11,"offset":12069},"indent":[1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":291,"column":5,"offset":11424},"end":{"line":308,"column":11,"offset":12069},"indent":[5,5,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5]}}],"position":{"start":{"line":289,"column":1,"offset":11338},"end":{"line":308,"column":11,"offset":12069},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":289,"column":1,"offset":11338},"end":{"line":308,"column":11,"offset":12069},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":310,"column":1,"offset":12071},"end":{"line":310,"column":4,"offset":12074},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":312,"column":1,"offset":12076},"end":{"line":312,"column":16,"offset":12091},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":312,"column":16,"offset":12091},"end":{"line":312,"column":18,"offset":12093},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":312,"column":18,"offset":12093},"end":{"line":312,"column":20,"offset":12095},"indent":[]}},{"type":"text","value":" =","position":{"start":{"line":312,"column":20,"offset":12095},"end":{"line":312,"column":22,"offset":12097},"indent":[]}},{"type":"text","value":">","position":{"start":{"line":312,"column":22,"offset":12097},"end":{"line":312,"column":26,"offset":12101},"indent":[]}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":312,"column":26,"offset":12101},"end":{"line":312,"column":212,"offset":12287},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":12076},"end":{"line":312,"column":212,"offset":12287},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined","position":{"start":{"line":314,"column":1,"offset":12289},"end":{"line":353,"column":4,"offset":15402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"}","position":{"start":{"line":355,"column":1,"offset":15404},"end":{"line":355,"column":2,"offset":15405},"indent":[]}}],"position":{"start":{"line":355,"column":1,"offset":15404},"end":{"line":355,"column":2,"offset":15405},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n---\n\n\n```js\n\n\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());","position":{"start":{"line":357,"column":1,"offset":15407},"end":{"line":423,"column":4,"offset":18360},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":425,"column":3,"offset":18364},"end":{"line":425,"column":35,"offset":18396},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":425,"column":35,"offset":18396},"end":{"line":425,"column":41,"offset":18402},"indent":[]}},{"type":"text","value":" on an object literal","position":{"start":{"line":425,"column":41,"offset":18402},"end":{"line":425,"column":62,"offset":18423},"indent":[]}}],"position":{"start":{"line":425,"column":3,"offset":18364},"end":{"line":425,"column":62,"offset":18423},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we use ","position":{"start":{"line":426,"column":7,"offset":18430},"end":{"line":426,"column":19,"offset":18442},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":426,"column":19,"offset":18442},"end":{"line":426,"column":25,"offset":18448},"indent":[]}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":426,"column":25,"offset":18448},"end":{"line":426,"column":91,"offset":18514},"indent":[]}}],"position":{"start":{"line":426,"column":7,"offset":18430},"end":{"line":426,"column":91,"offset":18514},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":427,"column":11,"offset":18525},"end":{"line":427,"column":108,"offset":18622},"indent":[]}}],"position":{"start":{"line":427,"column":11,"offset":18525},"end":{"line":427,"column":108,"offset":18622},"indent":[]}}],"position":{"start":{"line":427,"column":9,"offset":18523},"end":{"line":427,"column":108,"offset":18622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":428,"column":11,"offset":18633},"end":{"line":428,"column":37,"offset":18659},"indent":[]}},{"type":"inlineCode","value":"object.method(args)","position":{"start":{"line":428,"column":37,"offset":18659},"end":{"line":428,"column":58,"offset":18680},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":428,"column":58,"offset":18680},"end":{"line":428,"column":59,"offset":18681},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":428,"column":59,"offset":18681},"end":{"line":428,"column":61,"offset":18683},"indent":[]}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":428,"column":61,"offset":18683},"end":{"line":428,"column":89,"offset":18711},"indent":[]}},{"type":"inlineCode","value":"Array#push","position":{"start":{"line":428,"column":89,"offset":18711},"end":{"line":428,"column":101,"offset":18723},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":428,"column":101,"offset":18723},"end":{"line":428,"column":106,"offset":18728},"indent":[]}},{"type":"inlineCode","value":"String#toUpperCase","position":{"start":{"line":428,"column":106,"offset":18728},"end":{"line":428,"column":126,"offset":18748},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":428,"column":126,"offset":18748},"end":{"line":428,"column":128,"offset":18750},"indent":[]}}],"position":{"start":{"line":428,"column":11,"offset":18633},"end":{"line":428,"column":128,"offset":18750},"indent":[]}}],"position":{"start":{"line":428,"column":9,"offset":18631},"end":{"line":428,"column":128,"offset":18750},"indent":[]}}],"position":{"start":{"line":427,"column":9,"offset":18523},"end":{"line":428,"column":128,"offset":18750},"indent":[9]}}],"position":{"start":{"line":426,"column":5,"offset":18428},"end":{"line":428,"column":128,"offset":18750},"indent":[5,5]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":429,"column":7,"offset":18757},"end":{"line":429,"column":53,"offset":18803},"indent":[]}}],"position":{"start":{"line":429,"column":7,"offset":18757},"end":{"line":429,"column":53,"offset":18803},"indent":[]}}],"position":{"start":{"line":429,"column":5,"offset":18755},"end":{"line":429,"column":53,"offset":18803},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":430,"column":7,"offset":18810},"end":{"line":430,"column":85,"offset":18888},"indent":[]}}],"position":{"start":{"line":430,"column":7,"offset":18810},"end":{"line":430,"column":85,"offset":18888},"indent":[]}}],"position":{"start":{"line":430,"column":5,"offset":18808},"end":{"line":430,"column":85,"offset":18888},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":431,"column":7,"offset":18895},"end":{"line":431,"column":114,"offset":19002},"indent":[]}}],"position":{"start":{"line":431,"column":7,"offset":18895},"end":{"line":431,"column":114,"offset":19002},"indent":[]}}],"position":{"start":{"line":431,"column":5,"offset":18893},"end":{"line":431,"column":114,"offset":19002},"indent":[]}}],"position":{"start":{"line":426,"column":5,"offset":18428},"end":{"line":431,"column":114,"offset":19002},"indent":[5,5,5,5,5]}}],"position":{"start":{"line":425,"column":1,"offset":18362},"end":{"line":431,"column":114,"offset":19002},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":432,"column":3,"offset":19005},"end":{"line":432,"column":24,"offset":19026},"indent":[]}},{"type":"inlineCode","value":"Function#bind","position":{"start":{"line":432,"column":24,"offset":19026},"end":{"line":432,"column":39,"offset":19041},"indent":[]}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":432,"column":39,"offset":19041},"end":{"line":432,"column":85,"offset":19087},"indent":[]}}],"position":{"start":{"line":432,"column":3,"offset":19005},"end":{"line":432,"column":85,"offset":19087},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":434,"column":7,"offset":19095},"end":{"line":434,"column":131,"offset":19219},"indent":[]}}],"position":{"start":{"line":434,"column":7,"offset":19095},"end":{"line":434,"column":131,"offset":19219},"indent":[]}}],"position":{"start":{"line":434,"column":5,"offset":19093},"end":{"line":434,"column":131,"offset":19219},"indent":[]}}],"position":{"start":{"line":434,"column":5,"offset":19093},"end":{"line":434,"column":131,"offset":19219},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"","position":{"start":{"line":436,"column":5,"offset":19225},"end":{"line":449,"column":8,"offset":19636},"indent":[5,5,5,5,5,5,5,5,5,1,5,5,5]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":451,"column":5,"offset":19642},"end":{"line":451,"column":7,"offset":19644},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":451,"column":7,"offset":19644},"end":{"line":451,"column":9,"offset":19646},"indent":[]}}],"position":{"start":{"line":451,"column":5,"offset":19642},"end":{"line":451,"column":9,"offset":19646},"indent":[]}}],"position":{"start":{"line":432,"column":1,"offset":19003},"end":{"line":451,"column":9,"offset":19646},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":425,"column":1,"offset":18362},"end":{"line":451,"column":9,"offset":19646},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":453,"column":1,"offset":19648},"end":{"line":453,"column":4,"offset":19651},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":455,"column":1,"offset":19653},"end":{"line":455,"column":4,"offset":19656},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":457,"column":1,"offset":19658},"end":{"line":484,"column":4,"offset":21598},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":486,"column":3,"offset":21602},"end":{"line":486,"column":58,"offset":21657},"indent":[]}}],"position":{"start":{"line":486,"column":3,"offset":21602},"end":{"line":486,"column":58,"offset":21657},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":487,"column":7,"offset":21664},"end":{"line":487,"column":103,"offset":21760},"indent":[]}}],"position":{"start":{"line":487,"column":7,"offset":21664},"end":{"line":487,"column":103,"offset":21760},"indent":[]}}],"position":{"start":{"line":487,"column":5,"offset":21662},"end":{"line":487,"column":103,"offset":21760},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":488,"column":7,"offset":21767},"end":{"line":488,"column":103,"offset":21863},"indent":[]}}],"position":{"start":{"line":488,"column":7,"offset":21767},"end":{"line":488,"column":103,"offset":21863},"indent":[]}}],"position":{"start":{"line":488,"column":5,"offset":21765},"end":{"line":488,"column":103,"offset":21863},"indent":[]}}],"position":{"start":{"line":487,"column":5,"offset":21662},"end":{"line":488,"column":103,"offset":21863},"indent":[5]}}],"position":{"start":{"line":486,"column":1,"offset":21600},"end":{"line":488,"column":103,"offset":21863},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":489,"column":3,"offset":21866},"end":{"line":489,"column":53,"offset":21916},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":489,"column":53,"offset":21916},"end":{"line":489,"column":59,"offset":21922},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":489,"column":59,"offset":21922},"end":{"line":489,"column":181,"offset":22044},"indent":[]}}],"position":{"start":{"line":489,"column":3,"offset":21866},"end":{"line":489,"column":181,"offset":22044},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":491,"column":5,"offset":22050},"end":{"line":501,"column":8,"offset":22298},"indent":[5,5,5,5,5,5,5,5,5,5]}}],"position":{"start":{"line":489,"column":1,"offset":21864},"end":{"line":501,"column":8,"offset":22298},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":486,"column":1,"offset":21600},"end":{"line":501,"column":8,"offset":22298},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":503,"column":1,"offset":22300},"end":{"line":503,"column":29,"offset":22328},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":503,"column":29,"offset":22328},"end":{"line":503,"column":44,"offset":22343},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":503,"column":44,"offset":22343},"end":{"line":503,"column":105,"offset":22404},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":503,"column":105,"offset":22404},"end":{"line":503,"column":111,"offset":22410},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":503,"column":111,"offset":22410},"end":{"line":503,"column":148,"offset":22447},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":503,"column":148,"offset":22447},"end":{"line":503,"column":154,"offset":22453},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":503,"column":154,"offset":22453},"end":{"line":503,"column":274,"offset":22573},"indent":[]}}],"position":{"start":{"line":503,"column":1,"offset":22300},"end":{"line":503,"column":274,"offset":22573},"indent":[]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":505,"column":1,"offset":22575},"end":{"line":505,"column":4,"offset":22578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":507,"column":1,"offset":22580},"end":{"line":507,"column":40,"offset":22619},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":507,"column":40,"offset":22619},"end":{"line":507,"column":42,"offset":22621},"indent":[]}},{"type":"text","value":"sayMeow","position":{"start":{"line":507,"column":42,"offset":22621},"end":{"line":507,"column":49,"offset":22628},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":507,"column":49,"offset":22628},"end":{"line":507,"column":51,"offset":22630},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":507,"column":51,"offset":22630},"end":{"line":507,"column":53,"offset":22632},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":507,"column":53,"offset":22632},"end":{"line":507,"column":55,"offset":22634},"indent":[]}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":507,"column":55,"offset":22634},"end":{"line":507,"column":98,"offset":22677},"indent":[]}}],"position":{"start":{"line":507,"column":1,"offset":22580},"end":{"line":507,"column":98,"offset":22677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":509,"column":1,"offset":22679},"end":{"line":509,"column":69,"offset":22747},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":509,"column":69,"offset":22747},"end":{"line":509,"column":75,"offset":22753},"indent":[]}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":509,"column":75,"offset":22753},"end":{"line":509,"column":125,"offset":22803},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":509,"column":125,"offset":22803},"end":{"line":509,"column":127,"offset":22805},"indent":[]}},{"type":"text","value":"cat","position":{"start":{"line":509,"column":127,"offset":22805},"end":{"line":509,"column":130,"offset":22808},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":509,"column":130,"offset":22808},"end":{"line":509,"column":132,"offset":22810},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":509,"column":132,"offset":22810},"end":{"line":509,"column":133,"offset":22811},"indent":[]}}],"position":{"start":{"line":509,"column":1,"offset":22679},"end":{"line":509,"column":133,"offset":22811},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"boundCat","position":{"start":{"line":511,"column":1,"offset":22813},"end":{"line":511,"column":9,"offset":22821},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":511,"column":9,"offset":22821},"end":{"line":511,"column":11,"offset":22823},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":511,"column":11,"offset":22823},"end":{"line":511,"column":13,"offset":22825},"indent":[]}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":511,"column":13,"offset":22825},"end":{"line":511,"column":31,"offset":22843},"indent":[]}}],"position":{"start":{"line":511,"column":1,"offset":22813},"end":{"line":511,"column":31,"offset":22843},"indent":[]}},{"type":"code","lang":"text","meta":null,"value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}","position":{"start":{"line":513,"column":1,"offset":22845},"end":{"line":540,"column":4,"offset":24787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":542,"column":3,"offset":24791},"end":{"line":542,"column":58,"offset":24846},"indent":[]}}],"position":{"start":{"line":542,"column":3,"offset":24791},"end":{"line":542,"column":58,"offset":24846},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":543,"column":7,"offset":24853},"end":{"line":543,"column":103,"offset":24949},"indent":[]}}],"position":{"start":{"line":543,"column":7,"offset":24853},"end":{"line":543,"column":103,"offset":24949},"indent":[]}}],"position":{"start":{"line":543,"column":5,"offset":24851},"end":{"line":543,"column":103,"offset":24949},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":544,"column":7,"offset":24956},"end":{"line":544,"column":103,"offset":25052},"indent":[]}}],"position":{"start":{"line":544,"column":7,"offset":24956},"end":{"line":544,"column":103,"offset":25052},"indent":[]}}],"position":{"start":{"line":544,"column":5,"offset":24954},"end":{"line":544,"column":103,"offset":25052},"indent":[]}}],"position":{"start":{"line":543,"column":5,"offset":24851},"end":{"line":544,"column":103,"offset":25052},"indent":[5]}}],"position":{"start":{"line":542,"column":1,"offset":24789},"end":{"line":544,"column":103,"offset":25052},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":545,"column":3,"offset":25055},"end":{"line":545,"column":53,"offset":25105},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":545,"column":53,"offset":25105},"end":{"line":545,"column":59,"offset":25111},"indent":[]}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":545,"column":59,"offset":25111},"end":{"line":545,"column":181,"offset":25233},"indent":[]}}],"position":{"start":{"line":545,"column":3,"offset":25055},"end":{"line":545,"column":181,"offset":25233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":547,"column":5,"offset":25239},"end":{"line":547,"column":7,"offset":25241},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":547,"column":7,"offset":25241},"end":{"line":547,"column":9,"offset":25243},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":547,"column":9,"offset":25243},"end":{"line":547,"column":11,"offset":25245},"indent":[]}},{"type":"text","value":"javascript","position":{"start":{"line":547,"column":11,"offset":25245},"end":{"line":547,"column":21,"offset":25255},"indent":[]}}],"position":{"start":{"line":547,"column":5,"offset":25239},"end":{"line":547,"column":21,"offset":25255},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let cat = {","position":{"start":{"line":549,"column":5,"offset":25261},"end":{"line":549,"column":16,"offset":25272},"indent":[]}}],"position":{"start":{"line":549,"column":5,"offset":25261},"end":{"line":549,"column":16,"offset":25272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purr: function ","position":{"start":{"line":551,"column":5,"offset":25278},"end":{"line":551,"column":20,"offset":25293},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":551,"column":20,"offset":25293},"end":{"line":551,"column":22,"offset":25295},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":551,"column":22,"offset":25295},"end":{"line":551,"column":24,"offset":25297},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":551,"column":24,"offset":25297},"end":{"line":551,"column":26,"offset":25299},"indent":[]}}],"position":{"start":{"line":551,"column":5,"offset":25278},"end":{"line":551,"column":26,"offset":25299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"console.log","position":{"start":{"line":553,"column":5,"offset":25305},"end":{"line":553,"column":16,"offset":25316},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":553,"column":16,"offset":25316},"end":{"line":553,"column":18,"offset":25318},"indent":[]}},{"type":"text","value":"\"meow\"","position":{"start":{"line":553,"column":18,"offset":25318},"end":{"line":553,"column":24,"offset":25324},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":553,"column":24,"offset":25324},"end":{"line":553,"column":26,"offset":25326},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":553,"column":26,"offset":25326},"end":{"line":553,"column":27,"offset":25327},"indent":[]}}],"position":{"start":{"line":553,"column":5,"offset":25305},"end":{"line":553,"column":27,"offset":25327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":555,"column":5,"offset":25333},"end":{"line":555,"column":7,"offset":25335},"indent":[]}}],"position":{"start":{"line":555,"column":5,"offset":25333},"end":{"line":555,"column":7,"offset":25335},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":557,"column":5,"offset":25341},"end":{"line":557,"column":24,"offset":25360},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":557,"column":24,"offset":25360},"end":{"line":557,"column":26,"offset":25362},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":557,"column":26,"offset":25362},"end":{"line":557,"column":28,"offset":25364},"indent":[]}},{"type":"text","value":" {","position":{"start":{"line":557,"column":28,"offset":25364},"end":{"line":557,"column":30,"offset":25366},"indent":[]}}],"position":{"start":{"line":557,"column":5,"offset":25341},"end":{"line":557,"column":30,"offset":25366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"this.purr","position":{"start":{"line":559,"column":5,"offset":25372},"end":{"line":559,"column":14,"offset":25381},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":559,"column":14,"offset":25381},"end":{"line":559,"column":16,"offset":25383},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":559,"column":16,"offset":25383},"end":{"line":559,"column":18,"offset":25385},"indent":[]}},{"type":"text","value":";","position":{"start":{"line":559,"column":18,"offset":25385},"end":{"line":559,"column":19,"offset":25386},"indent":[]}}],"position":{"start":{"line":559,"column":5,"offset":25372},"end":{"line":559,"column":19,"offset":25386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"},","position":{"start":{"line":561,"column":5,"offset":25392},"end":{"line":561,"column":7,"offset":25394},"indent":[]}}],"position":{"start":{"line":561,"column":5,"offset":25392},"end":{"line":561,"column":7,"offset":25394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"};","position":{"start":{"line":563,"column":5,"offset":25400},"end":{"line":563,"column":7,"offset":25402},"indent":[]}}],"position":{"start":{"line":563,"column":5,"offset":25400},"end":{"line":563,"column":7,"offset":25402},"indent":[]}}],"position":{"start":{"line":545,"column":1,"offset":25053},"end":{"line":563,"column":7,"offset":25402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":542,"column":1,"offset":24789},"end":{"line":563,"column":7,"offset":25402},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":565,"column":1,"offset":25404},"end":{"line":565,"column":18,"offset":25421},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":565,"column":18,"offset":25421},"end":{"line":565,"column":20,"offset":25423},"indent":[]}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":565,"column":20,"offset":25423},"end":{"line":565,"column":38,"offset":25441},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":565,"column":38,"offset":25441},"end":{"line":565,"column":40,"offset":25443},"indent":[]}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":565,"column":40,"offset":25443},"end":{"line":565,"column":100,"offset":25503},"indent":[]}}],"position":{"start":{"line":565,"column":1,"offset":25404},"end":{"line":565,"column":100,"offset":25503},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"`","position":{"start":{"line":567,"column":1,"offset":25505},"end":{"line":567,"column":3,"offset":25507},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":567,"column":3,"offset":25507},"end":{"line":567,"column":5,"offset":25509},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":567,"column":5,"offset":25509},"end":{"line":567,"column":7,"offset":25511},"indent":[]}}],"position":{"start":{"line":567,"column":1,"offset":25505},"end":{"line":567,"column":7,"offset":25511},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":569,"column":3,"offset":25515},"end":{"line":569,"column":31,"offset":25543},"indent":[]}},{"type":"inlineCode","value":"\"use strict\";","position":{"start":{"line":569,"column":31,"offset":25543},"end":{"line":569,"column":46,"offset":25558},"indent":[]}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":569,"column":46,"offset":25558},"end":{"line":569,"column":107,"offset":25619},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":569,"column":107,"offset":25619},"end":{"line":569,"column":113,"offset":25625},"indent":[]}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":569,"column":113,"offset":25625},"end":{"line":569,"column":150,"offset":25662},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":569,"column":150,"offset":25662},"end":{"line":569,"column":156,"offset":25668},"indent":[]}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":569,"column":156,"offset":25668},"end":{"line":569,"column":276,"offset":25788},"indent":[]}}],"position":{"start":{"line":569,"column":3,"offset":25515},"end":{"line":569,"column":276,"offset":25788},"indent":[]}}],"position":{"start":{"line":569,"column":1,"offset":25513},"end":{"line":569,"column":276,"offset":25788},"indent":[]}}],"position":{"start":{"line":569,"column":1,"offset":25513},"end":{"line":569,"column":276,"offset":25788},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"POJOs","position":{"start":{"line":571,"column":5,"offset":25794},"end":{"line":571,"column":10,"offset":25799},"indent":[]}}],"position":{"start":{"line":571,"column":1,"offset":25790},"end":{"line":571,"column":10,"offset":25799},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":573,"column":6,"offset":25806},"end":{"line":573,"column":58,"offset":25858},"indent":[]}}],"position":{"start":{"line":573,"column":1,"offset":25801},"end":{"line":573,"column":58,"offset":25858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":575,"column":1,"offset":25860},"end":{"line":575,"column":240,"offset":26099},"indent":[]}}],"position":{"start":{"line":575,"column":1,"offset":25860},"end":{"line":575,"column":240,"offset":26099},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":577,"column":3,"offset":26103},"end":{"line":577,"column":22,"offset":26122},"indent":[]}}],"position":{"start":{"line":577,"column":3,"offset":26103},"end":{"line":577,"column":22,"offset":26122},"indent":[]}}],"position":{"start":{"line":577,"column":1,"offset":26101},"end":{"line":577,"column":22,"offset":26122},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":578,"column":3,"offset":26125},"end":{"line":578,"column":19,"offset":26141},"indent":[]}}],"position":{"start":{"line":578,"column":3,"offset":26125},"end":{"line":578,"column":19,"offset":26141},"indent":[]}}],"position":{"start":{"line":578,"column":1,"offset":26123},"end":{"line":578,"column":19,"offset":26141},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":579,"column":3,"offset":26144},"end":{"line":579,"column":24,"offset":26165},"indent":[]}}],"position":{"start":{"line":579,"column":3,"offset":26144},"end":{"line":579,"column":24,"offset":26165},"indent":[]}}],"position":{"start":{"line":579,"column":1,"offset":26142},"end":{"line":579,"column":24,"offset":26165},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":580,"column":3,"offset":26168},"end":{"line":580,"column":21,"offset":26186},"indent":[]}}],"position":{"start":{"line":580,"column":3,"offset":26168},"end":{"line":580,"column":21,"offset":26186},"indent":[]}}],"position":{"start":{"line":580,"column":1,"offset":26166},"end":{"line":580,"column":21,"offset":26186},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":581,"column":3,"offset":26189},"end":{"line":581,"column":21,"offset":26207},"indent":[]}}],"position":{"start":{"line":581,"column":3,"offset":26189},"end":{"line":581,"column":21,"offset":26207},"indent":[]}}],"position":{"start":{"line":581,"column":1,"offset":26187},"end":{"line":581,"column":21,"offset":26207},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":582,"column":3,"offset":26210},"end":{"line":582,"column":20,"offset":26227},"indent":[]}}],"position":{"start":{"line":582,"column":3,"offset":26210},"end":{"line":582,"column":20,"offset":26227},"indent":[]}}],"position":{"start":{"line":582,"column":1,"offset":26208},"end":{"line":582,"column":20,"offset":26227},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":583,"column":3,"offset":26230},"end":{"line":583,"column":21,"offset":26248},"indent":[]}}],"position":{"start":{"line":583,"column":3,"offset":26230},"end":{"line":583,"column":21,"offset":26248},"indent":[]}}],"position":{"start":{"line":583,"column":1,"offset":26228},"end":{"line":583,"column":21,"offset":26248},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":584,"column":3,"offset":26251},"end":{"line":584,"column":23,"offset":26271},"indent":[]}}],"position":{"start":{"line":584,"column":3,"offset":26251},"end":{"line":584,"column":23,"offset":26271},"indent":[]}}],"position":{"start":{"line":584,"column":1,"offset":26249},"end":{"line":584,"column":23,"offset":26271},"indent":[]}}],"position":{"start":{"line":577,"column":1,"offset":26101},"end":{"line":584,"column":23,"offset":26271},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":586,"column":6,"offset":26278},"end":{"line":586,"column":35,"offset":26307},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":586,"column":35,"offset":26307},"end":{"line":586,"column":37,"offset":26309},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":586,"column":37,"offset":26309},"end":{"line":586,"column":39,"offset":26311},"indent":[]}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":586,"column":39,"offset":26311},"end":{"line":586,"column":74,"offset":26346},"indent":[]}}],"position":{"start":{"line":586,"column":1,"offset":26273},"end":{"line":586,"column":74,"offset":26346},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);","position":{"start":{"line":588,"column":1,"offset":26348},"end":{"line":598,"column":4,"offset":26688},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":600,"column":6,"offset":26695},"end":{"line":600,"column":72,"offset":26761},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":26690},"end":{"line":600,"column":72,"offset":26761},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);","position":{"start":{"line":602,"column":1,"offset":26763},"end":{"line":609,"column":4,"offset":26943},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":611,"column":6,"offset":26950},"end":{"line":611,"column":20,"offset":26964},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":611,"column":20,"offset":26964},"end":{"line":611,"column":22,"offset":26966},"indent":[]}},{"type":"text","value":"key","position":{"start":{"line":611,"column":22,"offset":26966},"end":{"line":611,"column":25,"offset":26969},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":611,"column":25,"offset":26969},"end":{"line":611,"column":27,"offset":26971},"indent":[]}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":611,"column":27,"offset":26971},"end":{"line":611,"column":118,"offset":27062},"indent":[]}}],"position":{"start":{"line":611,"column":1,"offset":26945},"end":{"line":611,"column":118,"offset":27062},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":613,"column":1,"offset":27064},"end":{"line":613,"column":4,"offset":27067},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false","position":{"start":{"line":616,"column":1,"offset":27070},"end":{"line":628,"column":4,"offset":27355},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":630,"column":6,"offset":27362},"end":{"line":630,"column":60,"offset":27416},"indent":[]}}],"position":{"start":{"line":630,"column":1,"offset":27357},"end":{"line":630,"column":60,"offset":27416},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":632,"column":1,"offset":27418},"end":{"line":632,"column":4,"offset":27421},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));","position":{"start":{"line":635,"column":1,"offset":27424},"end":{"line":648,"column":4,"offset":27687},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":650,"column":6,"offset":27694},"end":{"line":650,"column":54,"offset":27742},"indent":[]}}],"position":{"start":{"line":650,"column":1,"offset":27689},"end":{"line":650,"column":54,"offset":27742},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));","position":{"start":{"line":652,"column":1,"offset":27744},"end":{"line":660,"column":4,"offset":27905},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":662,"column":6,"offset":27912},"end":{"line":662,"column":98,"offset":28004},"indent":[]}}],"position":{"start":{"line":662,"column":1,"offset":27907},"end":{"line":662,"column":98,"offset":28004},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":664,"column":1,"offset":28006},"end":{"line":664,"column":4,"offset":28009},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0","position":{"start":{"line":667,"column":1,"offset":28012},"end":{"line":683,"column":4,"offset":28319},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":685,"column":6,"offset":28326},"end":{"line":685,"column":68,"offset":28388},"indent":[]}}],"position":{"start":{"line":685,"column":1,"offset":28321},"end":{"line":685,"column":68,"offset":28388},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);","position":{"start":{"line":687,"column":1,"offset":28390},"end":{"line":700,"column":4,"offset":28669},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":702,"column":6,"offset":28676},"end":{"line":702,"column":60,"offset":28730},"indent":[]}}],"position":{"start":{"line":702,"column":1,"offset":28671},"end":{"line":702,"column":60,"offset":28730},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);","position":{"start":{"line":704,"column":1,"offset":28732},"end":{"line":709,"column":4,"offset":28816},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":711,"column":6,"offset":28823},"end":{"line":711,"column":60,"offset":28877},"indent":[]}}],"position":{"start":{"line":711,"column":1,"offset":28818},"end":{"line":711,"column":60,"offset":28877},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);","position":{"start":{"line":713,"column":1,"offset":28879},"end":{"line":732,"column":4,"offset":29212},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":734,"column":6,"offset":29219},"end":{"line":734,"column":139,"offset":29352},"indent":[]}}],"position":{"start":{"line":734,"column":1,"offset":29214},"end":{"line":734,"column":139,"offset":29352},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":736,"column":1,"offset":29354},"end":{"line":736,"column":4,"offset":29357},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));","position":{"start":{"line":739,"column":1,"offset":29360},"end":{"line":755,"column":4,"offset":29716},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[],"position":{"start":{"line":757,"column":1,"offset":29718},"end":{"line":757,"column":4,"offset":29721},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":759,"column":5,"offset":29727},"end":{"line":759,"column":23,"offset":29745},"indent":[]}}],"position":{"start":{"line":759,"column":1,"offset":29723},"end":{"line":759,"column":23,"offset":29745},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":761,"column":6,"offset":29752},"end":{"line":761,"column":73,"offset":29819},"indent":[]}}],"position":{"start":{"line":761,"column":1,"offset":29747},"end":{"line":761,"column":73,"offset":29819},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":763,"column":6,"offset":29826},"end":{"line":763,"column":72,"offset":29892},"indent":[]}}],"position":{"start":{"line":763,"column":1,"offset":29821},"end":{"line":763,"column":72,"offset":29892},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var a = 'a';","position":{"start":{"line":765,"column":1,"offset":29894},"end":{"line":767,"column":4,"offset":29916},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":769,"column":3,"offset":29920},"end":{"line":769,"column":8,"offset":29925},"indent":[]}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":769,"column":8,"offset":29925},"end":{"line":769,"column":65,"offset":29982},"indent":[]}}],"position":{"start":{"line":769,"column":3,"offset":29920},"end":{"line":769,"column":65,"offset":29982},"indent":[]}}],"position":{"start":{"line":769,"column":1,"offset":29918},"end":{"line":769,"column":65,"offset":29982},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"var","position":{"start":{"line":770,"column":3,"offset":29985},"end":{"line":770,"column":8,"offset":29990},"indent":[]}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":770,"column":8,"offset":29990},"end":{"line":770,"column":88,"offset":30070},"indent":[]}}],"position":{"start":{"line":770,"column":3,"offset":29985},"end":{"line":770,"column":88,"offset":30070},"indent":[]}}],"position":{"start":{"line":770,"column":1,"offset":29983},"end":{"line":770,"column":88,"offset":30070},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We consider ","position":{"start":{"line":771,"column":3,"offset":30073},"end":{"line":771,"column":15,"offset":30085},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":771,"column":15,"offset":30085},"end":{"line":771,"column":20,"offset":30090},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":771,"column":20,"offset":30090},"end":{"line":771,"column":27,"offset":30097},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"deprecated","position":{"start":{"line":771,"column":28,"offset":30098},"end":{"line":771,"column":38,"offset":30108},"indent":[]}}],"position":{"start":{"line":771,"column":27,"offset":30097},"end":{"line":771,"column":39,"offset":30109},"indent":[]}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":771,"column":39,"offset":30109},"end":{"line":771,"column":76,"offset":30146},"indent":[]}}],"position":{"start":{"line":771,"column":3,"offset":30073},"end":{"line":771,"column":76,"offset":30146},"indent":[]}}],"position":{"start":{"line":771,"column":1,"offset":30071},"end":{"line":771,"column":76,"offset":30146},"indent":[]}}],"position":{"start":{"line":769,"column":1,"offset":29918},"end":{"line":771,"column":76,"offset":30146},"indent":[1,1]}},{"type":"code","lang":"js","meta":null,"value":"let b = 'b';","position":{"start":{"line":773,"column":1,"offset":30148},"end":{"line":775,"column":4,"offset":30170},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":777,"column":3,"offset":30174},"end":{"line":777,"column":8,"offset":30179},"indent":[]}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":777,"column":8,"offset":30179},"end":{"line":777,"column":67,"offset":30238},"indent":[]}}],"position":{"start":{"line":777,"column":3,"offset":30174},"end":{"line":777,"column":67,"offset":30238},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":30172},"end":{"line":777,"column":67,"offset":30238},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"let","position":{"start":{"line":778,"column":3,"offset":30241},"end":{"line":778,"column":8,"offset":30246},"indent":[]}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":778,"column":8,"offset":30246},"end":{"line":778,"column":43,"offset":30281},"indent":[]}}],"position":{"start":{"line":778,"column":3,"offset":30241},"end":{"line":778,"column":43,"offset":30281},"indent":[]}}],"position":{"start":{"line":778,"column":1,"offset":30239},"end":{"line":778,"column":43,"offset":30281},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":779,"column":3,"offset":30284},"end":{"line":779,"column":27,"offset":30308},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":779,"column":27,"offset":30308},"end":{"line":779,"column":32,"offset":30313},"indent":[]}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":779,"column":32,"offset":30313},"end":{"line":779,"column":51,"offset":30332},"indent":[]}}],"position":{"start":{"line":779,"column":3,"offset":30284},"end":{"line":779,"column":51,"offset":30332},"indent":[]}}],"position":{"start":{"line":779,"column":1,"offset":30282},"end":{"line":779,"column":51,"offset":30332},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":30172},"end":{"line":779,"column":51,"offset":30332},"indent":[1,1]}},{"type":"code","lang":"js","meta":null,"value":"const c = 'c';","position":{"start":{"line":781,"column":1,"offset":30334},"end":{"line":783,"column":4,"offset":30358},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":785,"column":3,"offset":30362},"end":{"line":785,"column":10,"offset":30369},"indent":[]}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":785,"column":10,"offset":30369},"end":{"line":785,"column":36,"offset":30395},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":785,"column":36,"offset":30395},"end":{"line":785,"column":41,"offset":30400},"indent":[]}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":785,"column":41,"offset":30400},"end":{"line":785,"column":67,"offset":30426},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"initialize","position":{"start":{"line":785,"column":69,"offset":30428},"end":{"line":785,"column":79,"offset":30438},"indent":[]}}],"position":{"start":{"line":785,"column":67,"offset":30426},"end":{"line":785,"column":81,"offset":30440},"indent":[]}},{"type":"text","value":" a variable.","position":{"start":{"line":785,"column":81,"offset":30440},"end":{"line":785,"column":93,"offset":30452},"indent":[]}}],"position":{"start":{"line":785,"column":3,"offset":30362},"end":{"line":785,"column":93,"offset":30452},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":30360},"end":{"line":785,"column":93,"offset":30452},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":786,"column":3,"offset":30455},"end":{"line":786,"column":54,"offset":30506},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":786,"column":54,"offset":30506},"end":{"line":786,"column":61,"offset":30513},"indent":[]}},{"type":"text","value":" variable.","position":{"start":{"line":786,"column":61,"offset":30513},"end":{"line":786,"column":71,"offset":30523},"indent":[]}}],"position":{"start":{"line":786,"column":3,"offset":30455},"end":{"line":786,"column":71,"offset":30523},"indent":[]}}],"position":{"start":{"line":786,"column":1,"offset":30453},"end":{"line":786,"column":71,"offset":30523},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"const","position":{"start":{"line":787,"column":3,"offset":30526},"end":{"line":787,"column":10,"offset":30533},"indent":[]}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":787,"column":10,"offset":30533},"end":{"line":787,"column":46,"offset":30569},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":787,"column":46,"offset":30569},"end":{"line":787,"column":51,"offset":30574},"indent":[]}},{"type":"text","value":" does.","position":{"start":{"line":787,"column":51,"offset":30574},"end":{"line":787,"column":57,"offset":30580},"indent":[]}}],"position":{"start":{"line":787,"column":3,"offset":30526},"end":{"line":787,"column":57,"offset":30580},"indent":[]}}],"position":{"start":{"line":787,"column":1,"offset":30524},"end":{"line":787,"column":57,"offset":30580},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":30360},"end":{"line":787,"column":57,"offset":30580},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":789,"column":6,"offset":30587},"end":{"line":789,"column":116,"offset":30697},"indent":[]}}],"position":{"start":{"line":789,"column":1,"offset":30582},"end":{"line":789,"column":116,"offset":30697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":791,"column":1,"offset":30699},"end":{"line":791,"column":15,"offset":30713},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":791,"column":15,"offset":30713},"end":{"line":791,"column":20,"offset":30718},"indent":[]}},{"type":"text","value":" function, inside which ","position":{"start":{"line":791,"column":20,"offset":30718},"end":{"line":791,"column":44,"offset":30742},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":791,"column":44,"offset":30742},"end":{"line":791,"column":49,"offset":30747},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":791,"column":49,"offset":30747},"end":{"line":791,"column":54,"offset":30752},"indent":[]}},{"type":"inlineCode","value":"bar","position":{"start":{"line":791,"column":54,"offset":30752},"end":{"line":791,"column":59,"offset":30757},"indent":[]}},{"type":"text","value":" have ","position":{"start":{"line":791,"column":59,"offset":30757},"end":{"line":791,"column":65,"offset":30763},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":791,"column":65,"offset":30763},"end":{"line":791,"column":81,"offset":30779},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":791,"column":81,"offset":30779},"end":{"line":791,"column":83,"offset":30781},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":791,"column":83,"offset":30781},"end":{"line":791,"column":86,"offset":30784},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":791,"column":86,"offset":30784},"end":{"line":791,"column":91,"offset":30789},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":791,"column":91,"offset":30789},"end":{"line":791,"column":96,"offset":30794},"indent":[]}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":791,"column":96,"offset":30794},"end":{"line":791,"column":132,"offset":30830},"indent":[]}}],"position":{"start":{"line":791,"column":1,"offset":30699},"end":{"line":791,"column":132,"offset":30830},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();","position":{"start":{"line":793,"column":1,"offset":30832},"end":{"line":811,"column":4,"offset":31114},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":813,"column":1,"offset":31116},"end":{"line":813,"column":25,"offset":31140},"indent":[]}},{"type":"inlineCode","value":"baz","position":{"start":{"line":813,"column":25,"offset":31140},"end":{"line":813,"column":30,"offset":31145},"indent":[]}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":813,"column":30,"offset":31145},"end":{"line":813,"column":103,"offset":31218},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":31116},"end":{"line":813,"column":103,"offset":31218},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":815,"column":1,"offset":31220},"end":{"line":815,"column":15,"offset":31234},"indent":[]}},{"type":"inlineCode","value":"run","position":{"start":{"line":815,"column":15,"offset":31234},"end":{"line":815,"column":20,"offset":31239},"indent":[]}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":815,"column":20,"offset":31239},"end":{"line":815,"column":47,"offset":31266},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":815,"column":47,"offset":31266},"end":{"line":815,"column":52,"offset":31271},"indent":[]}},{"type":"text","value":" has ","position":{"start":{"line":815,"column":52,"offset":31271},"end":{"line":815,"column":57,"offset":31276},"indent":[]}},{"type":"inlineCode","value":"function scope","position":{"start":{"line":815,"column":57,"offset":31276},"end":{"line":815,"column":73,"offset":31292},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":815,"column":73,"offset":31292},"end":{"line":815,"column":74,"offset":31293},"indent":[]}}],"position":{"start":{"line":815,"column":1,"offset":31220},"end":{"line":815,"column":74,"offset":31293},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":817,"column":1,"offset":31295},"end":{"line":817,"column":4,"offset":31298},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();","position":{"start":{"line":820,"column":1,"offset":31301},"end":{"line":830,"column":4,"offset":31424},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Consider this ","position":{"start":{"line":832,"column":1,"offset":31426},"end":{"line":832,"column":15,"offset":31440},"indent":[]}},{"type":"inlineCode","value":"func1","position":{"start":{"line":832,"column":15,"offset":31440},"end":{"line":832,"column":22,"offset":31447},"indent":[]}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":832,"column":22,"offset":31447},"end":{"line":832,"column":55,"offset":31480},"indent":[]}}],"position":{"start":{"line":832,"column":1,"offset":31426},"end":{"line":832,"column":55,"offset":31480},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}","position":{"start":{"line":834,"column":1,"offset":31482},"end":{"line":849,"column":4,"offset":31737},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":851,"column":6,"offset":31744},"end":{"line":851,"column":70,"offset":31808},"indent":[]}}],"position":{"start":{"line":851,"column":1,"offset":31739},"end":{"line":851,"column":70,"offset":31808},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;","position":{"start":{"line":853,"column":1,"offset":31810},"end":{"line":863,"column":4,"offset":31986},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":865,"column":6,"offset":31993},"end":{"line":865,"column":33,"offset":32020},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":31988},"end":{"line":865,"column":33,"offset":32020},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const returnValue = (val) => val;","position":{"start":{"line":867,"column":1,"offset":32022},"end":{"line":869,"column":4,"offset":32065},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":871,"column":1,"offset":32067},"end":{"line":871,"column":59,"offset":32125},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":871,"column":59,"offset":32125},"end":{"line":871,"column":64,"offset":32130},"indent":[]}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":871,"column":64,"offset":32130},"end":{"line":871,"column":93,"offset":32159},"indent":[]}},{"type":"inlineCode","value":"val","position":{"start":{"line":871,"column":93,"offset":32159},"end":{"line":871,"column":98,"offset":32164},"indent":[]}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":871,"column":98,"offset":32164},"end":{"line":871,"column":135,"offset":32201},"indent":[]}},{"type":"inlineCode","value":"return val","position":{"start":{"line":871,"column":135,"offset":32201},"end":{"line":871,"column":147,"offset":32213},"indent":[]}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":871,"column":147,"offset":32213},"end":{"line":871,"column":188,"offset":32254},"indent":[]}}],"position":{"start":{"line":871,"column":1,"offset":32067},"end":{"line":871,"column":188,"offset":32254},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":873,"column":1,"offset":32256},"end":{"line":873,"column":28,"offset":32283},"indent":[]}}],"position":{"start":{"line":873,"column":1,"offset":32256},"end":{"line":873,"column":28,"offset":32283},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const returnValue = (val) => {\n    return val;\n};","position":{"start":{"line":875,"column":1,"offset":32285},"end":{"line":879,"column":4,"offset":32344},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":881,"column":6,"offset":32351},"end":{"line":881,"column":54,"offset":32399},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":881,"column":54,"offset":32399},"end":{"line":881,"column":60,"offset":32405},"indent":[]}},{"type":"text","value":" without executing the code","position":{"start":{"line":881,"column":60,"offset":32405},"end":{"line":881,"column":87,"offset":32432},"indent":[]}}],"position":{"start":{"line":881,"column":1,"offset":32346},"end":{"line":881,"column":87,"offset":32432},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":883,"column":1,"offset":32434},"end":{"line":883,"column":4,"offset":32437},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);","position":{"start":{"line":886,"column":1,"offset":32440},"end":{"line":898,"column":4,"offset":32597},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we use a ","position":{"start":{"line":900,"column":1,"offset":32599},"end":{"line":900,"column":13,"offset":32611},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function declaration","position":{"start":{"line":900,"column":14,"offset":32612},"end":{"line":900,"column":34,"offset":32632},"indent":[]}}],"position":{"start":{"line":900,"column":13,"offset":32611},"end":{"line":900,"column":35,"offset":32633},"indent":[]}},{"type":"text","value":" style function, the ","position":{"start":{"line":900,"column":35,"offset":32633},"end":{"line":900,"column":56,"offset":32654},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":900,"column":56,"offset":32654},"end":{"line":900,"column":62,"offset":32660},"indent":[]}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":900,"column":62,"offset":32660},"end":{"line":900,"column":86,"offset":32684},"indent":[]}},{"type":"inlineCode","value":"global","position":{"start":{"line":900,"column":86,"offset":32684},"end":{"line":900,"column":94,"offset":32692},"indent":[]}},{"type":"text","value":" object ","position":{"start":{"line":900,"column":94,"offset":32692},"end":{"line":900,"column":102,"offset":32700},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":900,"column":102,"offset":32700},"end":{"line":900,"column":104,"offset":32702},"indent":[]}},{"type":"text","value":"i.e. ","position":{"start":{"line":900,"column":104,"offset":32702},"end":{"line":900,"column":109,"offset":32707},"indent":[]}},{"type":"inlineCode","value":"Object [global]","position":{"start":{"line":900,"column":109,"offset":32707},"end":{"line":900,"column":126,"offset":32724},"indent":[]}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":900,"column":126,"offset":32724},"end":{"line":900,"column":142,"offset":32740},"indent":[]}},{"type":"inlineCode","value":"Window","position":{"start":{"line":900,"column":142,"offset":32740},"end":{"line":900,"column":150,"offset":32748},"indent":[]}},{"type":"text","value":" in your browser","position":{"start":{"line":900,"column":150,"offset":32748},"end":{"line":900,"column":166,"offset":32764},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":900,"column":166,"offset":32764},"end":{"line":900,"column":168,"offset":32766},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":900,"column":168,"offset":32766},"end":{"line":900,"column":169,"offset":32767},"indent":[]}}],"position":{"start":{"line":900,"column":1,"offset":32599},"end":{"line":900,"column":169,"offset":32767},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);","position":{"start":{"line":902,"column":1,"offset":32769},"end":{"line":908,"column":4,"offset":32894},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":910,"column":1,"offset":32896},"end":{"line":910,"column":27,"offset":32922},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"fat arrow","position":{"start":{"line":910,"column":28,"offset":32923},"end":{"line":910,"column":37,"offset":32932},"indent":[]}}],"position":{"start":{"line":910,"column":27,"offset":32922},"end":{"line":910,"column":38,"offset":32933},"indent":[]}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":910,"column":38,"offset":32933},"end":{"line":910,"column":102,"offset":32997},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":910,"column":102,"offset":32997},"end":{"line":910,"column":108,"offset":33003},"indent":[]}},{"type":"text","value":" becomes","position":{"start":{"line":910,"column":108,"offset":33003},"end":{"line":910,"column":116,"offset":33011},"indent":[]}}],"position":{"start":{"line":910,"column":1,"offset":32896},"end":{"line":910,"column":116,"offset":33011},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":912,"column":6,"offset":33018},"end":{"line":912,"column":66,"offset":33078},"indent":[]}}],"position":{"start":{"line":912,"column":1,"offset":33013},"end":{"line":912,"column":66,"offset":33078},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());","position":{"start":{"line":914,"column":1,"offset":33080},"end":{"line":925,"column":4,"offset":33316},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":927,"column":6,"offset":33323},"end":{"line":927,"column":38,"offset":33355},"indent":[]}},{"type":"text","value":"#","position":{"start":{"line":927,"column":38,"offset":33355},"end":{"line":927,"column":40,"offset":33357},"indent":[]}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":927,"column":40,"offset":33357},"end":{"line":927,"column":86,"offset":33403},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":927,"column":86,"offset":33403},"end":{"line":927,"column":92,"offset":33409},"indent":[]}}],"position":{"start":{"line":927,"column":1,"offset":33318},"end":{"line":927,"column":92,"offset":33409},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms","position":{"start":{"line":929,"column":1,"offset":33411},"end":{"line":942,"column":4,"offset":33740},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":944,"column":6,"offset":33747},"end":{"line":944,"column":45,"offset":33786},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":944,"column":45,"offset":33786},"end":{"line":944,"column":51,"offset":33792},"indent":[]}},{"type":"text","value":" refers to","position":{"start":{"line":944,"column":51,"offset":33792},"end":{"line":944,"column":61,"offset":33802},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":33742},"end":{"line":944,"column":61,"offset":33802},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":946,"column":1,"offset":33804},"end":{"line":946,"column":4,"offset":33807},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');","position":{"start":{"line":949,"column":1,"offset":33810},"end":{"line":969,"column":4,"offset":34220},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":970,"column":1,"offset":34221}}}}