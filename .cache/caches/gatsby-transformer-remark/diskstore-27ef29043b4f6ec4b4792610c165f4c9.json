{"expireTime":9007200903816782000,"key":"transformer-remark-markdown-ast-bc904cf8f7f0e11318acb2c4bf6e934c--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"The Anatomy of a Search Engine","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":33,"offset":34},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":33,"offset":34},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":4,"column":6,"offset":43},"end":{"line":4,"column":13,"offset":50},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":40},"end":{"line":4,"column":13,"offset":50},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These tasks are becoming increasingly difficult as the Web grows. However,\nhardware performance and cost have improved dramatically to partially offset\nthe difficulty. There are, however, several notable exceptions to this\nprogress such as disk seek time and operating system robustness. In designing\nGoogle, we have considered both the rate of growth of the Web and technological\nchanges. Google is designed to scale well to extremely large data sets.\nIt makes efficient use of storage space to store the index. Its data structures\nare optimized for fast and efficient access (see section 4.2).\nFurther, we expect that the cost to index and store text or HTML will eventually\ndecline relative to the amount that will be available (see Appendix\nB). This will result in favorable scaling properties for centralized\nsystems like Google.","position":{"start":{"line":6,"column":3,"offset":57},"end":{"line":17,"column":23,"offset":924},"indent":[3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":6,"column":3,"offset":57},"end":{"line":17,"column":23,"offset":924},"indent":[3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":4,"column":1,"offset":38},"end":{"line":17,"column":23,"offset":924},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":19,"column":1,"offset":928},"end":{"line":19,"column":4,"offset":931},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sergey Brin and Lawrence Page","position":{"start":{"line":21,"column":3,"offset":937},"end":{"line":21,"column":32,"offset":966},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":935},"end":{"line":21,"column":34,"offset":968},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":935},"end":{"line":21,"column":34,"offset":968},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{sergey, page}@cs.stanford.edu","position":{"start":{"line":23,"column":1,"offset":972},"end":{"line":23,"column":31,"offset":1002},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":972},"end":{"line":23,"column":31,"offset":1002},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Computer Science Department, Stanford University, Stanford, CA 94305","position":{"start":{"line":25,"column":1,"offset":1006},"end":{"line":25,"column":69,"offset":1074},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1006},"end":{"line":25,"column":69,"offset":1074},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Abstract","position":{"start":{"line":27,"column":5,"offset":1082},"end":{"line":27,"column":13,"offset":1090},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1078},"end":{"line":27,"column":13,"offset":1090},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"In this paper, we present Google, a prototype of a large-scale search engine which makes heavy use of the structure present in hypertext. Google is designed to crawl and index the Web efficiently and produce much more satisfying search results than existing systems. The prototype with a full text and hyperlink database of at least 24 million pages is available at ","position":{"start":{"line":29,"column":3,"offset":1096},"end":{"line":29,"column":369,"offset":1462},"indent":[]}},{"type":"link","title":null,"url":"http://google.stanford.edu/","children":[{"type":"text","value":"http://google.stanford.edu/","position":{"start":{"line":29,"column":370,"offset":1463},"end":{"line":29,"column":397,"offset":1490},"indent":[]}}],"position":{"start":{"line":29,"column":369,"offset":1462},"end":{"line":29,"column":427,"offset":1520},"indent":[]}},{"type":"text","value":"\nTo engineer a search engine is a challenging task. Search engines index tens to hundreds of millions of web pages involving a comparable number of distinct terms. They answer tens of millions of queries every day. Despite the importance of large-scale search engines on the web, very little academic research has been done on them. Furthermore, due to rapid advance in technology and web proliferation, creating a web search engine today is very different from three years ago. This paper provides an in-depth description of our large-scale web search engine -- the first such detailed public description we know of to date.\nApart from the problems of scaling traditional search techniques to data of this magnitude, there are new technical challenges involved with using the additional information present in hypertext to produce better search results. This paper addresses this question of how to build a practical large-scale system which can exploit the additional information present in hypertext. Also we look at the problem of how to effectively deal with uncontrolled hypertext collections where anyone can publish anything they want.","position":{"start":{"line":29,"column":427,"offset":1520},"end":{"line":31,"column":520,"offset":2669},"indent":[3,3]}}],"position":{"start":{"line":29,"column":3,"offset":1096},"end":{"line":31,"column":520,"offset":2669},"indent":[3,3]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Keywords","position":{"start":{"line":33,"column":5,"offset":2678},"end":{"line":33,"column":13,"offset":2686},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":2676},"end":{"line":33,"column":15,"offset":2688},"indent":[]}},{"type":"text","value":": World Wide Web, Search Engines, Information Retrieval, PageRank, Google","position":{"start":{"line":33,"column":15,"offset":2688},"end":{"line":33,"column":88,"offset":2761},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":2676},"end":{"line":33,"column":88,"offset":2761},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1094},"end":{"line":33,"column":88,"offset":2761},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"1","position":{"start":{"line":35,"column":4,"offset":2768},"end":{"line":35,"column":5,"offset":2769},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":35,"column":5,"offset":2769},"end":{"line":35,"column":7,"offset":2771},"indent":[]}},{"type":"text","value":" Introduction","position":{"start":{"line":35,"column":7,"offset":2771},"end":{"line":35,"column":20,"offset":2784},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":2765},"end":{"line":35,"column":20,"offset":2784},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"(Note: There are two versions of this paper -- a longer full version and a shorter printed version. The full version is available on the web and the conference CD-ROM.)","position":{"start":{"line":37,"column":2,"offset":2789},"end":{"line":37,"column":170,"offset":2957},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2788},"end":{"line":37,"column":171,"offset":2958},"indent":[]}},{"type":"text","value":"\nThe web creates new challenges for information retrieval. The amount of information on the web is growing rapidly, as well as the number of new users inexperienced in the art of web research. People are likely to surf the web using its link graph, often starting with high quality human maintained indices such as ","position":{"start":{"line":37,"column":171,"offset":2958},"end":{"line":38,"column":315,"offset":3274},"indent":[1]}},{"type":"link","title":null,"url":"http://www.yahoo.com/","children":[{"type":"text","value":"Yahoo!","position":{"start":{"line":38,"column":316,"offset":3275},"end":{"line":38,"column":322,"offset":3281},"indent":[]}}],"position":{"start":{"line":38,"column":315,"offset":3274},"end":{"line":38,"column":346,"offset":3305},"indent":[]}},{"type":"text","value":" or with search engines. Human maintained lists cover popular topics effectively but are subjective, expensive to build and maintain, slow to improve, and cannot cover all esoteric topics. Automated search engines that rely on keyword matching usually return too many low quality matches. To make matters worse, some advertisers attempt to gain people's attention by taking measures meant to mislead automated search engines. We have built a large-scale search engine which addresses many of the problems of existing systems. It makes especially heavy use of the additional structure present in hypertext to provide much higher quality search results. We chose our system name, Google, because it is a common spelling of googol, or 10100 and fits well with our goal of building very large-scale search engines.","position":{"start":{"line":38,"column":346,"offset":3305},"end":{"line":38,"column":1156,"offset":4115},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":2788},"end":{"line":38,"column":1156,"offset":4115},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1.1 Web Search Engines -- Scaling Up: 1994 - 2000","position":{"start":{"line":40,"column":5,"offset":4123},"end":{"line":40,"column":54,"offset":4172},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":4119},"end":{"line":40,"column":54,"offset":4172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Search engine technology has had to scale dramatically to keep up with the growth of the web. In 1994, one of the first web search engines, the World Wide Web Worm (WWWW) ","position":{"start":{"line":42,"column":1,"offset":4176},"end":{"line":42,"column":172,"offset":4347},"indent":[]}},{"type":"link","title":null,"url":"http://www.cs.colorado.edu/home/mcbryan/mypapers/www94.ps","children":[{"type":"text","value":"[","position":{"start":{"line":42,"column":173,"offset":4348},"end":{"line":42,"column":175,"offset":4350},"indent":[]}},{"type":"text","value":"McBryan 94","position":{"start":{"line":42,"column":175,"offset":4350},"end":{"line":42,"column":185,"offset":4360},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":42,"column":185,"offset":4360},"end":{"line":42,"column":187,"offset":4362},"indent":[]}}],"position":{"start":{"line":42,"column":172,"offset":4347},"end":{"line":42,"column":247,"offset":4422},"indent":[]}},{"type":"text","value":" had an index of 110,000 web pages and web accessible documents. As of November, 1997, the top search engines claim to index from 2 million (WebCrawler) to 100 million web documents (from ","position":{"start":{"line":42,"column":247,"offset":4422},"end":{"line":42,"column":435,"offset":4610},"indent":[]}},{"type":"link","title":null,"url":"http://www.searchenginewatch.com/","children":[{"type":"text","value":"Search Engine Watch)","position":{"start":{"line":42,"column":436,"offset":4611},"end":{"line":42,"column":456,"offset":4631},"indent":[]}}],"position":{"start":{"line":42,"column":435,"offset":4610},"end":{"line":42,"column":492,"offset":4667},"indent":[]}},{"type":"text","value":". It is foreseeable that by the year 2000, a comprehensive index of the Web will contain over a billion documents. At the same time, the number of queries search engines handle has grown incredibly too. In March and April 1994, the World Wide Web Worm received an average of about 1500 queries per day. In November 1997, Altavista claimed it handled roughly 20 million queries per day. With the increasing number of users on the web, and automated systems which query search engines, it is likely that top search engines will handle hundreds of millions of queries per day by the year 2000. The goal of our system is to address many of the problems, both in quality and scalability, introduced by scaling search engine technology to such extraordinary numbers.","position":{"start":{"line":42,"column":492,"offset":4667},"end":{"line":42,"column":1252,"offset":5427},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":4176},"end":{"line":42,"column":1252,"offset":5427},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1.2. Google: Scaling with the Web","position":{"start":{"line":44,"column":5,"offset":5435},"end":{"line":44,"column":38,"offset":5468},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":5431},"end":{"line":44,"column":38,"offset":5468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Creating a search engine which scales even to today's web presents many challenges. Fast crawling technology is needed to gather the web documents and keep them up to date. Storage space must be used efficiently to store indices and, optionally, the documents themselves. The indexing system must process hundreds of gigabytes of data efficiently. Queries must be handled quickly, at a rate of hundreds to thousands per second.","position":{"start":{"line":46,"column":1,"offset":5472},"end":{"line":46,"column":428,"offset":5899},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":5472},"end":{"line":46,"column":428,"offset":5899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These tasks are becoming increasingly difficult as the Web grows. However, hardware performance and cost have improved dramatically to partially offset the difficulty. There are, however, several notable exceptions to this progress such as disk seek time and operating system robustness. In designing Google, we have considered both the rate of growth of the Web and technological changes. Google is designed to scale well to extremely large data sets. It makes efficient use of storage space to store the index. Its data structures are optimized for fast and efficient access (see section ","position":{"start":{"line":48,"column":1,"offset":5903},"end":{"line":48,"column":591,"offset":6493},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#data","children":[{"type":"text","value":"4.2","position":{"start":{"line":48,"column":592,"offset":6494},"end":{"line":48,"column":595,"offset":6497},"indent":[]}}],"position":{"start":{"line":48,"column":591,"offset":6493},"end":{"line":48,"column":651,"offset":6553},"indent":[]}},{"type":"text","value":"). Further, we expect that the cost to index and store text or HTML will eventually decline relative to the amount that will be available (see ","position":{"start":{"line":48,"column":651,"offset":6553},"end":{"line":48,"column":794,"offset":6696},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#b","children":[{"type":"text","value":"Appendix B","position":{"start":{"line":48,"column":795,"offset":6697},"end":{"line":48,"column":805,"offset":6707},"indent":[]}}],"position":{"start":{"line":48,"column":794,"offset":6696},"end":{"line":48,"column":858,"offset":6760},"indent":[]}},{"type":"text","value":"). This will result in favorable scaling properties for centralized systems like Google.","position":{"start":{"line":48,"column":858,"offset":6760},"end":{"line":48,"column":946,"offset":6848},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":5903},"end":{"line":48,"column":946,"offset":6848},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"1.3 Design Goals","position":{"start":{"line":50,"column":5,"offset":6856},"end":{"line":50,"column":21,"offset":6872},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":6852},"end":{"line":50,"column":21,"offset":6872},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1.3.1 Improved Search Quality","position":{"start":{"line":52,"column":6,"offset":6881},"end":{"line":52,"column":35,"offset":6910},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":6876},"end":{"line":52,"column":35,"offset":6910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our main goal is to improve the quality of web search engines. In 1994, some people believed that a complete search index would make it possible to find anything easily. According to ","position":{"start":{"line":54,"column":1,"offset":6914},"end":{"line":54,"column":184,"offset":7097},"indent":[]}},{"type":"link","title":null,"url":"http://botw.org/1994/awards/navigators.html","children":[{"type":"text","value":"Best of the Web 1994 -- Navigators,","position":{"start":{"line":54,"column":185,"offset":7098},"end":{"line":54,"column":220,"offset":7133},"indent":[]}}],"position":{"start":{"line":54,"column":184,"offset":7097},"end":{"line":54,"column":266,"offset":7179},"indent":[]}},{"type":"text","value":" \"The best navigation service should make it easy to find almost anything on the Web (once all the data is entered).\" However, the Web of 1997 is quite different. Anyone who has used a search engine recently, can readily testify that the completeness of the index is not the only factor in the quality of search results. \"Junk results\" often wash out any results that a user is interested in. In fact, as of November 1997, only one of the top four commercial search engines finds itself (returns its own search page in response to its name in the top ten results). One of the main causes of this problem is that the number of documents in the indices has been increasing by many orders of magnitude, but the user's ability to look at documents has not. People are still only willing to look at the first few tens of results. Because of this, as the collection size grows, we need tools that have very high precision (number of relevant documents returned, say in the top tens of results). Indeed, we want our notion of \"relevant\" to only include the very best documents since there may be tens of thousands of slightly relevant documents. This very high precision is important even at the expense of recall (the total number of relevant documents the system is able to return). There is quite a bit of recent optimism that the use of more hypertextual information can help improve search and other applications ","position":{"start":{"line":54,"column":266,"offset":7179},"end":{"line":54,"column":1677,"offset":8590},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":54,"column":1677,"offset":8590},"end":{"line":54,"column":1679,"offset":8592},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Marchiori 97","position":{"start":{"line":54,"column":1680,"offset":8593},"end":{"line":54,"column":1692,"offset":8605},"indent":[]}}],"position":{"start":{"line":54,"column":1679,"offset":8592},"end":{"line":54,"column":1747,"offset":8660},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":54,"column":1747,"offset":8660},"end":{"line":54,"column":1749,"offset":8662},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":54,"column":1749,"offset":8662},"end":{"line":54,"column":1750,"offset":8663},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":54,"column":1750,"offset":8663},"end":{"line":54,"column":1752,"offset":8665},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Spertus 97","position":{"start":{"line":54,"column":1753,"offset":8666},"end":{"line":54,"column":1763,"offset":8676},"indent":[]}}],"position":{"start":{"line":54,"column":1752,"offset":8665},"end":{"line":54,"column":1818,"offset":8731},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":54,"column":1818,"offset":8731},"end":{"line":54,"column":1820,"offset":8733},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":54,"column":1820,"offset":8733},"end":{"line":54,"column":1821,"offset":8734},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":54,"column":1821,"offset":8734},"end":{"line":54,"column":1823,"offset":8736},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Weiss 96","position":{"start":{"line":54,"column":1824,"offset":8737},"end":{"line":54,"column":1832,"offset":8745},"indent":[]}}],"position":{"start":{"line":54,"column":1823,"offset":8736},"end":{"line":54,"column":1887,"offset":8800},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":54,"column":1887,"offset":8800},"end":{"line":54,"column":1889,"offset":8802},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":54,"column":1889,"offset":8802},"end":{"line":54,"column":1890,"offset":8803},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":54,"column":1890,"offset":8803},"end":{"line":54,"column":1892,"offset":8805},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Kleinberg 98","position":{"start":{"line":54,"column":1893,"offset":8806},"end":{"line":54,"column":1905,"offset":8818},"indent":[]}}],"position":{"start":{"line":54,"column":1892,"offset":8805},"end":{"line":54,"column":1960,"offset":8873},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":54,"column":1960,"offset":8873},"end":{"line":54,"column":1962,"offset":8875},"indent":[]}},{"type":"text","value":". In particular, link structure ","position":{"start":{"line":54,"column":1962,"offset":8875},"end":{"line":54,"column":1994,"offset":8907},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":54,"column":1994,"offset":8907},"end":{"line":54,"column":1996,"offset":8909},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Page 98","position":{"start":{"line":54,"column":1997,"offset":8910},"end":{"line":54,"column":2004,"offset":8917},"indent":[]}}],"position":{"start":{"line":54,"column":1996,"offset":8909},"end":{"line":54,"column":2059,"offset":8972},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":54,"column":2059,"offset":8972},"end":{"line":54,"column":2061,"offset":8974},"indent":[]}},{"type":"text","value":" and link text provide a lot of information for making relevance judgments and quality filtering. Google makes use of both link structure and anchor text (see Sections ","position":{"start":{"line":54,"column":2061,"offset":8974},"end":{"line":54,"column":2229,"offset":9142},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#pr","children":[{"type":"text","value":"2.1","position":{"start":{"line":54,"column":2230,"offset":9143},"end":{"line":54,"column":2233,"offset":9146},"indent":[]}}],"position":{"start":{"line":54,"column":2229,"offset":9142},"end":{"line":54,"column":2287,"offset":9200},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":54,"column":2287,"offset":9200},"end":{"line":54,"column":2292,"offset":9205},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#anchor","children":[{"type":"text","value":"2.2","position":{"start":{"line":54,"column":2293,"offset":9206},"end":{"line":54,"column":2296,"offset":9209},"indent":[]}}],"position":{"start":{"line":54,"column":2292,"offset":9205},"end":{"line":54,"column":2354,"offset":9267},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":54,"column":2354,"offset":9267},"end":{"line":54,"column":2356,"offset":9269},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":6914},"end":{"line":54,"column":2356,"offset":9269},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1.3.2 Academic Search Engine Research","position":{"start":{"line":56,"column":6,"offset":9278},"end":{"line":56,"column":43,"offset":9315},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":9273},"end":{"line":56,"column":43,"offset":9315},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Aside from tremendous growth, the Web has also become increasingly commercial over time. In 1993, 1.5% of web servers were on .com domains. This number grew to over 60% in 1997. At the same time, search engines have migrated from the academic domain to the commercial. Up until now most search engine development has gone on at companies with little publication of technical details. This causes search engine technology to remain largely a black art and to be advertising oriented (see ","position":{"start":{"line":58,"column":1,"offset":9319},"end":{"line":58,"column":488,"offset":9806},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#a","children":[{"type":"text","value":"Appendix A","position":{"start":{"line":58,"column":489,"offset":9807},"end":{"line":58,"column":499,"offset":9817},"indent":[]}}],"position":{"start":{"line":58,"column":488,"offset":9806},"end":{"line":58,"column":552,"offset":9870},"indent":[]}},{"type":"text","value":"). With Google, we have a strong goal to push more development and understanding into the academic realm.","position":{"start":{"line":58,"column":552,"offset":9870},"end":{"line":58,"column":657,"offset":9975},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":9319},"end":{"line":58,"column":657,"offset":9975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another important design goal was to build systems that reasonable numbers of people can actually use. Usage was important to us because we think some of the most interesting research will involve leveraging the vast amount of usage data that is available from modern web systems. For example, there are many tens of millions of searches performed every day. However, it is very difficult to get this data, mainly because it is considered commercially valuable.","position":{"start":{"line":60,"column":1,"offset":9979},"end":{"line":60,"column":462,"offset":10440},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":9979},"end":{"line":60,"column":462,"offset":10440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our final design goal was to build an architecture that can support novel research activities on large-scale web data. To support novel research uses, Google stores all of the actual documents it crawls in compressed form. One of our main goals in designing Google was to set up an environment where other researchers can come in quickly, process large chunks of the web, and produce interesting results that would have been very difficult to produce otherwise. In the short time the system has been up, there have already been several papers using databases generated by Google, and many others are underway. Another goal we have is to set up a Spacelab-like environment where researchers or even students can propose and do interesting experiments on our large-scale web data.","position":{"start":{"line":62,"column":1,"offset":10444},"end":{"line":62,"column":779,"offset":11222},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":10444},"end":{"line":62,"column":779,"offset":11222},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2","position":{"start":{"line":64,"column":4,"offset":11229},"end":{"line":64,"column":5,"offset":11230},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":64,"column":5,"offset":11230},"end":{"line":64,"column":7,"offset":11232},"indent":[]}},{"type":"text","value":" System Features","position":{"start":{"line":64,"column":7,"offset":11232},"end":{"line":64,"column":23,"offset":11248},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":11226},"end":{"line":64,"column":23,"offset":11248},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Google search engine has two important features that help it produce high precision results. First, it makes use of the link structure of the Web to calculate a quality ranking for each web page. This ranking is called PageRank and is described in detail in ","position":{"start":{"line":66,"column":1,"offset":11252},"end":{"line":66,"column":263,"offset":11514},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":66,"column":263,"offset":11514},"end":{"line":66,"column":265,"offset":11516},"indent":[]}},{"type":"text","value":"Page 98","position":{"start":{"line":66,"column":265,"offset":11516},"end":{"line":66,"column":272,"offset":11523},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":66,"column":272,"offset":11523},"end":{"line":66,"column":274,"offset":11525},"indent":[]}},{"type":"text","value":". Second, Google utilizes link to improve search results.","position":{"start":{"line":66,"column":274,"offset":11525},"end":{"line":66,"column":331,"offset":11582},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":11252},"end":{"line":66,"column":331,"offset":11582},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2.1 PageRank: Bringing Order to the Web","position":{"start":{"line":68,"column":5,"offset":11590},"end":{"line":68,"column":44,"offset":11629},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":11586},"end":{"line":68,"column":44,"offset":11629},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The citation (link) graph of the web is an important resource that has largely gone unused in existing web search engines. We have created maps containing as many as 518 million of these hyperlinks, a significant sample of the total. These maps allow rapid calculation of a web page's \"PageRank\", an objective measure of its citation importance that corresponds well with people's subjective idea of importance. Because of this correspondence, PageRank is an excellent way to prioritize the results of web keyword searches. For most popular subjects, a simple text matching search that is restricted to web page titles performs admirably when PageRank prioritizes the results (demo available at ","position":{"start":{"line":70,"column":1,"offset":11633},"end":{"line":70,"column":696,"offset":12328},"indent":[]}},{"type":"link","title":null,"url":"http://google.stanford.edu/","children":[{"type":"text","value":"google.stanford.edu","position":{"start":{"line":70,"column":697,"offset":12329},"end":{"line":70,"column":716,"offset":12348},"indent":[]}}],"position":{"start":{"line":70,"column":696,"offset":12328},"end":{"line":70,"column":746,"offset":12378},"indent":[]}},{"type":"text","value":"). For the type of full text searches in the main Google system, PageRank also helps a great deal.","position":{"start":{"line":70,"column":746,"offset":12378},"end":{"line":70,"column":844,"offset":12476},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":11633},"end":{"line":70,"column":844,"offset":12476},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2.1.1 Description of PageRank Calculation","position":{"start":{"line":72,"column":6,"offset":12485},"end":{"line":72,"column":47,"offset":12526},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":12480},"end":{"line":72,"column":47,"offset":12526},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Academic citation literature has been applied to the web, largely by counting citations or backlinks to a given page. This gives some approximation of a page's importance or quality. PageRank extends this idea by not counting links from all pages equally, and by normalizing by the number of links on a page. PageRank is defined as follows:","position":{"start":{"line":74,"column":1,"offset":12530},"end":{"line":74,"column":341,"offset":12870},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":12530},"end":{"line":74,"column":341,"offset":12870},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"We assume page A has pages T1...Tn which point to it (i.e., are citations). The parameter d is a damping factor which can be set between 0 and 1. We usually set d to 0.85. There are more details about d in the next section. Also C(A) is defined as the number of links going out of page A. The PageRank of a page A is given as follows:","position":{"start":{"line":76,"column":4,"offset":12877},"end":{"line":76,"column":338,"offset":13211},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":12876},"end":{"line":76,"column":339,"offset":13212},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":12876},"end":{"line":76,"column":339,"offset":13212},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"PR(A) = (1-d) + d (PR(T1)/C(T1) + ... + PR(Tn)/C(Tn))","position":{"start":{"line":78,"column":4,"offset":13220},"end":{"line":78,"column":57,"offset":13273},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":13219},"end":{"line":78,"column":58,"offset":13274},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":13219},"end":{"line":78,"column":58,"offset":13274},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Note that the PageRanks form a probability distribution over web pages, so the sum of all web pages' PageRanks will be one.","position":{"start":{"line":80,"column":4,"offset":13282},"end":{"line":80,"column":127,"offset":13405},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":13281},"end":{"line":80,"column":128,"offset":13406},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":13281},"end":{"line":80,"column":128,"offset":13406},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":12874},"end":{"line":80,"column":128,"offset":13406},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"PageRank or ","position":{"start":{"line":82,"column":1,"offset":13410},"end":{"line":82,"column":13,"offset":13422},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"PR(A)","position":{"start":{"line":82,"column":14,"offset":13423},"end":{"line":82,"column":19,"offset":13428},"indent":[]}}],"position":{"start":{"line":82,"column":13,"offset":13422},"end":{"line":82,"column":20,"offset":13429},"indent":[]}},{"type":"text","value":" can be calculated using a simple iterative algorithm, and corresponds to the principal eigenvector of the normalized link matrix of the web. Also, a PageRank for 26 million web pages can be computed in a few hours on a medium size workstation. There are many other details which are beyond the scope of this paper.","position":{"start":{"line":82,"column":20,"offset":13429},"end":{"line":82,"column":335,"offset":13744},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":13410},"end":{"line":82,"column":335,"offset":13744},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2.1.2 Intuitive Justification","position":{"start":{"line":84,"column":6,"offset":13753},"end":{"line":84,"column":35,"offset":13782},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":13748},"end":{"line":84,"column":35,"offset":13782},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"PageRank can be thought of as a model of user behavior. We assume there is a \"random surfer\" who is given a web page at random and keeps clicking on links, never hitting \"back\" but eventually gets bored and starts on another random page. The probability that the random surfer visits a page is its PageRank. And, the ","position":{"start":{"line":86,"column":1,"offset":13786},"end":{"line":86,"column":318,"offset":14103},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"d","position":{"start":{"line":86,"column":319,"offset":14104},"end":{"line":86,"column":320,"offset":14105},"indent":[]}}],"position":{"start":{"line":86,"column":318,"offset":14103},"end":{"line":86,"column":321,"offset":14106},"indent":[]}},{"type":"text","value":" damping factor is the probability at each page the \"random surfer\" will get bored and request another random page. One important variation is to only add the damping factor ","position":{"start":{"line":86,"column":321,"offset":14106},"end":{"line":86,"column":495,"offset":14280},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"d","position":{"start":{"line":86,"column":496,"offset":14281},"end":{"line":86,"column":497,"offset":14282},"indent":[]}}],"position":{"start":{"line":86,"column":495,"offset":14280},"end":{"line":86,"column":498,"offset":14283},"indent":[]}},{"type":"text","value":" to a single page, or a group of pages. This allows for personalization and can make it nearly impossible to deliberately mislead the system in order to get a higher ranking. We have several other extensions to PageRank, again see ","position":{"start":{"line":86,"column":498,"offset":14283},"end":{"line":86,"column":729,"offset":14514},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":86,"column":729,"offset":14514},"end":{"line":86,"column":731,"offset":14516},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Page 98","position":{"start":{"line":86,"column":732,"offset":14517},"end":{"line":86,"column":739,"offset":14524},"indent":[]}}],"position":{"start":{"line":86,"column":731,"offset":14516},"end":{"line":86,"column":794,"offset":14579},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":86,"column":794,"offset":14579},"end":{"line":86,"column":796,"offset":14581},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":86,"column":796,"offset":14581},"end":{"line":86,"column":797,"offset":14582},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":13786},"end":{"line":86,"column":797,"offset":14582},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another intuitive justification is that a page can have a high PageRank if there are many pages that point to it, or if there are some pages that point to it and have a high PageRank. Intuitively, pages that are well cited from many places around the web are worth looking at. Also, pages that have perhaps only one citation from something like the ","position":{"start":{"line":88,"column":1,"offset":14586},"end":{"line":88,"column":350,"offset":14935},"indent":[]}},{"type":"link","title":null,"url":"http://www.yahoo.com/","children":[{"type":"text","value":"Yahoo!","position":{"start":{"line":88,"column":351,"offset":14936},"end":{"line":88,"column":357,"offset":14942},"indent":[]}}],"position":{"start":{"line":88,"column":350,"offset":14935},"end":{"line":88,"column":381,"offset":14966},"indent":[]}},{"type":"text","value":" homepage are also generally worth looking at. If a page was not high quality, or was a broken link, it is quite likely that Yahoo's homepage would not link to it. PageRank handles both these cases and everything in between by recursively propagating weights through the link structure of the web.","position":{"start":{"line":88,"column":381,"offset":14966},"end":{"line":88,"column":678,"offset":15263},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":14586},"end":{"line":88,"column":678,"offset":15263},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2.2 Anchor Text","position":{"start":{"line":90,"column":5,"offset":15271},"end":{"line":90,"column":20,"offset":15286},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":15267},"end":{"line":90,"column":20,"offset":15286},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The text of links is treated in a special way in our search engine. Most search engines associate the text of a link with the page that the link is on. In addition, we associate it with the page the link points to. This has several advantages. First, anchors often provide more accurate descriptions of web pages than the pages themselves. Second, anchors may exist for documents which cannot be indexed by a text-based search engine, such as images, programs, and databases. This makes it possible to return web pages which have not actually been crawled. Note that pages that have not been crawled can cause problems, since they are never checked for validity before being returned to the user. In this case, the search engine can even return a page that never actually existed, but had hyperlinks pointing to it. However, it is possible to sort the results, so that this particular problem rarely happens.","position":{"start":{"line":92,"column":1,"offset":15290},"end":{"line":92,"column":909,"offset":16198},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":15290},"end":{"line":92,"column":909,"offset":16198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This idea of propagating anchor text to the page it refers to was implemented in the World Wide Web Worm ","position":{"start":{"line":94,"column":1,"offset":16202},"end":{"line":94,"column":106,"offset":16307},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":94,"column":106,"offset":16307},"end":{"line":94,"column":108,"offset":16309},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"McBryan 94","position":{"start":{"line":94,"column":109,"offset":16310},"end":{"line":94,"column":119,"offset":16320},"indent":[]}}],"position":{"start":{"line":94,"column":108,"offset":16309},"end":{"line":94,"column":174,"offset":16375},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":94,"column":174,"offset":16375},"end":{"line":94,"column":176,"offset":16377},"indent":[]}},{"type":"text","value":" especially because it helps search non-text information, and expands the search coverage with fewer downloaded documents. We use anchor propagation mostly because anchor text can help provide better quality results. Using anchor text efficiently is technically difficult because of the large amounts of data which must be processed. In our current crawl of 24 million pages, we had over 259 million anchors which we indexed.","position":{"start":{"line":94,"column":176,"offset":16377},"end":{"line":94,"column":601,"offset":16802},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":16202},"end":{"line":94,"column":601,"offset":16802},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"2.3 Other Features","position":{"start":{"line":96,"column":5,"offset":16810},"end":{"line":96,"column":23,"offset":16828},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":16806},"end":{"line":96,"column":23,"offset":16828},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Aside from PageRank and the use of anchor text, Google has several other features. First, it has location information for all hits and so it makes extensive use of proximity in search. Second, Google keeps track of some visual presentation details such as font size of words. Words in a larger or bolder font are weighted higher than other words. Third, full raw HTML of pages is available in a repository.","position":{"start":{"line":98,"column":1,"offset":16832},"end":{"line":98,"column":407,"offset":17238},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":16832},"end":{"line":98,"column":407,"offset":17238},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3 Related Work","position":{"start":{"line":100,"column":4,"offset":17245},"end":{"line":100,"column":18,"offset":17259},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":17242},"end":{"line":100,"column":18,"offset":17259},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Search research on the web has a short and concise history. The World Wide Web Worm (WWWW) ","position":{"start":{"line":102,"column":1,"offset":17263},"end":{"line":102,"column":92,"offset":17354},"indent":[]}},{"type":"link","title":null,"url":"http://www.cs.colorado.edu/home/mcbryan/mypapers/www94.ps","children":[{"type":"text","value":"[","position":{"start":{"line":102,"column":93,"offset":17355},"end":{"line":102,"column":95,"offset":17357},"indent":[]}},{"type":"text","value":"McBryan 94","position":{"start":{"line":102,"column":95,"offset":17357},"end":{"line":102,"column":105,"offset":17367},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":105,"offset":17367},"end":{"line":102,"column":107,"offset":17369},"indent":[]}}],"position":{"start":{"line":102,"column":92,"offset":17354},"end":{"line":102,"column":167,"offset":17429},"indent":[]}},{"type":"text","value":" was one of the first web search engines. It was subsequently followed by several other academic search engines, many of which are now public companies. Compared to the growth of the Web and the importance of search engines there are precious few documents about recent search engines ","position":{"start":{"line":102,"column":167,"offset":17429},"end":{"line":102,"column":452,"offset":17714},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":102,"column":452,"offset":17714},"end":{"line":102,"column":454,"offset":17716},"indent":[]}},{"type":"link","title":null,"url":"http://info.webcrawler.com/bp/WWW94.html","children":[{"type":"text","value":"Pinkerton 94","position":{"start":{"line":102,"column":455,"offset":17717},"end":{"line":102,"column":467,"offset":17729},"indent":[]}}],"position":{"start":{"line":102,"column":454,"offset":17716},"end":{"line":102,"column":510,"offset":17772},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":510,"offset":17772},"end":{"line":102,"column":512,"offset":17774},"indent":[]}},{"type":"text","value":". According to Michael Mauldin (chief scientist, Lycos Inc) ","position":{"start":{"line":102,"column":512,"offset":17774},"end":{"line":102,"column":572,"offset":17834},"indent":[]}},{"type":"link","title":null,"url":"http://www.computer.org/pubs/expert/1997/trends/x1008/mauldin.htm","children":[{"type":"text","value":"[","position":{"start":{"line":102,"column":573,"offset":17835},"end":{"line":102,"column":575,"offset":17837},"indent":[]}},{"type":"text","value":"Mauldin","position":{"start":{"line":102,"column":575,"offset":17837},"end":{"line":102,"column":582,"offset":17844},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":102,"column":582,"offset":17844},"end":{"line":102,"column":584,"offset":17846},"indent":[]}}],"position":{"start":{"line":102,"column":572,"offset":17834},"end":{"line":102,"column":652,"offset":17914},"indent":[]}},{"type":"text","value":", \"the various services (including Lycos) closely guard the details of these databases\". However, there has been a fair amount of work on specific features of search engines. Especially well represented is work which can get results by post-processing the results of existing commercial search engines, or produce small scale \"individualized\" search engines. Finally, there has been a lot of research on information retrieval systems, especially on well controlled collections. In the next two sections, we discuss some areas where this research needs to be extended to work better on the web.","position":{"start":{"line":102,"column":652,"offset":17914},"end":{"line":102,"column":1245,"offset":18507},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":17263},"end":{"line":102,"column":1245,"offset":18507},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3.1 Information Retrieval","position":{"start":{"line":104,"column":5,"offset":18515},"end":{"line":104,"column":30,"offset":18540},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":18511},"end":{"line":104,"column":30,"offset":18540},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Work in information retrieval systems goes back many years and is well developed ","position":{"start":{"line":106,"column":1,"offset":18544},"end":{"line":106,"column":82,"offset":18625},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":106,"column":82,"offset":18625},"end":{"line":106,"column":84,"offset":18627},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Witten 94","position":{"start":{"line":106,"column":85,"offset":18628},"end":{"line":106,"column":94,"offset":18637},"indent":[]}}],"position":{"start":{"line":106,"column":84,"offset":18627},"end":{"line":106,"column":149,"offset":18692},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":106,"column":149,"offset":18692},"end":{"line":106,"column":151,"offset":18694},"indent":[]}},{"type":"text","value":". However, most of the research on information retrieval systems is on small well controlled homogeneous collections such as collections of scientific papers or news stories on a related topic. Indeed, the primary benchmark for information retrieval, the Text Retrieval Conference ","position":{"start":{"line":106,"column":151,"offset":18694},"end":{"line":106,"column":432,"offset":18975},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":106,"column":432,"offset":18975},"end":{"line":106,"column":434,"offset":18977},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"TREC 96","position":{"start":{"line":106,"column":435,"offset":18978},"end":{"line":106,"column":442,"offset":18985},"indent":[]}}],"position":{"start":{"line":106,"column":434,"offset":18977},"end":{"line":106,"column":497,"offset":19040},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":106,"column":497,"offset":19040},"end":{"line":106,"column":499,"offset":19042},"indent":[]}},{"type":"text","value":", uses a fairly small, well controlled collection for their benchmarks. The \"Very Large Corpus\" benchmark is only 20GB compared to the 147GB from our crawl of 24 million web pages. Things that work well on TREC often do not produce good results on the web. For example, the standard vector space model tries to return the document that most closely approximates the query, given that both query and document are vectors defined by their word occurrence. On the web, this strategy often returns very short documents that are the query plus a few words. For example, we have seen a major search engine return a page containing only \"Bill Clinton Sucks\" and picture from a \"Bill Clinton\" query. Some argue that on the web, users should specify more accurately what they want and add more words to their query. We disagree vehemently with this position. If a user issues a query like \"Bill Clinton\" they should get reasonable results since there is a enormous amount of high quality information available on this topic. Given examples like these, we believe that the standard information retrieval work needs to be extended to deal effectively with the web.","position":{"start":{"line":106,"column":499,"offset":19042},"end":{"line":106,"column":1652,"offset":20195},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":18544},"end":{"line":106,"column":1652,"offset":20195},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"3.2 Differences Between the Web and Well Controlled Collections","position":{"start":{"line":108,"column":5,"offset":20203},"end":{"line":108,"column":68,"offset":20266},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":20199},"end":{"line":108,"column":68,"offset":20266},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The web is a vast collection of completely uncontrolled heterogeneous documents. Documents on the web have extreme variation internal to the documents, and also in the external meta information that might be available. For example, documents differ internally in their language (both human and programming), vocabulary (email addresses, links, zip codes, phone numbers, product numbers), type or format (text, HTML, PDF, images, sounds), and may even be machine generated (log files or output from a database). On the other hand, we define external meta information as information that can be inferred about a document, but is not contained within it. Examples of external meta information include things like reputation of the source, update frequency, quality, popularity or usage, and citations. Not only are the possible sources of external meta information varied, but the things that are being measured vary many orders of magnitude as well. For example, compare the usage information from a major homepage, like Yahoo's which currently receives millions of page views every day with an obscure historical article which might receive one view every ten years. Clearly, these two items must be treated very differently by a search engine.","position":{"start":{"line":110,"column":1,"offset":20270},"end":{"line":110,"column":1244,"offset":21513},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":20270},"end":{"line":110,"column":1244,"offset":21513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Another big difference between the web and traditional well controlled collections is that there is virtually no control over what people can put on the web. Couple this flexibility to publish anything with the enormous influence of search engines to route traffic and companies which deliberately manipulating search engines for profit become a serious problem. This problem that has not been addressed in traditional closed information retrieval systems. Also, it is interesting to note that metadata efforts have largely failed with web search engines, because any text on the page which is not directly represented to the user is abused to manipulate search engines. There are even numerous companies which specialize in manipulating search engines for profit.","position":{"start":{"line":112,"column":1,"offset":21517},"end":{"line":112,"column":765,"offset":22281},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":21517},"end":{"line":112,"column":765,"offset":22281},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4 System Anatomy","position":{"start":{"line":114,"column":4,"offset":22288},"end":{"line":114,"column":20,"offset":22304},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":22285},"end":{"line":114,"column":20,"offset":22304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, we will provide a high level discussion of the architecture. Then, there is some in-depth descriptions of important data structures. Finally, the major applications: crawling, indexing, and searching will be examined in depth.","position":{"start":{"line":116,"column":1,"offset":22308},"end":{"line":116,"column":234,"offset":22541},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":22308},"end":{"line":116,"column":234,"offset":22541},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"","alt":null,"position":{"start":{"line":118,"column":1,"offset":22545},"end":{"line":118,"column":6,"offset":22550},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":22545},"end":{"line":118,"column":6,"offset":22550},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Figure 1. High Level Google Architecture","position":{"start":{"line":120,"column":1,"offset":22554},"end":{"line":120,"column":41,"offset":22594},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":22554},"end":{"line":120,"column":41,"offset":22594},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4.1 Google Architecture Overview","position":{"start":{"line":122,"column":5,"offset":22602},"end":{"line":122,"column":37,"offset":22634},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":22598},"end":{"line":122,"column":37,"offset":22634},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this section, we will give a high level overview of how the whole system works as pictured in Figure 1. Further sections will discuss the applications and data structures not mentioned in this section. Most of Google is implemented in C or C++ for efficiency and can run in either Solaris or Linux.","position":{"start":{"line":124,"column":1,"offset":22638},"end":{"line":124,"column":302,"offset":22939},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":22638},"end":{"line":124,"column":302,"offset":22939},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Google, the web crawling (downloading of web pages) is done by several distributed crawlers. There is a URLserver that sends lists of URLs to be fetched to the crawlers. The web pages that are fetched are then sent to the storeserver. The storeserver then compresses and stores the web pages into a repository. Every web page has an associated ID number called a docID which is assigned whenever a new URL is parsed out of a web page. The indexing function is performed by the indexer and the sorter. The indexer performs a number of functions. It reads the repository, uncompresses the documents, and parses them. Each document is converted into a set of word occurrences called hits. The hits record the word, position in document, an approximation of font size, and capitalization. The indexer distributes these hits into a set of \"barrels\", creating a partially sorted forward index. The indexer performs another important function. It parses out all the links in every web page and stores important information about them in an anchors file. This file contains enough information to determine where each link points from and to, and the text of the link.","position":{"start":{"line":126,"column":1,"offset":22943},"end":{"line":126,"column":1163,"offset":24105},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":22943},"end":{"line":126,"column":1163,"offset":24105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The URLresolver reads the anchors file and converts relative URLs into absolute URLs and in turn into docIDs. It puts the anchor text into the forward index, associated with the docID that the anchor points to. It also generates a database of links which are pairs of docIDs. The links database is used to compute PageRanks for all the documents.","position":{"start":{"line":128,"column":1,"offset":24109},"end":{"line":128,"column":347,"offset":24455},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":24109},"end":{"line":128,"column":347,"offset":24455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The sorter takes the barrels, which are sorted by docID (this is a simplification, see ","position":{"start":{"line":130,"column":1,"offset":24459},"end":{"line":130,"column":88,"offset":24546},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#hits","children":[{"type":"text","value":"Section 4.2.5","position":{"start":{"line":130,"column":89,"offset":24547},"end":{"line":130,"column":102,"offset":24560},"indent":[]}}],"position":{"start":{"line":130,"column":88,"offset":24546},"end":{"line":130,"column":158,"offset":24616},"indent":[]}},{"type":"text","value":"), and resorts them by wordID to generate the inverted index. This is done in place so that little temporary space is needed for this operation. The sorter also produces a list of wordIDs and offsets into the inverted index. A program called DumpLexicon takes this list together with the lexicon produced by the indexer and generates a new lexicon to be used by the searcher. The searcher is run by a web server and uses the lexicon built by DumpLexicon together with the inverted index and the PageRanks to answer queries.","position":{"start":{"line":130,"column":158,"offset":24616},"end":{"line":130,"column":681,"offset":25139},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":24459},"end":{"line":130,"column":681,"offset":25139},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4.2 Major Data Structures","position":{"start":{"line":132,"column":5,"offset":25147},"end":{"line":132,"column":30,"offset":25172},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":25143},"end":{"line":132,"column":30,"offset":25172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google's data structures are optimized so that a large document collection can be crawled, indexed, and searched with little cost. Although, CPUs and bulk input output rates have improved dramatically over the years, a disk seek still requires about 10 ms to complete. Google is designed to avoid disk seeks whenever possible, and this has had a considerable influence on the design of the data structures.","position":{"start":{"line":134,"column":1,"offset":25176},"end":{"line":134,"column":407,"offset":25582},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":25176},"end":{"line":134,"column":407,"offset":25582},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.1 BigFiles","position":{"start":{"line":136,"column":6,"offset":25591},"end":{"line":136,"column":20,"offset":25605},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":25586},"end":{"line":136,"column":20,"offset":25605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"BigFiles are virtual files spanning multiple file systems and are addressable by 64 bit integers. The allocation among multiple file systems is handled automatically. The BigFiles package also handles allocation and deallocation of file descriptors, since the operating systems do not provide enough for our needs. BigFiles also support rudimentary compression options.","position":{"start":{"line":138,"column":1,"offset":25609},"end":{"line":138,"column":370,"offset":25978},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":25609},"end":{"line":138,"column":370,"offset":25978},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.2 Repository","position":{"start":{"line":140,"column":6,"offset":25987},"end":{"line":140,"column":22,"offset":26003},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":25982},"end":{"line":140,"column":22,"offset":26003},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"http://infolab.stanford.edu/~backrub/repos.gif","alt":null,"position":{"start":{"line":142,"column":1,"offset":26007},"end":{"line":142,"column":52,"offset":26058},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":26007},"end":{"line":142,"column":52,"offset":26058},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Figure 2. Repository Data Structure","position":{"start":{"line":144,"column":1,"offset":26062},"end":{"line":144,"column":36,"offset":26097},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":26062},"end":{"line":144,"column":36,"offset":26097},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The repository contains the full HTML of every web page. Each page is compressed using zlib (see ","position":{"start":{"line":146,"column":1,"offset":26101},"end":{"line":146,"column":98,"offset":26198},"indent":[]}},{"type":"link","title":null,"url":"ftp://ftp.uu.net/graphics/png/documents/zlib/zdoc-index.html","children":[{"type":"text","value":"RFC1950","position":{"start":{"line":146,"column":99,"offset":26199},"end":{"line":146,"column":106,"offset":26206},"indent":[]}}],"position":{"start":{"line":146,"column":98,"offset":26198},"end":{"line":146,"column":169,"offset":26269},"indent":[]}},{"type":"text","value":"). The choice of compression technique is a tradeoff between speed and compression ratio. We chose zlib's speed over a significant improvement in compression offered by ","position":{"start":{"line":146,"column":169,"offset":26269},"end":{"line":146,"column":338,"offset":26438},"indent":[]}},{"type":"link","title":null,"url":"http://www.muraroa.demon.co.uk/","children":[{"type":"text","value":"bzip","position":{"start":{"line":146,"column":339,"offset":26439},"end":{"line":146,"column":343,"offset":26443},"indent":[]}}],"position":{"start":{"line":146,"column":338,"offset":26438},"end":{"line":146,"column":377,"offset":26477},"indent":[]}},{"type":"text","value":". The compression rate of bzip was approximately 4 to 1 on the repository as compared to zlib's 3 to 1 compression. In the repository, the documents are stored one after the other and are prefixed by docID, length, and URL as can be seen in Figure 2. The repository requires no other data structures to be used in order to access it. This helps with data consistency and makes development much easier; we can rebuild all the other data structures from only the repository and a file which lists crawler errors.","position":{"start":{"line":146,"column":377,"offset":26477},"end":{"line":146,"column":887,"offset":26987},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":26101},"end":{"line":146,"column":887,"offset":26987},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.3 Document Index","position":{"start":{"line":148,"column":6,"offset":26996},"end":{"line":148,"column":26,"offset":27016},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":26991},"end":{"line":148,"column":26,"offset":27016},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The document index keeps information about each document. It is a fixed width ISAM (Index sequential access mode) index, ordered by docID. The information stored in each entry includes the current document status, a pointer into the repository, a document checksum, and various statistics. If the document has been crawled, it also contains a pointer into a variable width file called docinfo which contains its URL and title. Otherwise the pointer points into the URLlist which contains just the URL. This design decision was driven by the desire to have a reasonably compact data structure, and the ability to fetch a record in one disk seek during a search","position":{"start":{"line":150,"column":1,"offset":27020},"end":{"line":150,"column":660,"offset":27679},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":27020},"end":{"line":150,"column":660,"offset":27679},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Additionally, there is a file which is used to convert URLs into docIDs. It is a list of URL checksums with their corresponding docIDs and is sorted by checksum. In order to find the docID of a particular URL, the URL's checksum is computed and a binary search is performed on the checksums file to find its docID. URLs may be converted into docIDs in batch by doing a merge with this file. This is the technique the URLresolver uses to turn URLs into docIDs. This batch mode of update is crucial because otherwise we must perform one seek for every link which assuming one disk would take more than a month for our 322 million link dataset.","position":{"start":{"line":152,"column":1,"offset":27683},"end":{"line":152,"column":642,"offset":28324},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":27683},"end":{"line":152,"column":642,"offset":28324},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.4 Lexicon","position":{"start":{"line":154,"column":6,"offset":28333},"end":{"line":154,"column":19,"offset":28346},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":28328},"end":{"line":154,"column":19,"offset":28346},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The lexicon has several different forms. One important change from earlier systems is that the lexicon can fit in memory for a reasonable price. In the current implementation we can keep the lexicon in memory on a machine with 256 MB of main memory. The current lexicon contains 14 million words (though some rare words were not added to the lexicon). It is implemented in two parts -- a list of the words (concatenated together but separated by nulls) and a hash table of pointers. For various functions, the list of words has some auxiliary information which is beyond the scope of this paper to explain fully.","position":{"start":{"line":156,"column":1,"offset":28350},"end":{"line":156,"column":613,"offset":28962},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":28350},"end":{"line":156,"column":613,"offset":28962},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.5 Hit Lists","position":{"start":{"line":158,"column":6,"offset":28971},"end":{"line":158,"column":21,"offset":28986},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":28966},"end":{"line":158,"column":21,"offset":28986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A hit list corresponds to a list of occurrences of a particular word in a particular document including position, font, and capitalization information. Hit lists account for most of the space used in both the forward and the inverted indices. Because of this, it is important to represent them as efficiently as possible. We considered several alternatives for encoding position, font, and capitalization -- simple encoding (a triple of integers), a compact encoding (a hand optimized allocation of bits), and Huffman coding. In the end we chose a hand optimized compact encoding since it required far less space than the simple encoding and far less bit manipulation than Huffman coding. The details of the hits are shown in Figure 3.","position":{"start":{"line":160,"column":1,"offset":28990},"end":{"line":160,"column":736,"offset":29725},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":28990},"end":{"line":160,"column":736,"offset":29725},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our compact encoding uses two bytes for every hit. There are two types of hits: fancy hits and plain hits. Fancy hits include hits occurring in a URL, title, anchor text, or meta tag. Plain hits include everything else. A plain hit consists of a capitalization bit, font size, and 12 bits of word position in a document (all positions higher than 4095 are labeled 4096). Font size is represented relative to the rest of the document using three bits (only 7 values are actually used because 111 is the flag that signals a fancy hit). A fancy hit consists of a capitalization bit, the font size set to 7 to indicate it is a fancy hit, 4 bits to encode the type of fancy hit, and 8 bits of position. For anchor hits, the 8 bits of position are split into 4 bits for position in anchor and 4 bits for a hash of the docID the anchor occurs in. This gives us some limited phrase searching as long as there are not that many anchors for a particular word. We expect to update the way that anchor hits are stored to allow for greater resolution in the position and docIDhash fields. We use font size relative to the rest of the document because when searching, you do not want to rank otherwise identical documents differently just because one of the documents is in a larger font.","position":{"start":{"line":162,"column":1,"offset":29729},"end":{"line":162,"column":1275,"offset":31003},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":29729},"end":{"line":162,"column":1275,"offset":31003},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"http://infolab.stanford.edu/~backrub/barrels.gif","alt":null,"position":{"start":{"line":164,"column":1,"offset":31007},"end":{"line":164,"column":54,"offset":31060},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":31007},"end":{"line":164,"column":54,"offset":31060},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Figure 3. Forward and Reverse Indexes and the Lexicon","position":{"start":{"line":166,"column":1,"offset":31064},"end":{"line":166,"column":54,"offset":31117},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":31064},"end":{"line":166,"column":54,"offset":31117},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The length of a hit list is stored before the hits themselves. To save space, the length of the hit list is combined with the wordID in the forward index and the docID in the inverted index. This limits it to 8 and 5 bits respectively (there are some tricks which allow 8 bits to be borrowed from the wordID). If the length is longer than would fit in that many bits, an escape code is used in those bits, and the next two bytes contain the actual length.","position":{"start":{"line":168,"column":1,"offset":31121},"end":{"line":168,"column":456,"offset":31576},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":31121},"end":{"line":168,"column":456,"offset":31576},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.6 Forward Index","position":{"start":{"line":170,"column":6,"offset":31585},"end":{"line":170,"column":25,"offset":31604},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":31580},"end":{"line":170,"column":25,"offset":31604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The forward index is actually already partially sorted. It is stored in a number of barrels (we used 64). Each barrel holds a range of wordID's. If a document contains words that fall into a particular barrel, the docID is recorded into the barrel, followed by a list of wordID's with hitlists which correspond to those words. This scheme requires slightly more storage because of duplicated docIDs but the difference is very small for a reasonable number of buckets and saves considerable time and coding complexity in the final indexing phase done by the sorter. Furthermore, instead of storing actual wordID's, we store each wordID as a relative difference from the minimum wordID that falls into the barrel the wordID is in. This way, we can use just 24 bits for the wordID's in the unsorted barrels, leaving 8 bits for the hit list length.","position":{"start":{"line":172,"column":1,"offset":31608},"end":{"line":172,"column":845,"offset":32452},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":31608},"end":{"line":172,"column":845,"offset":32452},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.2.7 Inverted Index","position":{"start":{"line":174,"column":6,"offset":32461},"end":{"line":174,"column":26,"offset":32481},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":32456},"end":{"line":174,"column":26,"offset":32481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The inverted index consists of the same barrels as the forward index, except that they have been processed by the sorter. For every valid wordID, the lexicon contains a pointer into the barrel that wordID falls into. It points to a doclist of docID's together with their corresponding hit lists. This doclist represents all the occurrences of that word in all documents.","position":{"start":{"line":176,"column":1,"offset":32485},"end":{"line":176,"column":371,"offset":32855},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":32485},"end":{"line":176,"column":371,"offset":32855},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An important issue is in what order the docID's should appear in the doclist. One simple solution is to store them sorted by docID. This allows for quick merging of different doclists for multiple word queries. Another option is to store them sorted by a ranking of the occurrence of the word in each document. This makes answering one word queries trivial and makes it likely that the answers to multiple word queries are near the start. However, merging is much more difficult. Also, this makes development much more difficult in that a change to the ranking function requires a rebuild of the index. We chose a compromise between these options, keeping two sets of inverted barrels -- one set for hit lists which include title or anchor hits and another set for all hit lists. This way, we check the first set of barrels first and if there are not enough matches within those barrels we check the larger ones.","position":{"start":{"line":178,"column":1,"offset":32859},"end":{"line":178,"column":913,"offset":33771},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":32859},"end":{"line":178,"column":913,"offset":33771},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4.3 Crawling the Web","position":{"start":{"line":180,"column":5,"offset":33779},"end":{"line":180,"column":25,"offset":33799},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":33775},"end":{"line":180,"column":25,"offset":33799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Running a web crawler is a challenging task. There are tricky performance and reliability issues and even more importantly, there are social issues. Crawling is the most fragile application since it involves interacting with hundreds of thousands of web servers and various name servers which are all beyond the control of the system.","position":{"start":{"line":182,"column":1,"offset":33803},"end":{"line":182,"column":335,"offset":34137},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":33803},"end":{"line":182,"column":335,"offset":34137},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In order to scale to hundreds of millions of web pages, Google has a fast distributed crawling system. A single URLserver serves lists of URLs to a number of crawlers (we typically ran about 3). Both the URLserver and the crawlers are implemented in Python. Each crawler keeps roughly 300 connections open at once. This is necessary to retrieve web pages at a fast enough pace. At peak speeds, the system can crawl over 100 web pages per second using four crawlers. This amounts to roughly 600K per second of data. A major performance stress is DNS lookup. Each crawler maintains a its own DNS cache so it does not need to do a DNS lookup before crawling each document. Each of the hundreds of connections can be in a number of different states: looking up DNS, connecting to host, sending request, and receiving response. These factors make the crawler a complex component of the system. It uses asynchronous IO to manage events, and a number of queues to move page fetches from state to state.","position":{"start":{"line":184,"column":1,"offset":34141},"end":{"line":184,"column":996,"offset":35136},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":34141},"end":{"line":184,"column":996,"offset":35136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It turns out that running a crawler which connects to more than half a million servers, and generates tens of millions of log entries generates a fair amount of email and phone calls. Because of the vast number of people coming on line, there are always those who do not know what a crawler is, because this is the first one they have seen. Almost daily, we receive an email something like, \"Wow, you looked at a lot of pages from my web site. How did you like it?\" There are also some people who do not know about the ","position":{"start":{"line":186,"column":1,"offset":35140},"end":{"line":186,"column":520,"offset":35659},"indent":[]}},{"type":"link","title":null,"url":"http://info.webcrawler.com/mak/projects/robots/norobots.html","children":[{"type":"text","value":"robots exclusion protocol","position":{"start":{"line":186,"column":521,"offset":35660},"end":{"line":186,"column":546,"offset":35685},"indent":[]}}],"position":{"start":{"line":186,"column":520,"offset":35659},"end":{"line":186,"column":609,"offset":35748},"indent":[]}},{"type":"text","value":", and think their page should be protected from indexing by a statement like, \"This page is copyrighted and should not be indexed\", which needless to say is difficult for web crawlers to understand. Also, because of the huge amount of data involved, unexpected things will happen. For example, our system tried to crawl an online game. This resulted in lots of garbage messages in the middle of their game! It turns out this was an easy problem to fix. But this problem had not come up until we had downloaded tens of millions of pages. Because of the immense variation in web pages and servers, it is virtually impossible to test a crawler without running it on large part of the Internet. Invariably, there are hundreds of obscure problems which may only occur on one page out of the whole web and cause the crawler to crash, or worse, cause unpredictable or incorrect behavior. Systems which access large parts of the Internet need to be designed to be very robust and carefully tested. Since large complex systems such as crawlers will invariably cause problems, there needs to be significant resources devoted to reading the email and solving these problems as they come up.","position":{"start":{"line":186,"column":609,"offset":35748},"end":{"line":186,"column":1788,"offset":36927},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":35140},"end":{"line":186,"column":1788,"offset":36927},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4.4 Indexing the Web","position":{"start":{"line":188,"column":5,"offset":36935},"end":{"line":188,"column":25,"offset":36955},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":36931},"end":{"line":188,"column":25,"offset":36955},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Parsing --","position":{"start":{"line":190,"column":5,"offset":36963},"end":{"line":190,"column":15,"offset":36973},"indent":[]}}],"position":{"start":{"line":190,"column":3,"offset":36961},"end":{"line":190,"column":17,"offset":36975},"indent":[]}},{"type":"text","value":" Any parser which is designed to run on the entire Web must handle a huge array of possible errors. These range from typos in HTML tags to kilobytes of zeros in the middle of a tag, non-ASCII characters, HTML tags nested hundreds deep, and a great variety of other errors that challenge anyone's imagination to come up with equally creative ones. For maximum speed, instead of using YACC to generate a CFG parser, we use flex to generate a lexical analyzer which we outfit with its own stack. Developing this parser which runs at a reasonable speed and is very robust involved a fair amount of work.","position":{"start":{"line":190,"column":17,"offset":36975},"end":{"line":190,"column":616,"offset":37574},"indent":[]}}],"position":{"start":{"line":190,"column":3,"offset":36961},"end":{"line":190,"column":616,"offset":37574},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":36959},"end":{"line":190,"column":616,"offset":37574},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Indexing","position":{"start":{"line":191,"column":5,"offset":37580},"end":{"line":191,"column":13,"offset":37588},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":37578},"end":{"line":191,"column":15,"offset":37590},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":191,"column":15,"offset":37590},"end":{"line":191,"column":16,"offset":37591},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Documents into Barrels --","position":{"start":{"line":191,"column":18,"offset":37593},"end":{"line":191,"column":43,"offset":37618},"indent":[]}}],"position":{"start":{"line":191,"column":16,"offset":37591},"end":{"line":191,"column":45,"offset":37620},"indent":[]}},{"type":"text","value":" After each document is parsed, it is encoded into a number of barrels. Every word is converted into a wordID by using an in-memory hash table -- the lexicon. New additions to the lexicon hash table are logged to a file. Once the words are converted into wordID's, their occurrences in the current document are translated into hit lists and are written into the forward barrels. The main difficulty with parallelization of the indexing phase is that the lexicon needs to be shared. Instead of sharing the lexicon, we took the approach of writing a log of all the extra words that were not in a base lexicon, which we fixed at 14 million words. That way multiple indexers can run in parallel and then the small log file of extra words can be processed by one final indexer.","position":{"start":{"line":191,"column":45,"offset":37620},"end":{"line":191,"column":817,"offset":38392},"indent":[]}}],"position":{"start":{"line":191,"column":3,"offset":37578},"end":{"line":191,"column":817,"offset":38392},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":37576},"end":{"line":191,"column":817,"offset":38392},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Sorting","position":{"start":{"line":192,"column":5,"offset":38398},"end":{"line":192,"column":12,"offset":38405},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":38396},"end":{"line":192,"column":14,"offset":38407},"indent":[]}},{"type":"text","value":" -- In order to generate the inverted index, the sorter takes each of the forward barrels and sorts it by wordID to produce an inverted barrel for title and anchor hits and a full text inverted barrel. This process happens one barrel at a time, thus requiring little temporary storage. Also, we parallelize the sorting phase to use as many machines as we have simply by running multiple sorters, which can process different buckets at the same time. Since the barrels don't fit into main memory, the sorter further subdivides them into baskets which do fit into memory based on wordID and docID. Then the sorter, loads each basket into memory, sorts it and writes its contents into the short inverted barrel and the full inverted barrel.","position":{"start":{"line":192,"column":14,"offset":38407},"end":{"line":192,"column":751,"offset":39144},"indent":[]}}],"position":{"start":{"line":192,"column":3,"offset":38396},"end":{"line":192,"column":751,"offset":39144},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":38394},"end":{"line":192,"column":751,"offset":39144},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":36959},"end":{"line":192,"column":751,"offset":39144},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"4.5 Searching","position":{"start":{"line":194,"column":5,"offset":39152},"end":{"line":194,"column":18,"offset":39165},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":39148},"end":{"line":194,"column":18,"offset":39165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The goal of searching is to provide quality search results efficiently. Many of the large commercial search engines seemed to have made great progress in terms of efficiency. Therefore, we have focused more on quality of search in our research, although we believe our solutions are scalable to commercial volumes with a bit more effort. The google query evaluation process is show in Figure 4.","position":{"start":{"line":196,"column":1,"offset":39169},"end":{"line":196,"column":395,"offset":39563},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":39169},"end":{"line":196,"column":395,"offset":39563},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Parse the query.","position":{"start":{"line":198,"column":5,"offset":39571},"end":{"line":198,"column":21,"offset":39587},"indent":[]}}],"position":{"start":{"line":198,"column":5,"offset":39571},"end":{"line":198,"column":21,"offset":39587},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":39567},"end":{"line":198,"column":21,"offset":39587},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Convert words into wordIDs.","position":{"start":{"line":199,"column":5,"offset":39593},"end":{"line":199,"column":32,"offset":39620},"indent":[]}}],"position":{"start":{"line":199,"column":5,"offset":39593},"end":{"line":199,"column":32,"offset":39620},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":39589},"end":{"line":199,"column":32,"offset":39620},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Seek to the start of the doclist in the short barrel for every word.","position":{"start":{"line":200,"column":5,"offset":39626},"end":{"line":200,"column":73,"offset":39694},"indent":[]}}],"position":{"start":{"line":200,"column":5,"offset":39626},"end":{"line":200,"column":73,"offset":39694},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":39622},"end":{"line":200,"column":73,"offset":39694},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Scan through the doclists until there is a document that matches all the search terms.","position":{"start":{"line":201,"column":5,"offset":39700},"end":{"line":201,"column":91,"offset":39786},"indent":[]}}],"position":{"start":{"line":201,"column":5,"offset":39700},"end":{"line":201,"column":91,"offset":39786},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":39696},"end":{"line":201,"column":91,"offset":39786},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Compute the rank of that document for the query.","position":{"start":{"line":202,"column":5,"offset":39792},"end":{"line":202,"column":53,"offset":39840},"indent":[]}}],"position":{"start":{"line":202,"column":5,"offset":39792},"end":{"line":202,"column":53,"offset":39840},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":39788},"end":{"line":202,"column":53,"offset":39840},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If we are in the short barrels and at the end of any doclist, seek to the start of the doclist in the full barrel for every word and go to step 4.","position":{"start":{"line":203,"column":5,"offset":39846},"end":{"line":203,"column":151,"offset":39992},"indent":[]}}],"position":{"start":{"line":203,"column":5,"offset":39846},"end":{"line":203,"column":151,"offset":39992},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":39842},"end":{"line":203,"column":151,"offset":39992},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If we are not at the end of any doclist go to step 4.","position":{"start":{"line":204,"column":5,"offset":39998},"end":{"line":204,"column":58,"offset":40051},"indent":[]}}],"position":{"start":{"line":204,"column":5,"offset":39998},"end":{"line":204,"column":58,"offset":40051},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":39994},"end":{"line":204,"column":58,"offset":40051},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":39567},"end":{"line":204,"column":58,"offset":40051},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Sort the documents that have matched by rank and return the top k.","position":{"start":{"line":206,"column":1,"offset":40055},"end":{"line":206,"column":67,"offset":40121},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":40055},"end":{"line":206,"column":67,"offset":40121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Figure 4. Google Query Evaluation","position":{"start":{"line":208,"column":1,"offset":40125},"end":{"line":208,"column":34,"offset":40158},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":40125},"end":{"line":208,"column":34,"offset":40158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To put a limit on response time, once a certain number (currently 40,000) of matching documents are found, the searcher automatically goes to step 8 in Figure 4. This means that it is possible that sub-optimal results would be returned. We are currently investigating other ways to solve this problem. In the past, we sorted the hits according to PageRank, which seemed to improve the situation.","position":{"start":{"line":210,"column":1,"offset":40162},"end":{"line":210,"column":396,"offset":40557},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":40162},"end":{"line":210,"column":396,"offset":40557},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.5.1 The Ranking System","position":{"start":{"line":212,"column":6,"offset":40566},"end":{"line":212,"column":30,"offset":40590},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":40561},"end":{"line":212,"column":30,"offset":40590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google maintains much more information about web documents than typical search engines. Every hitlist includes position, font, and capitalization information. Additionally, we factor in hits from anchor text and the PageRank of the document. Combining all of this information into a rank is difficult. We designed our ranking function so that no particular factor can have too much influence. First, consider the simplest case -- a single word query. In order to rank a document with a single word query, Google looks at that document's hit list for that word. Google considers each hit to be one of several different types (title, anchor, URL, plain text large font, plain text small font, ...), each of which has its own type-weight. The type-weights make up a vector indexed by type. Google counts the number of hits of each type in the hit list. Then every count is converted into a count-weight. Count-weights increase linearly with counts at first but quickly taper off so that more than a certain count will not help. We take the dot product of the vector of count-weights with the vector of type-weights to compute an IR score for the document. Finally, the IR score is combined with PageRank to give a final rank to the document.","position":{"start":{"line":214,"column":1,"offset":40594},"end":{"line":214,"column":1239,"offset":41832},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":40594},"end":{"line":214,"column":1239,"offset":41832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For a multi-word search, the situation is more complicated. Now multiple hit lists must be scanned through at once so that hits occurring close together in a document are weighted higher than hits occurring far apart. The hits from the multiple hit lists are matched up so that nearby hits are matched together. For every matched set of hits, a proximity is computed. The proximity is based on how far apart the hits are in the document (or anchor) but is classified into 10 different value \"bins\" ranging from a phrase match to \"not even close\". Counts are computed not only for every type of hit but for every type and proximity. Every type and proximity pair has a type-prox-weight. The counts are converted into count-weights and we take the dot product of the count-weights and the type-prox-weights to compute an IR score. All of these numbers and matrices can all be displayed with the search results using a special debug mode. These displays have been very helpful in developing the ranking system.","position":{"start":{"line":216,"column":1,"offset":41836},"end":{"line":216,"column":1008,"offset":42843},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":41836},"end":{"line":216,"column":1008,"offset":42843},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.5.2 Feedback","position":{"start":{"line":218,"column":6,"offset":42852},"end":{"line":218,"column":20,"offset":42866},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":42847},"end":{"line":218,"column":20,"offset":42866},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ranking function has many parameters like the type-weights and the type-prox-weights. Figuring out the right values for these parameters is something of a black art. In order to do this, we have a user feedback mechanism in the search engine. A trusted user may optionally evaluate all of the results that are returned. This feedback is saved. Then when we modify the ranking function, we can see the impact of this change on all previous searches which were ranked. Although far from perfect, this gives us some idea of how a change in the ranking function affects the search results.","position":{"start":{"line":220,"column":1,"offset":42870},"end":{"line":220,"column":590,"offset":43459},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":42870},"end":{"line":220,"column":590,"offset":43459},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5 Results and Performance","position":{"start":{"line":222,"column":4,"offset":43466},"end":{"line":222,"column":29,"offset":43491},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":43463},"end":{"line":222,"column":29,"offset":43491},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The most important measure of a search engine is the quality of its search results. While a complete user evaluation is beyond the scope of this paper, our own experience with Google has shown it to produce better results than the major commercial search engines for most searches. As an example which illustrates the use of PageRank, anchor text, and proximity, Figure 4 shows Google's results for a search on \"bill clinton\". These results demonstrates some of Google's features. The results are clustered by server. This helps considerably when sifting through result sets. A number of results are from the whitehouse.gov domain which is what one may reasonably expect from such a search. Currently, most major commercial search engines do not return any results from whitehouse.gov, much less the right ones. Notice that there is no title for the first result. This is because it was not crawled. Instead, Google relied on anchor text to determine this was a good answer to the query. Similarly, the fifth result is an email address which, of course, is not crawlable. It is also a result of anchor text.","position":{"start":{"line":224,"column":1,"offset":43495},"end":{"line":224,"column":1108,"offset":44602},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":43495},"end":{"line":224,"column":1108,"offset":44602},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All of the results are reasonably high quality pages and, at last check, none were broken links. This is largely because they all have high PageRank. The PageRanks are the percentages in red along with bar graphs. Finally, there are no results about a Bill other than Clinton or about a Clinton other than Bill. This is because we place heavy importance on the proximity of word occurrences. Of course a true test of the quality of a search engine would involve an extensive user study or results analysis which we do not have room for here. Instead, we invite the reader to try Google for themselves at ","position":{"start":{"line":226,"column":1,"offset":44606},"end":{"line":226,"column":605,"offset":45210},"indent":[]}},{"type":"link","title":null,"url":"http://google.stanford.edu/","children":[{"type":"text","value":"http://google.stanford.edu","position":{"start":{"line":226,"column":606,"offset":45211},"end":{"line":226,"column":632,"offset":45237},"indent":[]}}],"position":{"start":{"line":226,"column":605,"offset":45210},"end":{"line":226,"column":662,"offset":45267},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":226,"column":662,"offset":45267},"end":{"line":226,"column":663,"offset":45268},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":44606},"end":{"line":226,"column":663,"offset":45268},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"5.1 Storage Requirements","position":{"start":{"line":228,"column":5,"offset":45276},"end":{"line":228,"column":29,"offset":45300},"indent":[]}}],"position":{"start":{"line":228,"column":1,"offset":45272},"end":{"line":228,"column":29,"offset":45300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Aside from search quality, Google is designed to scale cost effectively to the size of the Web as it grows. One aspect of this is to use storage efficiently. Table 1 has a breakdown of some statistics and storage requirements of Google. Due to compression the total size of the repository is about 53 GB, just over one third of the total data it stores. At current disk prices this makes the repository a relatively cheap source of useful data. More importantly, the total of all the data used by the search engine requires a comparable amount of storage, about 55 GB. Furthermore, most queries can be answered using just the short inverted index. With better encoding and compression of the Document Index, a high quality web search engine may fit onto a 7GB drive of a new PC.","position":{"start":{"line":230,"column":1,"offset":45304},"end":{"line":230,"column":779,"offset":46082},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":45304},"end":{"line":230,"column":779,"offset":46082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Storage Statistics","position":{"start":{"line":232,"column":1,"offset":46086},"end":{"line":232,"column":19,"offset":46104},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":46086},"end":{"line":232,"column":19,"offset":46104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Total Size of Fetched Pages","position":{"start":{"line":234,"column":1,"offset":46108},"end":{"line":234,"column":28,"offset":46135},"indent":[]}}],"position":{"start":{"line":234,"column":1,"offset":46108},"end":{"line":234,"column":28,"offset":46135},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"147.8 GB","position":{"start":{"line":236,"column":1,"offset":46139},"end":{"line":236,"column":9,"offset":46147},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":46139},"end":{"line":236,"column":9,"offset":46147},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compressed Repository","position":{"start":{"line":238,"column":1,"offset":46151},"end":{"line":238,"column":22,"offset":46172},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":46151},"end":{"line":238,"column":22,"offset":46172},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"53.5 GB","position":{"start":{"line":240,"column":1,"offset":46176},"end":{"line":240,"column":8,"offset":46183},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":46176},"end":{"line":240,"column":8,"offset":46183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Short Inverted Index","position":{"start":{"line":242,"column":1,"offset":46187},"end":{"line":242,"column":21,"offset":46207},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":46187},"end":{"line":242,"column":21,"offset":46207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"4.1 GB","position":{"start":{"line":244,"column":1,"offset":46211},"end":{"line":244,"column":7,"offset":46217},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":46211},"end":{"line":244,"column":7,"offset":46217},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Full Inverted Index","position":{"start":{"line":246,"column":1,"offset":46221},"end":{"line":246,"column":20,"offset":46240},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":46221},"end":{"line":246,"column":20,"offset":46240},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"37.2 GB","position":{"start":{"line":248,"column":1,"offset":46244},"end":{"line":248,"column":8,"offset":46251},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":46244},"end":{"line":248,"column":8,"offset":46251},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Lexicon","position":{"start":{"line":250,"column":1,"offset":46255},"end":{"line":250,"column":8,"offset":46262},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":46255},"end":{"line":250,"column":8,"offset":46262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"293 MB","position":{"start":{"line":252,"column":1,"offset":46266},"end":{"line":252,"column":7,"offset":46272},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":46266},"end":{"line":252,"column":7,"offset":46272},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Temporary Anchor Data\n(not in total)","position":{"start":{"line":254,"column":1,"offset":46276},"end":{"line":255,"column":15,"offset":46313},"indent":[1]}}],"position":{"start":{"line":254,"column":1,"offset":46276},"end":{"line":255,"column":15,"offset":46313},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"6.6 GB","position":{"start":{"line":257,"column":1,"offset":46317},"end":{"line":257,"column":7,"offset":46323},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":46317},"end":{"line":257,"column":7,"offset":46323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Document Index Incl.\nVariable Width Data","position":{"start":{"line":259,"column":1,"offset":46327},"end":{"line":260,"column":20,"offset":46368},"indent":[1]}}],"position":{"start":{"line":259,"column":1,"offset":46327},"end":{"line":260,"column":20,"offset":46368},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"9.7 GB","position":{"start":{"line":262,"column":1,"offset":46372},"end":{"line":262,"column":7,"offset":46378},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":46372},"end":{"line":262,"column":7,"offset":46378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Links Database","position":{"start":{"line":264,"column":1,"offset":46382},"end":{"line":264,"column":15,"offset":46396},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":46382},"end":{"line":264,"column":15,"offset":46396},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"3.9 GB","position":{"start":{"line":266,"column":1,"offset":46400},"end":{"line":266,"column":7,"offset":46406},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":46400},"end":{"line":266,"column":7,"offset":46406},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Total Without Repository","position":{"start":{"line":268,"column":1,"offset":46410},"end":{"line":268,"column":25,"offset":46434},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":46410},"end":{"line":268,"column":25,"offset":46434},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"55.2 GB","position":{"start":{"line":270,"column":1,"offset":46438},"end":{"line":270,"column":8,"offset":46445},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":46438},"end":{"line":270,"column":8,"offset":46445},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Total With Repository","position":{"start":{"line":272,"column":1,"offset":46449},"end":{"line":272,"column":22,"offset":46470},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":46449},"end":{"line":272,"column":22,"offset":46470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"108.7 GB","position":{"start":{"line":274,"column":1,"offset":46474},"end":{"line":274,"column":9,"offset":46482},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":46474},"end":{"line":274,"column":9,"offset":46482},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Web Page Statistics","position":{"start":{"line":276,"column":1,"offset":46486},"end":{"line":276,"column":20,"offset":46505},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":46486},"end":{"line":276,"column":20,"offset":46505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Number of Web Pages Fetched","position":{"start":{"line":278,"column":1,"offset":46509},"end":{"line":278,"column":28,"offset":46536},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":46509},"end":{"line":278,"column":28,"offset":46536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"24 million","position":{"start":{"line":280,"column":1,"offset":46540},"end":{"line":280,"column":11,"offset":46550},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":46540},"end":{"line":280,"column":11,"offset":46550},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Number of Urls Seen","position":{"start":{"line":282,"column":1,"offset":46554},"end":{"line":282,"column":20,"offset":46573},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":46554},"end":{"line":282,"column":20,"offset":46573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"76.5 million","position":{"start":{"line":284,"column":1,"offset":46577},"end":{"line":284,"column":13,"offset":46589},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":46577},"end":{"line":284,"column":13,"offset":46589},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Number of Email Addresses","position":{"start":{"line":286,"column":1,"offset":46593},"end":{"line":286,"column":26,"offset":46618},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":46593},"end":{"line":286,"column":26,"offset":46618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.7 million","position":{"start":{"line":288,"column":1,"offset":46622},"end":{"line":288,"column":12,"offset":46633},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":46622},"end":{"line":288,"column":12,"offset":46633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Number of 404's","position":{"start":{"line":290,"column":1,"offset":46637},"end":{"line":290,"column":16,"offset":46652},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":46637},"end":{"line":290,"column":16,"offset":46652},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.6 million","position":{"start":{"line":292,"column":1,"offset":46656},"end":{"line":292,"column":12,"offset":46667},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":46656},"end":{"line":292,"column":12,"offset":46667},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Table 1. Statistics","position":{"start":{"line":294,"column":1,"offset":46671},"end":{"line":294,"column":20,"offset":46690},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":46671},"end":{"line":294,"column":20,"offset":46690},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"5.2 System Performance","position":{"start":{"line":296,"column":5,"offset":46698},"end":{"line":296,"column":27,"offset":46720},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":46694},"end":{"line":296,"column":27,"offset":46720},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is important for a search engine to crawl and index efficiently. This way information can be kept up to date and major changes to the system can be tested relatively quickly. For Google, the major operations are Crawling, Indexing, and Sorting. It is difficult to measure how long crawling took overall because disks filled up, name servers crashed, or any number of other problems which stopped the system. In total it took roughly 9 days to download the 26 million pages (including errors). However, once the system was running smoothly, it ran much faster, downloading the last 11 million pages in just 63 hours, averaging just over 4 million pages per day or 48.5 pages per second. We ran the indexer and the crawler simultaneously. The indexer ran just faster than the crawlers. This is largely because we spent just enough time optimizing the indexer so that it would not be a bottleneck. These optimizations included bulk updates to the document index and placement of critical data structures on the local disk. The indexer runs at roughly 54 pages per second. The sorters can be run completely in parallel; using four machines, the whole process of sorting takes about 24 hours.","position":{"start":{"line":298,"column":1,"offset":46724},"end":{"line":298,"column":1191,"offset":47914},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":46724},"end":{"line":298,"column":1191,"offset":47914},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"5.3 Search Performance","position":{"start":{"line":300,"column":5,"offset":47922},"end":{"line":300,"column":27,"offset":47944},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":47918},"end":{"line":300,"column":27,"offset":47944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Improving the performance of search was not the major focus of our research up to this point. The current version of Google answers most queries in between 1 and 10 seconds. This time is mostly dominated by disk IO over NFS (since disks are spread over a number of machines). Furthermore, Google does not have any optimizations such as query caching, subindices on common terms, and other common optimizations. We intend to speed up Google considerably through distribution and hardware, software, and algorithmic improvements. Our target is to be able to handle several hundred queries per second. Table 2 has some sample query times from the current version of Google. They are repeated to show the speedups resulting from cached IO.","position":{"start":{"line":302,"column":1,"offset":47948},"end":{"line":302,"column":736,"offset":48683},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":47948},"end":{"line":302,"column":736,"offset":48683},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Initial Query","position":{"start":{"line":304,"column":3,"offset":48689},"end":{"line":304,"column":16,"offset":48702},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":48687},"end":{"line":304,"column":18,"offset":48704},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":48687},"end":{"line":304,"column":18,"offset":48704},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Same Query Repeated (IO mostly cached)","position":{"start":{"line":306,"column":3,"offset":48710},"end":{"line":306,"column":41,"offset":48748},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":48708},"end":{"line":306,"column":43,"offset":48750},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":48708},"end":{"line":306,"column":43,"offset":48750},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Query","position":{"start":{"line":308,"column":3,"offset":48756},"end":{"line":308,"column":8,"offset":48761},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":48754},"end":{"line":308,"column":10,"offset":48763},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":48754},"end":{"line":308,"column":10,"offset":48763},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CPU Time(s)","position":{"start":{"line":310,"column":3,"offset":48769},"end":{"line":310,"column":14,"offset":48780},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":48767},"end":{"line":310,"column":16,"offset":48782},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":48767},"end":{"line":310,"column":16,"offset":48782},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Total Time(s)","position":{"start":{"line":312,"column":3,"offset":48788},"end":{"line":312,"column":16,"offset":48801},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":48786},"end":{"line":312,"column":18,"offset":48803},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":48786},"end":{"line":312,"column":18,"offset":48803},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"CPU Time(s)","position":{"start":{"line":314,"column":3,"offset":48809},"end":{"line":314,"column":14,"offset":48820},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":48807},"end":{"line":314,"column":16,"offset":48822},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":48807},"end":{"line":314,"column":16,"offset":48822},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Total Time(s)","position":{"start":{"line":316,"column":3,"offset":48828},"end":{"line":316,"column":16,"offset":48841},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":48826},"end":{"line":316,"column":18,"offset":48843},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":48826},"end":{"line":316,"column":18,"offset":48843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"al gore","position":{"start":{"line":318,"column":1,"offset":48847},"end":{"line":318,"column":8,"offset":48854},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":48847},"end":{"line":318,"column":8,"offset":48854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.09","position":{"start":{"line":320,"column":1,"offset":48858},"end":{"line":320,"column":5,"offset":48862},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":48858},"end":{"line":320,"column":5,"offset":48862},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2.13","position":{"start":{"line":322,"column":1,"offset":48866},"end":{"line":322,"column":5,"offset":48870},"indent":[]}}],"position":{"start":{"line":322,"column":1,"offset":48866},"end":{"line":322,"column":5,"offset":48870},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.06","position":{"start":{"line":324,"column":1,"offset":48874},"end":{"line":324,"column":5,"offset":48878},"indent":[]}}],"position":{"start":{"line":324,"column":1,"offset":48874},"end":{"line":324,"column":5,"offset":48878},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.06","position":{"start":{"line":326,"column":1,"offset":48882},"end":{"line":326,"column":5,"offset":48886},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":48882},"end":{"line":326,"column":5,"offset":48886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"vice president","position":{"start":{"line":328,"column":1,"offset":48890},"end":{"line":328,"column":15,"offset":48904},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":48890},"end":{"line":328,"column":15,"offset":48904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.77","position":{"start":{"line":330,"column":1,"offset":48908},"end":{"line":330,"column":5,"offset":48912},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":48908},"end":{"line":330,"column":5,"offset":48912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"3.84","position":{"start":{"line":332,"column":1,"offset":48916},"end":{"line":332,"column":5,"offset":48920},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":48916},"end":{"line":332,"column":5,"offset":48920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.66","position":{"start":{"line":334,"column":1,"offset":48924},"end":{"line":334,"column":5,"offset":48928},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":48924},"end":{"line":334,"column":5,"offset":48928},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.80","position":{"start":{"line":336,"column":1,"offset":48932},"end":{"line":336,"column":5,"offset":48936},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":48932},"end":{"line":336,"column":5,"offset":48936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"hard disks","position":{"start":{"line":338,"column":1,"offset":48940},"end":{"line":338,"column":11,"offset":48950},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":48940},"end":{"line":338,"column":11,"offset":48950},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.25","position":{"start":{"line":340,"column":1,"offset":48954},"end":{"line":340,"column":5,"offset":48958},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":48954},"end":{"line":340,"column":5,"offset":48958},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"4.86","position":{"start":{"line":342,"column":1,"offset":48962},"end":{"line":342,"column":5,"offset":48966},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":48962},"end":{"line":342,"column":5,"offset":48966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.20","position":{"start":{"line":344,"column":1,"offset":48970},"end":{"line":344,"column":5,"offset":48974},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":48970},"end":{"line":344,"column":5,"offset":48974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0.24","position":{"start":{"line":346,"column":1,"offset":48978},"end":{"line":346,"column":5,"offset":48982},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":48978},"end":{"line":346,"column":5,"offset":48982},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"search engines","position":{"start":{"line":348,"column":1,"offset":48986},"end":{"line":348,"column":15,"offset":49000},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":48986},"end":{"line":348,"column":15,"offset":49000},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.31","position":{"start":{"line":350,"column":1,"offset":49004},"end":{"line":350,"column":5,"offset":49008},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":49004},"end":{"line":350,"column":5,"offset":49008},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"9.63","position":{"start":{"line":352,"column":1,"offset":49012},"end":{"line":352,"column":5,"offset":49016},"indent":[]}}],"position":{"start":{"line":352,"column":1,"offset":49012},"end":{"line":352,"column":5,"offset":49016},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.16","position":{"start":{"line":354,"column":1,"offset":49020},"end":{"line":354,"column":5,"offset":49024},"indent":[]}}],"position":{"start":{"line":354,"column":1,"offset":49020},"end":{"line":354,"column":5,"offset":49024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1.16","position":{"start":{"line":356,"column":1,"offset":49028},"end":{"line":356,"column":5,"offset":49032},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":49028},"end":{"line":356,"column":5,"offset":49032},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Table 2. Search Times","position":{"start":{"line":358,"column":1,"offset":49036},"end":{"line":358,"column":22,"offset":49057},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":49036},"end":{"line":358,"column":22,"offset":49057},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6 Conclusions","position":{"start":{"line":360,"column":4,"offset":49064},"end":{"line":360,"column":17,"offset":49077},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":49061},"end":{"line":360,"column":17,"offset":49077},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Google is designed to be a scalable search engine. The primary goal is to provide high quality search results over a rapidly growing World Wide Web. Google employs a number of techniques to improve search quality including page rank, anchor text, and proximity information. Furthermore, Google is a complete architecture for gathering web pages, indexing them, and performing search queries over them.","position":{"start":{"line":362,"column":1,"offset":49081},"end":{"line":362,"column":402,"offset":49482},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":49081},"end":{"line":362,"column":402,"offset":49482},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6.1 Future Work","position":{"start":{"line":364,"column":5,"offset":49490},"end":{"line":364,"column":20,"offset":49505},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":49486},"end":{"line":364,"column":20,"offset":49505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A large-scale web search engine is a complex system and much remains to be done. Our immediate goals are to improve search efficiency and to scale to approximately 100 million web pages. Some simple improvements to efficiency include query caching, smart disk allocation, and subindices. Another area which requires much research is updates. We must have smart algorithms to decide what old web pages should be recrawled and what new ones should be crawled. Work toward this goal has been done in ","position":{"start":{"line":366,"column":1,"offset":49509},"end":{"line":366,"column":498,"offset":50006},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":366,"column":498,"offset":50006},"end":{"line":366,"column":500,"offset":50008},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Cho 98","position":{"start":{"line":366,"column":501,"offset":50009},"end":{"line":366,"column":507,"offset":50015},"indent":[]}}],"position":{"start":{"line":366,"column":500,"offset":50008},"end":{"line":366,"column":562,"offset":50070},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":366,"column":562,"offset":50070},"end":{"line":366,"column":564,"offset":50072},"indent":[]}},{"type":"text","value":". One promising area of research is using proxy caches to build search databases, since they are demand driven. We are planning to add simple features supported by commercial search engines like boolean operators, negation, and stemming. However, other features are just starting to be explored such as relevance feedback and clustering (Google currently supports a simple hostname based clustering). We also plan to support user context (like the user's location), and result summarization. We are also working to extend the use of link structure and link text. Simple experiments indicate PageRank can be personalized by increasing the weight of a user's home page or bookmarks. As for link text, we are experimenting with using text surrounding links in addition to the link text itself. A Web search engine is a very rich environment for research ideas. We have far too many to list here so we do not expect this Future Work section to become much shorter in the near future.","position":{"start":{"line":366,"column":564,"offset":50072},"end":{"line":366,"column":1543,"offset":51051},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":49509},"end":{"line":366,"column":1543,"offset":51051},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6.2 High Quality Search","position":{"start":{"line":368,"column":5,"offset":51059},"end":{"line":368,"column":28,"offset":51082},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":51055},"end":{"line":368,"column":28,"offset":51082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The biggest problem facing users of web search engines today is the quality of the results they get back. While the results are often amusing and expand users' horizons, they are often frustrating and consume precious time. For example, the top result for a search for \"Bill Clinton\" on one of the most popular commercial search engines was the ","position":{"start":{"line":370,"column":1,"offset":51086},"end":{"line":370,"column":346,"offset":51431},"indent":[]}},{"type":"link","title":null,"url":"http://www.io.com/~cjburke/clinton/970414.html","children":[{"type":"text","value":"Bill Clinton Joke of the Day: April 14, 1997","position":{"start":{"line":370,"column":347,"offset":51432},"end":{"line":370,"column":391,"offset":51476},"indent":[]}}],"position":{"start":{"line":370,"column":346,"offset":51431},"end":{"line":370,"column":440,"offset":51525},"indent":[]}},{"type":"text","value":". Google is designed to provide higher quality search so as the Web continues to grow rapidly, information can be found easily. In order to accomplish this Google makes heavy use of hypertextual information consisting of link structure and link (anchor) text. Google also uses proximity and font information. While evaluation of a search engine is difficult, we have subjectively found that Google returns higher quality search results than current commercial search engines. The analysis of link structure via PageRank allows Google to evaluate the quality of web pages. The use of link text as a description of what the link points to helps the search engine return relevant (and to some degree high quality) results. Finally, the use of proximity information helps increase relevance a great deal for many queries.","position":{"start":{"line":370,"column":440,"offset":51525},"end":{"line":370,"column":1257,"offset":52342},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":51086},"end":{"line":370,"column":1257,"offset":52342},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6.3 Scalable Architecture","position":{"start":{"line":372,"column":5,"offset":52350},"end":{"line":372,"column":30,"offset":52375},"indent":[]}}],"position":{"start":{"line":372,"column":1,"offset":52346},"end":{"line":372,"column":30,"offset":52375},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Aside from the quality of search, Google is designed to scale. It must be efficient in both space and time, and constant factors are very important when dealing with the entire Web. In implementing Google, we have seen bottlenecks in CPU, memory access, memory capacity, disk seeks, disk throughput, disk capacity, and network IO. Google has evolved to overcome a number of these bottlenecks during various operations. Google's major data structures make efficient use of available storage space. Furthermore, the crawling, indexing, and sorting operations are efficient enough to be able to build an index of a substantial portion of the web -- 24 million pages, in less than one week. We expect to be able to build an index of 100 million pages in less than a month.","position":{"start":{"line":374,"column":1,"offset":52379},"end":{"line":374,"column":769,"offset":53147},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":52379},"end":{"line":374,"column":769,"offset":53147},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"6.4 A Research Tool","position":{"start":{"line":376,"column":5,"offset":53155},"end":{"line":376,"column":24,"offset":53174},"indent":[]}}],"position":{"start":{"line":376,"column":1,"offset":53151},"end":{"line":376,"column":24,"offset":53174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to being a high quality search engine, Google is a research tool. The data Google has collected has already resulted in many other papers submitted to conferences and many more on the way. Recent research such as ","position":{"start":{"line":378,"column":1,"offset":53178},"end":{"line":378,"column":226,"offset":53403},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":378,"column":226,"offset":53403},"end":{"line":378,"column":228,"offset":53405},"indent":[]}},{"type":"link","title":null,"url":"http://infolab.stanford.edu/~backrub/google.html#ref","children":[{"type":"text","value":"Abiteboul 97","position":{"start":{"line":378,"column":229,"offset":53406},"end":{"line":378,"column":241,"offset":53418},"indent":[]}}],"position":{"start":{"line":378,"column":228,"offset":53405},"end":{"line":378,"column":296,"offset":53473},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":378,"column":296,"offset":53473},"end":{"line":378,"column":298,"offset":53475},"indent":[]}},{"type":"text","value":" has shown a number of limitations to queries about the Web that may be answered without having the Web available locally. This means that Google (or a similar system) is not only a valuable research tool but a necessary one for a wide range of applications. We hope Google will be a resource for searchers and researchers all around the world and will spark the next generation of search engine technology.","position":{"start":{"line":378,"column":298,"offset":53475},"end":{"line":378,"column":705,"offset":53882},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":53178},"end":{"line":378,"column":705,"offset":53882},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":379,"column":1,"offset":53884}}}}