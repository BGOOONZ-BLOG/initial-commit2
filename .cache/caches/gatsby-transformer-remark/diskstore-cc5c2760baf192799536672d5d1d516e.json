{"expireTime":9007200903816782000,"key":"transformer-remark-markdown-ast-26745db17a5b3696cf69cf8ac1d82241--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Object.create()","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":18,"offset":19},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":18,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":5,"offset":27},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":4,"column":5,"offset":27},"end":{"line":4,"column":22,"offset":44},"indent":[]}},{"type":"text","value":" method creates a new object, using an existing object as the prototype of the newly created object.","position":{"start":{"line":4,"column":22,"offset":44},"end":{"line":4,"column":122,"offset":144},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":122,"offset":144},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":6,"column":4,"offset":151},"end":{"line":6,"column":10,"offset":157},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":148},"end":{"line":6,"column":10,"offset":157},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Object.create(proto)\nObject.create(proto, propertiesObject)","position":{"start":{"line":8,"column":1,"offset":161},"end":{"line":9,"column":43,"offset":229},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":11,"column":5,"offset":237},"end":{"line":11,"column":15,"offset":247},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":233},"end":{"line":11,"column":15,"offset":247},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"proto","position":{"start":{"line":13,"column":1,"offset":251},"end":{"line":13,"column":8,"offset":258},"indent":[]}},{"type":"text","value":"\nThe object which should be the prototype of the newly-created object.","position":{"start":{"line":13,"column":8,"offset":258},"end":{"line":14,"column":70,"offset":329},"indent":[1]}}],"position":{"start":{"line":13,"column":1,"offset":251},"end":{"line":14,"column":70,"offset":329},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"propertiesObject","position":{"start":{"line":16,"column":1,"offset":333},"end":{"line":16,"column":19,"offset":351},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":16,"column":19,"offset":351},"end":{"line":16,"column":20,"offset":352},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":16,"column":20,"offset":352},"end":{"line":16,"column":56,"offset":388},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":16,"column":56,"offset":388},"end":{"line":16,"column":64,"offset":396},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":16,"column":64,"offset":396},"end":{"line":16,"column":71,"offset":403},"indent":[]}},{"type":"text","value":"\nIf specified and not ","position":{"start":{"line":16,"column":71,"offset":403},"end":{"line":17,"column":22,"offset":426},"indent":[1]}},{"type":"link","title":null,"url":"../undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":17,"column":23,"offset":427},"end":{"line":17,"column":34,"offset":438},"indent":[]}}],"position":{"start":{"line":17,"column":22,"offset":426},"end":{"line":17,"column":49,"offset":453},"indent":[]}},{"type":"text","value":", an object whose enumerable own properties (that is, those properties defined upon itself and ","position":{"start":{"line":17,"column":49,"offset":453},"end":{"line":17,"column":144,"offset":548},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":17,"column":145,"offset":549},"end":{"line":17,"column":148,"offset":552},"indent":[]}}],"position":{"start":{"line":17,"column":144,"offset":548},"end":{"line":17,"column":149,"offset":553},"indent":[]}},{"type":"text","value":" enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of ","position":{"start":{"line":17,"column":149,"offset":553},"end":{"line":17,"column":362,"offset":766},"indent":[]}},{"type":"link","title":null,"url":"defineproperties","children":[{"type":"inlineCode","value":"Object.defineProperties()","position":{"start":{"line":17,"column":363,"offset":767},"end":{"line":17,"column":390,"offset":794},"indent":[]}}],"position":{"start":{"line":17,"column":362,"offset":766},"end":{"line":17,"column":409,"offset":813},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":17,"column":409,"offset":813},"end":{"line":17,"column":410,"offset":814},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":333},"end":{"line":17,"column":410,"offset":814},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":19,"column":5,"offset":822},"end":{"line":19,"column":17,"offset":834},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":818},"end":{"line":19,"column":17,"offset":834},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new object with the specified prototype object and properties.","position":{"start":{"line":21,"column":1,"offset":838},"end":{"line":21,"column":65,"offset":902},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":838},"end":{"line":21,"column":65,"offset":902},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Exceptions","position":{"start":{"line":23,"column":5,"offset":910},"end":{"line":23,"column":15,"offset":920},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":906},"end":{"line":23,"column":15,"offset":920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":25,"column":1,"offset":924},"end":{"line":25,"column":5,"offset":928},"indent":[]}},{"type":"inlineCode","value":"proto","position":{"start":{"line":25,"column":5,"offset":928},"end":{"line":25,"column":12,"offset":935},"indent":[]}},{"type":"text","value":" parameter has to be either","position":{"start":{"line":25,"column":12,"offset":935},"end":{"line":25,"column":39,"offset":962},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":924},"end":{"line":25,"column":39,"offset":962},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"../null","children":[{"type":"inlineCode","value":"null","position":{"start":{"line":27,"column":4,"offset":969},"end":{"line":27,"column":10,"offset":975},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":968},"end":{"line":27,"column":20,"offset":985},"indent":[]}},{"type":"text","value":" or","position":{"start":{"line":27,"column":20,"offset":985},"end":{"line":27,"column":23,"offset":988},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":968},"end":{"line":27,"column":23,"offset":988},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":966},"end":{"line":27,"column":23,"offset":988},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"an ","position":{"start":{"line":28,"column":3,"offset":992},"end":{"line":28,"column":6,"offset":995},"indent":[]}},{"type":"link","title":null,"url":"../object","children":[{"type":"inlineCode","value":"Object","position":{"start":{"line":28,"column":7,"offset":996},"end":{"line":28,"column":15,"offset":1004},"indent":[]}}],"position":{"start":{"line":28,"column":6,"offset":995},"end":{"line":28,"column":27,"offset":1016},"indent":[]}},{"type":"text","value":" excluding ","position":{"start":{"line":28,"column":27,"offset":1016},"end":{"line":28,"column":38,"offset":1027},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Glossary/Primitive#primitive_wrapper_objects_in_javascript","children":[{"type":"text","value":"primitive wrapper objects","position":{"start":{"line":28,"column":39,"offset":1028},"end":{"line":28,"column":64,"offset":1053},"indent":[]}}],"position":{"start":{"line":28,"column":38,"offset":1027},"end":{"line":28,"column":166,"offset":1155},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":28,"column":166,"offset":1155},"end":{"line":28,"column":167,"offset":1156},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":992},"end":{"line":28,"column":167,"offset":1156},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":990},"end":{"line":28,"column":167,"offset":1156},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":966},"end":{"line":28,"column":167,"offset":1156},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If ","position":{"start":{"line":30,"column":1,"offset":1160},"end":{"line":30,"column":4,"offset":1163},"indent":[]}},{"type":"inlineCode","value":"proto","position":{"start":{"line":30,"column":4,"offset":1163},"end":{"line":30,"column":11,"offset":1170},"indent":[]}},{"type":"text","value":" is neither of these a ","position":{"start":{"line":30,"column":11,"offset":1170},"end":{"line":30,"column":34,"offset":1193},"indent":[]}},{"type":"link","title":null,"url":"../typeerror","children":[{"type":"inlineCode","value":"TypeError","position":{"start":{"line":30,"column":35,"offset":1194},"end":{"line":30,"column":46,"offset":1205},"indent":[]}}],"position":{"start":{"line":30,"column":34,"offset":1193},"end":{"line":30,"column":61,"offset":1220},"indent":[]}},{"type":"text","value":" is thrown.","position":{"start":{"line":30,"column":61,"offset":1220},"end":{"line":30,"column":72,"offset":1231},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1160},"end":{"line":30,"column":72,"offset":1231},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Custom and Null objects","position":{"start":{"line":32,"column":4,"offset":1238},"end":{"line":32,"column":27,"offset":1261},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1235},"end":{"line":32,"column":27,"offset":1261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A new object created from a completely custom object (especially one created from the ","position":{"start":{"line":34,"column":1,"offset":1265},"end":{"line":34,"column":87,"offset":1351},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":34,"column":87,"offset":1351},"end":{"line":34,"column":93,"offset":1357},"indent":[]}},{"type":"text","value":" object, which is basically a custom object with NO members) can behave in unexpected ways. This is especially true when debugging, since common object-property converting/detecting utility functions may generate errors, or lose information (especially if using silent error-traps that ignore errors). For example, here are two objects:","position":{"start":{"line":34,"column":93,"offset":1357},"end":{"line":34,"column":429,"offset":1693},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1265},"end":{"line":34,"column":429,"offset":1693},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"oco = Object.create( {} );   // create a normal object\nocn = Object.create( null ); // create a \"null\" object\n\n> console.log(oco) // {} -- Seems normal\n> console.log(ocn) // {} -- Seems normal here too, so far\n\noco.p = 1; // create a simple property on normal obj\nocn.p = 0; // create a simple property on \"null\" obj\n\n> console.log(oco) // {p: 1} -- Still seems normal\n> console.log(ocn) // {p: 0} -- Still seems normal here too. BUT WAIT...","position":{"start":{"line":36,"column":1,"offset":1697},"end":{"line":46,"column":77,"offset":2180},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As shown above, all seems normal so far. However, when attempting to actually use these objects, their differences quickly become apparent:","position":{"start":{"line":48,"column":1,"offset":2184},"end":{"line":48,"column":140,"offset":2323},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2184},"end":{"line":48,"column":140,"offset":2323},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> \"oco is: \" + oco // shows \"oco is: [object Object]\"\n\n> \"ocn is: \" + ocn // throws error: Cannot convert object to primitive value","position":{"start":{"line":50,"column":1,"offset":2327},"end":{"line":52,"column":81,"offset":2468},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Testing just a few of the many most basic built-in functions shows the magnitude of the problem more clearly:","position":{"start":{"line":54,"column":1,"offset":2472},"end":{"line":54,"column":110,"offset":2581},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":2472},"end":{"line":54,"column":110,"offset":2581},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> alert(oco) // shows [object Object]\n> alert(ocn) // throws error: Cannot convert object to primitive value\n\n> oco.toString() // shows [object Object]\n> ocn.toString() // throws error: ocn.toString is not a function\n\n> oco.valueOf() // shows {}\n> ocn.valueOf() // throws error: ocn.valueOf is not a function\n\n> oco.hasOwnProperty(\"p\") // shows \"true\"\n> ocn.hasOwnProperty(\"p\") // throws error: ocn.hasOwnProperty is not a function\n\n> oco.constructor // shows \"Object() { [native code] }\"\n> ocn.constructor // shows \"undefined\"","position":{"start":{"line":56,"column":1,"offset":2585},"end":{"line":69,"column":43,"offset":3165},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As said, these differences can make debugging even simple-seeming problems quickly go astray. For example:","position":{"start":{"line":71,"column":1,"offset":3169},"end":{"line":71,"column":107,"offset":3275},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3169},"end":{"line":71,"column":107,"offset":3275},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"A simple common debugging function:","position":{"start":{"line":73,"column":2,"offset":3280},"end":{"line":73,"column":37,"offset":3315},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3279},"end":{"line":73,"column":38,"offset":3316},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3279},"end":{"line":73,"column":38,"offset":3316},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// display top-level property name:value pairs of given object\nfunction ShowProperties(obj){\n  for(var prop in obj){\n    console.log(prop + \": \" + obj[prop] + \"\\n\" );\n  }\n}","position":{"start":{"line":75,"column":1,"offset":3320},"end":{"line":80,"column":6,"offset":3521},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Not such simple results: (especially if silent error-trapping had hidden the error messages)","position":{"start":{"line":82,"column":2,"offset":3526},"end":{"line":82,"column":94,"offset":3618},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3525},"end":{"line":82,"column":95,"offset":3619},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":3525},"end":{"line":82,"column":95,"offset":3619},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ob={}; ob.po=oco; ob.pn=ocn; // create a compound object using the test objects from above as property values\n\n> ShowProperties( ob ) // display top-level properties\n- po: [object Object]\n- Error: Cannot convert object to primitive value\n\nNote that only first property gets shown.","position":{"start":{"line":84,"column":1,"offset":3623},"end":{"line":90,"column":46,"offset":3929},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"(But if the same object is created in a different order -- at least in some implementations...)","position":{"start":{"line":92,"column":2,"offset":3934},"end":{"line":92,"column":97,"offset":4029},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3933},"end":{"line":92,"column":98,"offset":4030},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3933},"end":{"line":92,"column":98,"offset":4030},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ob={}; ob.pn=ocn; ob.po=oco; // create same compound object again, but create same properties in different order\n\n> ShowProperties( ob ) // display top-level properties\n- Error: Cannot convert object to primitive value\n\nNote that neither property gets shown.","position":{"start":{"line":94,"column":1,"offset":4034},"end":{"line":99,"column":43,"offset":4313},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that such a different order may arise statically via disparate fixed codings such as here, but also dynamically via whatever the order any such property-adding code-branches actually get executed at runtime as depends on inputs and/or random-variables. Then again, the actual iteration order is not guaranteed no matter what the order members are added.","position":{"start":{"line":101,"column":1,"offset":4317},"end":{"line":101,"column":359,"offset":4675},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4317},"end":{"line":101,"column":359,"offset":4675},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Be aware of, also, that using Object.entries() on an object created via Object.create() will result in an empty array being returned.","position":{"start":{"line":103,"column":1,"offset":4679},"end":{"line":103,"column":134,"offset":4812},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4679},"end":{"line":103,"column":134,"offset":4812},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var obj = Object.create({ a: 1, b: 2 });\n\n> console.log(Object.entries(obj)); // shows \"[]\"","position":{"start":{"line":105,"column":1,"offset":4816},"end":{"line":107,"column":54,"offset":4917},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Some NON-solutions","position":{"start":{"line":109,"column":6,"offset":4926},"end":{"line":109,"column":24,"offset":4944},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4921},"end":{"line":109,"column":24,"offset":4944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A good solution for the missing object-methods is not immediately apparent.","position":{"start":{"line":111,"column":1,"offset":4948},"end":{"line":111,"column":76,"offset":5023},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4948},"end":{"line":111,"column":76,"offset":5023},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method directly from the standard-object does NOT work:","position":{"start":{"line":113,"column":1,"offset":5027},"end":{"line":113,"column":82,"offset":5108},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":5027},"end":{"line":113,"column":82,"offset":5108},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.toString = Object.toString; // since new object lacks method then try assigning it directly from standard-object\n\n> ocn.toString // shows \"toString() { [native code] }\" -- missing method seems to be there now\n> ocn.toString == Object.toString // shows \"true\" -- method seems to be same as the standard object-method\n\n> ocn.toString() // error: Function.prototype.toString requires that 'this' be a Function","position":{"start":{"line":115,"column":1,"offset":5112},"end":{"line":122,"column":94,"offset":5620},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method directly to new object's \"prototype\" does not work either, since the new object does not have a real prototype (which is really the cause of ALL these problems) and one cannot be ","position":{"start":{"line":124,"column":1,"offset":5624},"end":{"line":124,"column":213,"offset":5836},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"directly","position":{"start":{"line":124,"column":215,"offset":5838},"end":{"line":124,"column":223,"offset":5846},"indent":[]}}],"position":{"start":{"line":124,"column":213,"offset":5836},"end":{"line":124,"column":225,"offset":5848},"indent":[]}},{"type":"text","value":" added:","position":{"start":{"line":124,"column":225,"offset":5848},"end":{"line":124,"column":232,"offset":5855},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":5624},"end":{"line":124,"column":232,"offset":5855},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.prototype.toString = Object.toString; // Error: Cannot set property 'toString' of undefined\n\nocn.prototype = {};                       // try to create a prototype\nocn.prototype.toString = Object.toString; // since new object lacks method then try assigning it from standard-object\n\n> ocn.toString() // error: ocn.toString is not a function","position":{"start":{"line":126,"column":1,"offset":5859},"end":{"line":133,"column":62,"offset":6301},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Adding the missing object-method by using the standard-object as new object's prototype does not work either:","position":{"start":{"line":135,"column":1,"offset":6305},"end":{"line":135,"column":110,"offset":6414},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":6305},"end":{"line":135,"column":110,"offset":6414},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null );        // create \"null\" object (same as before)\nObject.setPrototypeOf(ocn, Object); // set new object's prototype to the standard-object\n\n> ocn.toString() // error: Function.prototype.toString requires that 'this' be a Function","position":{"start":{"line":137,"column":1,"offset":6418},"end":{"line":140,"column":94,"offset":6689},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Some OK solutions","position":{"start":{"line":142,"column":6,"offset":6698},"end":{"line":142,"column":23,"offset":6715},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":6693},"end":{"line":142,"column":23,"offset":6715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, adding the missing object-method directly from the ","position":{"start":{"line":144,"column":1,"offset":6719},"end":{"line":144,"column":59,"offset":6777},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"standard-object","position":{"start":{"line":144,"column":61,"offset":6779},"end":{"line":144,"column":76,"offset":6794},"indent":[]}}],"position":{"start":{"line":144,"column":59,"offset":6777},"end":{"line":144,"column":78,"offset":6796},"indent":[]}},{"type":"text","value":" does NOT work. However, adding the ","position":{"start":{"line":144,"column":78,"offset":6796},"end":{"line":144,"column":114,"offset":6832},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"generic","position":{"start":{"line":144,"column":116,"offset":6834},"end":{"line":144,"column":123,"offset":6841},"indent":[]}}],"position":{"start":{"line":144,"column":114,"offset":6832},"end":{"line":144,"column":125,"offset":6843},"indent":[]}},{"type":"text","value":" method directly, DOES:","position":{"start":{"line":144,"column":125,"offset":6843},"end":{"line":144,"column":148,"offset":6866},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":6719},"end":{"line":144,"column":148,"offset":6866},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null ); // create \"null\" object (same as before)\n\nocn.toString = toString; // since new object lacks method then assign it directly from generic version\n\n> ocn.toString() // shows \"[object Object]\"\n> \"ocn is: \" + ocn // shows \"ocn is: [object Object]\"\n\nob={}; ob.pn=ocn; ob.po=oco; // create a compound object (same as before)\n\n> ShowProperties(ob) // display top-level properties\n- po: [object Object]\n- pn: [object Object]","position":{"start":{"line":146,"column":1,"offset":6870},"end":{"line":157,"column":26,"offset":7358},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"However, setting the generic ","position":{"start":{"line":159,"column":1,"offset":7362},"end":{"line":159,"column":30,"offset":7391},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"prototype","position":{"start":{"line":159,"column":32,"offset":7393},"end":{"line":159,"column":41,"offset":7402},"indent":[]}}],"position":{"start":{"line":159,"column":30,"offset":7391},"end":{"line":159,"column":43,"offset":7404},"indent":[]}},{"type":"text","value":" as the new object's prototype works even better:","position":{"start":{"line":159,"column":43,"offset":7404},"end":{"line":159,"column":92,"offset":7453},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":7362},"end":{"line":159,"column":92,"offset":7453},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ocn = Object.create( null );                  // create \"null\" object (same as before)\nObject.setPrototypeOf(ocn, Object.prototype); // set new object's prototype to the \"generic\" object (NOT standard-object)","position":{"start":{"line":161,"column":1,"offset":7457},"end":{"line":162,"column":126,"offset":7674},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"(In addition to all the string-related functions shown above, this also adds:)","position":{"start":{"line":164,"column":2,"offset":7679},"end":{"line":164,"column":80,"offset":7757},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":7678},"end":{"line":164,"column":81,"offset":7758},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":7678},"end":{"line":164,"column":81,"offset":7758},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"> ocn.valueOf() // shows {}\n> ocn.hasOwnProperty(\"x\") // shows \"false\"\n> ocn.constructor // shows \"Object() { [native code] }\"\n\n// ...and all the rest of the properties and methods of Object.prototype.","position":{"start":{"line":166,"column":1,"offset":7762},"end":{"line":170,"column":78,"offset":7983},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As shown, objects modified this way now look very much like ordinary objects.","position":{"start":{"line":172,"column":1,"offset":7987},"end":{"line":172,"column":78,"offset":8064},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":7987},"end":{"line":172,"column":78,"offset":8064},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":174,"column":4,"offset":8071},"end":{"line":174,"column":12,"offset":8079},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":8068},"end":{"line":174,"column":12,"offset":8079},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This polyfill covers the main use case, which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.","position":{"start":{"line":176,"column":1,"offset":8083},"end":{"line":176,"column":162,"offset":8244},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":8083},"end":{"line":176,"column":162,"offset":8244},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that while the setting of ","position":{"start":{"line":178,"column":1,"offset":8248},"end":{"line":178,"column":32,"offset":8279},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":178,"column":32,"offset":8279},"end":{"line":178,"column":38,"offset":8285},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":178,"column":38,"offset":8285},"end":{"line":178,"column":42,"offset":8289},"indent":[]}},{"type":"inlineCode","value":"[[Prototype]]","position":{"start":{"line":178,"column":42,"offset":8289},"end":{"line":178,"column":57,"offset":8304},"indent":[]}},{"type":"text","value":" is supported in the real ES5 ","position":{"start":{"line":178,"column":57,"offset":8304},"end":{"line":178,"column":87,"offset":8334},"indent":[]}},{"type":"inlineCode","value":"Object.create","position":{"start":{"line":178,"column":87,"offset":8334},"end":{"line":178,"column":102,"offset":8349},"indent":[]}},{"type":"text","value":", this polyfill cannot support it due to a limitation inherent in versions of ECMAScript lower than 5.","position":{"start":{"line":178,"column":102,"offset":8349},"end":{"line":178,"column":204,"offset":8451},"indent":[]}}],"position":{"start":{"line":178,"column":1,"offset":8248},"end":{"line":178,"column":204,"offset":8451},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" if (typeof Object.create !== \"function\") {\n    Object.create = function (proto, propertiesObject) {\n        if (typeof proto !== 'object' && typeof proto !== 'function') {\n            throw new TypeError('Object prototype may only be an Object: ' + proto);\n        } else if (proto === null) {\n            throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\");\n        }\n\n        if (typeof propertiesObject != 'undefined') {\n            throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n        }\n\n        function F() {}\n        F.prototype = proto;\n\n        return new F();\n    };\n}","position":{"start":{"line":180,"column":1,"offset":8455},"end":{"line":197,"column":6,"offset":9256},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":199,"column":4,"offset":9263},"end":{"line":199,"column":12,"offset":9271},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":9260},"end":{"line":199,"column":12,"offset":9271},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Classical inheritance with ","position":{"start":{"line":201,"column":5,"offset":9279},"end":{"line":201,"column":32,"offset":9306},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":201,"column":32,"offset":9306},"end":{"line":201,"column":49,"offset":9323},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":9275},"end":{"line":201,"column":49,"offset":9323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below is an example of how to use ","position":{"start":{"line":203,"column":1,"offset":9327},"end":{"line":203,"column":35,"offset":9361},"indent":[]}},{"type":"inlineCode","value":"Object.create()","position":{"start":{"line":203,"column":35,"offset":9361},"end":{"line":203,"column":52,"offset":9378},"indent":[]}},{"type":"text","value":" to achieve classical inheritance. This is for a single inheritance, which is all that JavaScript supports.","position":{"start":{"line":203,"column":52,"offset":9378},"end":{"line":203,"column":159,"offset":9485},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":9327},"end":{"line":203,"column":159,"offset":9485},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Shape - superclass\nfunction Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\n// superclass method\nShape.prototype.move = function(x, y) {\n  this.x += x;\n  this.y += y;\n  console.info('Shape moved.');\n};\n\n// Rectangle - subclass\nfunction Rectangle() {\n  Shape.call(this); // call super constructor.\n}\n\n// subclass extends superclass\nRectangle.prototype = Object.create(Shape.prototype);\n\n//If you don't set Rectangle.prototype.constructor to Rectangle,\n//it will take the prototype.constructor of Shape (parent).\n//To avoid that, we set the prototype.constructor to Rectangle (child).\nRectangle.prototype.constructor = Rectangle;\n\nvar rect = new Rectangle();\n\nconsole.log('Is rect an instance of Rectangle?', rect instanceof Rectangle); // true\nconsole.log('Is rect an instance of Shape?', rect instanceof Shape); // true\nrect.move(1, 1); // Outputs, 'Shape moved.'","position":{"start":{"line":205,"column":1,"offset":9489},"end":{"line":235,"column":48,"offset":10478},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you wish to inherit from multiple objects, then mixins are a possibility.","position":{"start":{"line":237,"column":1,"offset":10482},"end":{"line":237,"column":77,"offset":10558},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":10482},"end":{"line":237,"column":77,"offset":10558},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function MyClass() {\n  SuperClass.call(this);\n  OtherSuperClass.call(this);\n}\n\n// inherit one class\nMyClass.prototype = Object.create(SuperClass.prototype);\n// mixin another\nObject.assign(MyClass.prototype, OtherSuperClass.prototype);\n// re-assign constructor\nMyClass.prototype.constructor = MyClass;\n\nMyClass.prototype.myMethod = function() {\n  // do something\n};","position":{"start":{"line":239,"column":1,"offset":10562},"end":{"line":253,"column":7,"offset":10992},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"assign","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":255,"column":2,"offset":10997},"end":{"line":255,"column":19,"offset":11014},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":10996},"end":{"line":255,"column":28,"offset":11023},"indent":[]}},{"type":"text","value":" copies properties from the OtherSuperClass prototype to the MyClass prototype, making them available to all instances of MyClass. ","position":{"start":{"line":255,"column":28,"offset":11023},"end":{"line":255,"column":159,"offset":11154},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":255,"column":159,"offset":11154},"end":{"line":255,"column":176,"offset":11171},"indent":[]}},{"type":"text","value":" was introduced with ES2015 and ","position":{"start":{"line":255,"column":176,"offset":11171},"end":{"line":255,"column":208,"offset":11203},"indent":[]}},{"type":"link","title":null,"url":"assign#polyfill","children":[{"type":"text","value":"can be polyfilled","position":{"start":{"line":255,"column":209,"offset":11204},"end":{"line":255,"column":226,"offset":11221},"indent":[]}}],"position":{"start":{"line":255,"column":208,"offset":11203},"end":{"line":255,"column":244,"offset":11239},"indent":[]}},{"type":"text","value":". If support for older browsers is necessary, ","position":{"start":{"line":255,"column":244,"offset":11239},"end":{"line":255,"column":290,"offset":11285},"indent":[]}},{"type":"inlineCode","value":"jQuery.extend()","position":{"start":{"line":255,"column":290,"offset":11285},"end":{"line":255,"column":307,"offset":11302},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":255,"column":307,"offset":11302},"end":{"line":255,"column":311,"offset":11306},"indent":[]}},{"type":"inlineCode","value":"_.assign()","position":{"start":{"line":255,"column":311,"offset":11306},"end":{"line":255,"column":323,"offset":11318},"indent":[]}},{"type":"text","value":" can be used.","position":{"start":{"line":255,"column":323,"offset":11318},"end":{"line":255,"column":336,"offset":11331},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":10996},"end":{"line":255,"column":336,"offset":11331},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using propertiesObject argument with Object.create()","position":{"start":{"line":257,"column":5,"offset":11339},"end":{"line":257,"column":57,"offset":11391},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":11335},"end":{"line":257,"column":57,"offset":11391},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o;\n\n// create an object with null as prototype\no = Object.create(null);\n\no = {};\n// is equivalent to:\no = Object.create(Object.prototype);\n\n// Example where we create an object with a couple of\n// sample properties. (Note that the second parameter\n// maps keys to *property descriptors*.)\no = Object.create(Object.prototype, {\n  // foo is a regular 'value property'\n  foo: {\n    writable: true,\n    configurable: true,\n    value: 'hello'\n  },\n  // bar is a getter-and-setter (accessor) property\n  bar: {\n    configurable: false,\n    get: function() { return 10; },\n    set: function(value) {\n      console.log('Setting `o.bar` to', value);\n    }\n/* with ES2015 Accessors our code can look like this\n    get() { return 10; },\n    set(value) {\n      console.log('Setting `o.bar` to', value);\n    } */\n  }\n});\n\nfunction Constructor() {}\no = new Constructor();\n// is equivalent to:\no = Object.create(Constructor.prototype);\n// Of course, if there is actual initialization code\n// in the Constructor function,\n// the Object.create() cannot reflect it\n\n// Create a new object whose prototype is a new, empty\n// object and add a single property 'p', with value 42.\no = Object.create({}, { p: { value: 42 } });\n\n// by default properties ARE NOT writable,\n// enumerable or configurable:\no.p = 24;\no.p;\n// 42\n\no.q = 12;\nfor (var prop in o) {\n  console.log(prop);\n}\n// 'q'\n\ndelete o.p;\n// false\n\n// to specify an ES3 property\no2 = Object.create({}, {\n  p: {\n    value: 42,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  }\n});\n/* is not equivalent to:\nThis will create an object with prototype : {p: 42 }\no2 = Object.create({p: 42}) */","position":{"start":{"line":259,"column":1,"offset":11395},"end":{"line":331,"column":35,"offset":13370},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":332,"column":1,"offset":13372}}}}