{"expireTime":9007200904306548000,"key":"transformer-remark-markdown-ast-943eac51904f3d07d770c16029efdf92--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Lorem ipsum","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":15,"offset":16},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":15,"offset":16},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python Cheat Sheet","position":{"start":{"line":5,"column":3,"offset":20},"end":{"line":5,"column":21,"offset":38},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":18},"end":{"line":5,"column":21,"offset":38},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Python Basics","position":{"start":{"line":7,"column":4,"offset":43},"end":{"line":7,"column":17,"offset":56},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":40},"end":{"line":7,"column":17,"offset":56},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Math Operators","position":{"start":{"line":9,"column":5,"offset":62},"end":{"line":9,"column":19,"offset":76},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":58},"end":{"line":9,"column":19,"offset":76},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From ","position":{"start":{"line":11,"column":1,"offset":78},"end":{"line":11,"column":6,"offset":83},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Highest","position":{"start":{"line":11,"column":8,"offset":85},"end":{"line":11,"column":15,"offset":92},"indent":[]}}],"position":{"start":{"line":11,"column":6,"offset":83},"end":{"line":11,"column":17,"offset":94},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":11,"column":17,"offset":94},"end":{"line":11,"column":21,"offset":98},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Lowest","position":{"start":{"line":11,"column":23,"offset":100},"end":{"line":11,"column":29,"offset":106},"indent":[]}}],"position":{"start":{"line":11,"column":21,"offset":98},"end":{"line":11,"column":31,"offset":108},"indent":[]}},{"type":"text","value":" precedence:","position":{"start":{"line":11,"column":31,"offset":108},"end":{"line":11,"column":43,"offset":120},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":78},"end":{"line":11,"column":43,"offset":120},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operators","position":{"start":{"line":13,"column":3,"offset":124},"end":{"line":13,"column":12,"offset":133},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":124},"end":{"line":13,"column":12,"offset":133},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Operation","position":{"start":{"line":13,"column":15,"offset":136},"end":{"line":13,"column":24,"offset":145},"indent":[]}}],"position":{"start":{"line":13,"column":15,"offset":136},"end":{"line":13,"column":31,"offset":152},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Example","position":{"start":{"line":13,"column":34,"offset":155},"end":{"line":13,"column":41,"offset":162},"indent":[]}}],"position":{"start":{"line":13,"column":34,"offset":155},"end":{"line":13,"column":49,"offset":170},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":122},"end":{"line":13,"column":51,"offset":172},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"*","position":{"start":{"line":15,"column":3,"offset":226},"end":{"line":15,"column":5,"offset":228},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":15,"column":5,"offset":228},"end":{"line":15,"column":7,"offset":230},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":226},"end":{"line":15,"column":12,"offset":235},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Exponent","position":{"start":{"line":15,"column":15,"offset":238},"end":{"line":15,"column":23,"offset":246},"indent":[]}}],"position":{"start":{"line":15,"column":15,"offset":238},"end":{"line":15,"column":31,"offset":254},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"2 ** 3 = 8","position":{"start":{"line":15,"column":34,"offset":257},"end":{"line":15,"column":46,"offset":269},"indent":[]}}],"position":{"start":{"line":15,"column":34,"offset":257},"end":{"line":15,"column":49,"offset":272},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":224},"end":{"line":15,"column":51,"offset":274},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"%","position":{"start":{"line":16,"column":3,"offset":277},"end":{"line":16,"column":4,"offset":278},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":277},"end":{"line":16,"column":12,"offset":286},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Modulus/Remaider","position":{"start":{"line":16,"column":15,"offset":289},"end":{"line":16,"column":31,"offset":305},"indent":[]}}],"position":{"start":{"line":16,"column":15,"offset":289},"end":{"line":16,"column":31,"offset":305},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 % 8 = 6","position":{"start":{"line":16,"column":34,"offset":308},"end":{"line":16,"column":46,"offset":320},"indent":[]}}],"position":{"start":{"line":16,"column":34,"offset":308},"end":{"line":16,"column":49,"offset":323},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":275},"end":{"line":16,"column":51,"offset":325},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"//","position":{"start":{"line":17,"column":3,"offset":328},"end":{"line":17,"column":5,"offset":330},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":328},"end":{"line":17,"column":12,"offset":337},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Integer division","position":{"start":{"line":17,"column":15,"offset":340},"end":{"line":17,"column":31,"offset":356},"indent":[]}}],"position":{"start":{"line":17,"column":15,"offset":340},"end":{"line":17,"column":31,"offset":356},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 // 8 = 2","position":{"start":{"line":17,"column":34,"offset":359},"end":{"line":17,"column":47,"offset":372},"indent":[]}}],"position":{"start":{"line":17,"column":34,"offset":359},"end":{"line":17,"column":49,"offset":374},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":326},"end":{"line":17,"column":51,"offset":376},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"/","position":{"start":{"line":18,"column":3,"offset":379},"end":{"line":18,"column":4,"offset":380},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":379},"end":{"line":18,"column":12,"offset":388},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Division","position":{"start":{"line":18,"column":15,"offset":391},"end":{"line":18,"column":23,"offset":399},"indent":[]}}],"position":{"start":{"line":18,"column":15,"offset":391},"end":{"line":18,"column":31,"offset":407},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 / 8 = 2.75","position":{"start":{"line":18,"column":34,"offset":410},"end":{"line":18,"column":49,"offset":425},"indent":[]}}],"position":{"start":{"line":18,"column":34,"offset":410},"end":{"line":18,"column":49,"offset":425},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":377},"end":{"line":18,"column":51,"offset":427},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"*","position":{"start":{"line":19,"column":3,"offset":430},"end":{"line":19,"column":5,"offset":432},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":430},"end":{"line":19,"column":12,"offset":439},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Multiplication","position":{"start":{"line":19,"column":15,"offset":442},"end":{"line":19,"column":29,"offset":456},"indent":[]}}],"position":{"start":{"line":19,"column":15,"offset":442},"end":{"line":19,"column":31,"offset":458},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"3 * 3 = 9","position":{"start":{"line":19,"column":34,"offset":461},"end":{"line":19,"column":45,"offset":472},"indent":[]}}],"position":{"start":{"line":19,"column":34,"offset":461},"end":{"line":19,"column":49,"offset":476},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":428},"end":{"line":19,"column":51,"offset":478},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"-","position":{"start":{"line":20,"column":3,"offset":481},"end":{"line":20,"column":4,"offset":482},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":481},"end":{"line":20,"column":12,"offset":490},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Subtraction","position":{"start":{"line":20,"column":15,"offset":493},"end":{"line":20,"column":26,"offset":504},"indent":[]}}],"position":{"start":{"line":20,"column":15,"offset":493},"end":{"line":20,"column":31,"offset":509},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"5 - 2 = 3","position":{"start":{"line":20,"column":34,"offset":512},"end":{"line":20,"column":45,"offset":523},"indent":[]}}],"position":{"start":{"line":20,"column":34,"offset":512},"end":{"line":20,"column":49,"offset":527},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":479},"end":{"line":20,"column":51,"offset":529},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"+","position":{"start":{"line":21,"column":3,"offset":532},"end":{"line":21,"column":4,"offset":533},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":532},"end":{"line":21,"column":12,"offset":541},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Addition","position":{"start":{"line":21,"column":15,"offset":544},"end":{"line":21,"column":23,"offset":552},"indent":[]}}],"position":{"start":{"line":21,"column":15,"offset":544},"end":{"line":21,"column":31,"offset":560},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"2 + 2 = 4","position":{"start":{"line":21,"column":34,"offset":563},"end":{"line":21,"column":45,"offset":574},"indent":[]}}],"position":{"start":{"line":21,"column":34,"offset":563},"end":{"line":21,"column":49,"offset":578},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":530},"end":{"line":21,"column":51,"offset":580},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":122},"end":{"line":21,"column":51,"offset":580},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Examples of expressions in the interactive shell:","position":{"start":{"line":23,"column":1,"offset":582},"end":{"line":23,"column":50,"offset":631},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":582},"end":{"line":23,"column":50,"offset":631},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"2 + 3 * 6","position":{"start":{"line":25,"column":1,"offset":633},"end":{"line":27,"column":4,"offset":656},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(2 + 3) * 6","position":{"start":{"line":29,"column":1,"offset":658},"end":{"line":31,"column":4,"offset":683},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"2 ** 8","position":{"start":{"line":33,"column":1,"offset":685},"end":{"line":35,"column":4,"offset":705},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"23 // 7","position":{"start":{"line":37,"column":1,"offset":707},"end":{"line":39,"column":4,"offset":728},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"23 % 7","position":{"start":{"line":41,"column":1,"offset":730},"end":{"line":43,"column":4,"offset":750},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(5 - 1) * ((7 + 1) / (3 - 1))","position":{"start":{"line":45,"column":1,"offset":752},"end":{"line":47,"column":4,"offset":795},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Data Types","position":{"start":{"line":49,"column":5,"offset":801},"end":{"line":49,"column":15,"offset":811},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":797},"end":{"line":49,"column":15,"offset":811},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Data Type","position":{"start":{"line":51,"column":3,"offset":815},"end":{"line":51,"column":12,"offset":824},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":815},"end":{"line":51,"column":25,"offset":837},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Examples","position":{"start":{"line":51,"column":28,"offset":840},"end":{"line":51,"column":36,"offset":848},"indent":[]}}],"position":{"start":{"line":51,"column":28,"offset":840},"end":{"line":51,"column":69,"offset":881},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":813},"end":{"line":51,"column":71,"offset":883},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Integers","position":{"start":{"line":53,"column":3,"offset":957},"end":{"line":53,"column":11,"offset":965},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":957},"end":{"line":53,"column":25,"offset":979},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"-2, -1, 0, 1, 2, 3, 4, 5","position":{"start":{"line":53,"column":28,"offset":982},"end":{"line":53,"column":54,"offset":1008},"indent":[]}}],"position":{"start":{"line":53,"column":28,"offset":982},"end":{"line":53,"column":69,"offset":1023},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":955},"end":{"line":53,"column":71,"offset":1025},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Floating-point numbers","position":{"start":{"line":54,"column":3,"offset":1028},"end":{"line":54,"column":25,"offset":1050},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1028},"end":{"line":54,"column":25,"offset":1050},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"-1.25, -1.0, --0.5, 0.0, 0.5, 1.0, 1.25","position":{"start":{"line":54,"column":28,"offset":1053},"end":{"line":54,"column":69,"offset":1094},"indent":[]}}],"position":{"start":{"line":54,"column":28,"offset":1053},"end":{"line":54,"column":69,"offset":1094},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1026},"end":{"line":54,"column":71,"offset":1096},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Strings","position":{"start":{"line":55,"column":3,"offset":1099},"end":{"line":55,"column":10,"offset":1106},"indent":[]}}],"position":{"start":{"line":55,"column":3,"offset":1099},"end":{"line":55,"column":25,"offset":1121},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"'a', 'aa', 'aaa', 'Hello!', '11 cats'","position":{"start":{"line":55,"column":28,"offset":1124},"end":{"line":55,"column":67,"offset":1163},"indent":[]}}],"position":{"start":{"line":55,"column":28,"offset":1124},"end":{"line":55,"column":69,"offset":1165},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1097},"end":{"line":55,"column":71,"offset":1167},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":813},"end":{"line":55,"column":71,"offset":1167},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"String Concatenation and Replication","position":{"start":{"line":57,"column":5,"offset":1173},"end":{"line":57,"column":41,"offset":1209},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":1169},"end":{"line":57,"column":41,"offset":1209},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"String concatenation:","position":{"start":{"line":59,"column":1,"offset":1211},"end":{"line":59,"column":22,"offset":1232},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1211},"end":{"line":59,"column":22,"offset":1232},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Alice' 'Bob'","position":{"start":{"line":61,"column":1,"offset":1234},"end":{"line":63,"column":4,"offset":1261},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: Avoid ","position":{"start":{"line":65,"column":1,"offset":1263},"end":{"line":65,"column":13,"offset":1275},"indent":[]}},{"type":"inlineCode","value":"+","position":{"start":{"line":65,"column":13,"offset":1275},"end":{"line":65,"column":16,"offset":1278},"indent":[]}},{"type":"text","value":" operator for string concatenation. Prefer string formatting.","position":{"start":{"line":65,"column":16,"offset":1278},"end":{"line":65,"column":77,"offset":1339},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1263},"end":{"line":65,"column":77,"offset":1339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"String Replication:","position":{"start":{"line":67,"column":1,"offset":1341},"end":{"line":67,"column":20,"offset":1360},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1341},"end":{"line":67,"column":20,"offset":1360},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Alice' * 5","position":{"start":{"line":69,"column":1,"offset":1362},"end":{"line":71,"column":4,"offset":1387},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Variables","position":{"start":{"line":73,"column":5,"offset":1393},"end":{"line":73,"column":14,"offset":1402},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1389},"end":{"line":73,"column":14,"offset":1402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can name a variable anything as long as it obeys the following three rules:","position":{"start":{"line":75,"column":1,"offset":1404},"end":{"line":75,"column":80,"offset":1483},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1404},"end":{"line":75,"column":80,"offset":1483},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can be only one word.","position":{"start":{"line":77,"column":4,"offset":1488},"end":{"line":77,"column":28,"offset":1512},"indent":[]}}],"position":{"start":{"line":77,"column":4,"offset":1488},"end":{"line":77,"column":28,"offset":1512},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1485},"end":{"line":77,"column":28,"offset":1512},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can use only letters, numbers, and the underscore (","position":{"start":{"line":78,"column":4,"offset":1516},"end":{"line":78,"column":58,"offset":1570},"indent":[]}},{"type":"inlineCode","value":"_","position":{"start":{"line":78,"column":58,"offset":1570},"end":{"line":78,"column":61,"offset":1573},"indent":[]}},{"type":"text","value":") character.","position":{"start":{"line":78,"column":61,"offset":1573},"end":{"line":78,"column":73,"offset":1585},"indent":[]}}],"position":{"start":{"line":78,"column":4,"offset":1516},"end":{"line":78,"column":73,"offset":1585},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1513},"end":{"line":78,"column":73,"offset":1585},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can't begin with a number.","position":{"start":{"line":79,"column":4,"offset":1589},"end":{"line":79,"column":33,"offset":1618},"indent":[]}}],"position":{"start":{"line":79,"column":4,"offset":1589},"end":{"line":79,"column":33,"offset":1618},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1586},"end":{"line":79,"column":33,"offset":1618},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Variable name starting with an underscore (","position":{"start":{"line":80,"column":4,"offset":1622},"end":{"line":80,"column":47,"offset":1665},"indent":[]}},{"type":"inlineCode","value":"_","position":{"start":{"line":80,"column":47,"offset":1665},"end":{"line":80,"column":50,"offset":1668},"indent":[]}},{"type":"text","value":") are considered as \"unuseful`.","position":{"start":{"line":80,"column":50,"offset":1668},"end":{"line":80,"column":81,"offset":1699},"indent":[]}}],"position":{"start":{"line":80,"column":4,"offset":1622},"end":{"line":80,"column":81,"offset":1699},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1619},"end":{"line":80,"column":81,"offset":1699},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1485},"end":{"line":80,"column":81,"offset":1699},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":82,"column":1,"offset":1701},"end":{"line":82,"column":9,"offset":1709},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1701},"end":{"line":82,"column":9,"offset":1709},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello'","position":{"start":{"line":84,"column":1,"offset":1711},"end":{"line":86,"column":4,"offset":1739},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"_spam = 'Hello'","position":{"start":{"line":88,"column":1,"offset":1741},"end":{"line":90,"column":4,"offset":1770},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"_spam","position":{"start":{"line":92,"column":1,"offset":1772},"end":{"line":92,"column":8,"offset":1779},"indent":[]}},{"type":"text","value":" should not be used again in the code.","position":{"start":{"line":92,"column":8,"offset":1779},"end":{"line":92,"column":46,"offset":1817},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":1772},"end":{"line":92,"column":46,"offset":1817},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comments","position":{"start":{"line":94,"column":5,"offset":1823},"end":{"line":94,"column":13,"offset":1831},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":1819},"end":{"line":94,"column":13,"offset":1831},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inline comment:","position":{"start":{"line":96,"column":1,"offset":1833},"end":{"line":96,"column":16,"offset":1848},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":1833},"end":{"line":96,"column":16,"offset":1848},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# This is a comment","position":{"start":{"line":98,"column":1,"offset":1850},"end":{"line":100,"column":4,"offset":1883},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Multiline comment:","position":{"start":{"line":102,"column":1,"offset":1885},"end":{"line":102,"column":19,"offset":1903},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":1885},"end":{"line":102,"column":19,"offset":1903},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"# This is a\n# multiline comment","position":{"start":{"line":104,"column":1,"offset":1905},"end":{"line":107,"column":4,"offset":1950},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Code with a comment:","position":{"start":{"line":109,"column":1,"offset":1952},"end":{"line":109,"column":21,"offset":1972},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":1952},"end":{"line":109,"column":21,"offset":1972},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = 1  # initialization","position":{"start":{"line":111,"column":1,"offset":1974},"end":{"line":113,"column":4,"offset":2011},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Please note the two spaces in front of the comment.","position":{"start":{"line":115,"column":1,"offset":2013},"end":{"line":115,"column":52,"offset":2064},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2013},"end":{"line":115,"column":52,"offset":2064},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Function docstring:","position":{"start":{"line":117,"column":1,"offset":2066},"end":{"line":117,"column":20,"offset":2085},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2066},"end":{"line":117,"column":20,"offset":2085},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def foo():\n    \"\"\"\n    This is a function docstring\n    You can also use:\n    ''' Function Docstring '''\n    \"\"\"","position":{"start":{"line":119,"column":1,"offset":2087},"end":{"line":126,"column":4,"offset":2213},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The print Function","position":{"start":{"line":128,"column":5,"offset":2219},"end":{"line":128,"column":23,"offset":2237},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":2215},"end":{"line":128,"column":23,"offset":2237},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('Hello world!')","position":{"start":{"line":130,"column":1,"offset":2239},"end":{"line":132,"column":4,"offset":2274},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"a = 1\nprint('Hello world!', a)","position":{"start":{"line":134,"column":1,"offset":2276},"end":{"line":137,"column":4,"offset":2320},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The input Function","position":{"start":{"line":139,"column":5,"offset":2326},"end":{"line":139,"column":23,"offset":2344},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2322},"end":{"line":139,"column":23,"offset":2344},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example Code:","position":{"start":{"line":141,"column":1,"offset":2346},"end":{"line":141,"column":14,"offset":2359},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":2346},"end":{"line":141,"column":14,"offset":2359},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('What is your name?')   # ask for their name\nmyName = input()\nprint('It is good to meet you, {}'.format(myName))","position":{"start":{"line":143,"column":1,"offset":2361},"end":{"line":147,"column":4,"offset":2493},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The len Function","position":{"start":{"line":149,"column":5,"offset":2499},"end":{"line":149,"column":21,"offset":2515},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":2495},"end":{"line":149,"column":21,"offset":2515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Evaluates to the integer value of the number of characters in a string:","position":{"start":{"line":151,"column":1,"offset":2517},"end":{"line":151,"column":72,"offset":2588},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":2517},"end":{"line":151,"column":72,"offset":2588},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"len('hello')","position":{"start":{"line":153,"column":1,"offset":2590},"end":{"line":155,"column":4,"offset":2616},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: test of emptiness of strings, lists, dictionary, etc, should ","position":{"start":{"line":157,"column":1,"offset":2618},"end":{"line":157,"column":68,"offset":2685},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"not","position":{"start":{"line":157,"column":70,"offset":2687},"end":{"line":157,"column":73,"offset":2690},"indent":[]}}],"position":{"start":{"line":157,"column":68,"offset":2685},"end":{"line":157,"column":75,"offset":2692},"indent":[]}},{"type":"text","value":" use len, but prefer direct\nboolean evaluation.","position":{"start":{"line":157,"column":75,"offset":2692},"end":{"line":158,"column":20,"offset":2739},"indent":[1]}}],"position":{"start":{"line":157,"column":1,"offset":2618},"end":{"line":158,"column":20,"offset":2739},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 2, 3]\nif a:\n    print(\"the list is not empty!\")","position":{"start":{"line":160,"column":1,"offset":2741},"end":{"line":164,"column":4,"offset":2810},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The str, int, and float Functions","position":{"start":{"line":166,"column":5,"offset":2816},"end":{"line":166,"column":38,"offset":2849},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":2812},"end":{"line":166,"column":38,"offset":2849},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Integer to String or Float:","position":{"start":{"line":168,"column":1,"offset":2851},"end":{"line":168,"column":28,"offset":2878},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":2851},"end":{"line":168,"column":28,"offset":2878},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"str(29)","position":{"start":{"line":170,"column":1,"offset":2880},"end":{"line":172,"column":4,"offset":2901},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('I am {} years old.'.format(str(29)))","position":{"start":{"line":174,"column":1,"offset":2903},"end":{"line":176,"column":4,"offset":2960},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"str(-3.14)","position":{"start":{"line":178,"column":1,"offset":2962},"end":{"line":180,"column":4,"offset":2986},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Float to Integer:","position":{"start":{"line":182,"column":1,"offset":2988},"end":{"line":182,"column":18,"offset":3005},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":2988},"end":{"line":182,"column":18,"offset":3005},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"int(7.7)","position":{"start":{"line":184,"column":1,"offset":3007},"end":{"line":186,"column":4,"offset":3029},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"int(7.7) + 1","position":{"start":{"line":188,"column":1,"offset":3031},"end":{"line":190,"column":4,"offset":3057},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Flow Control","position":{"start":{"line":192,"column":4,"offset":3062},"end":{"line":192,"column":16,"offset":3074},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":3059},"end":{"line":192,"column":16,"offset":3074},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":194,"column":5,"offset":3080},"end":{"line":194,"column":25,"offset":3100},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":3076},"end":{"line":194,"column":25,"offset":3100},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operator","position":{"start":{"line":196,"column":3,"offset":3104},"end":{"line":196,"column":11,"offset":3112},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":3104},"end":{"line":196,"column":11,"offset":3112},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Meaning","position":{"start":{"line":196,"column":14,"offset":3115},"end":{"line":196,"column":21,"offset":3122},"indent":[]}}],"position":{"start":{"line":196,"column":14,"offset":3115},"end":{"line":196,"column":38,"offset":3139},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":3102},"end":{"line":196,"column":40,"offset":3141},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"==","position":{"start":{"line":198,"column":3,"offset":3184},"end":{"line":198,"column":7,"offset":3188},"indent":[]}}],"position":{"start":{"line":198,"column":3,"offset":3184},"end":{"line":198,"column":11,"offset":3192},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Equal to","position":{"start":{"line":198,"column":14,"offset":3195},"end":{"line":198,"column":22,"offset":3203},"indent":[]}}],"position":{"start":{"line":198,"column":14,"offset":3195},"end":{"line":198,"column":38,"offset":3219},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":3182},"end":{"line":198,"column":40,"offset":3221},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"!=","position":{"start":{"line":199,"column":3,"offset":3224},"end":{"line":199,"column":7,"offset":3228},"indent":[]}}],"position":{"start":{"line":199,"column":3,"offset":3224},"end":{"line":199,"column":11,"offset":3232},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Not equal to","position":{"start":{"line":199,"column":14,"offset":3235},"end":{"line":199,"column":26,"offset":3247},"indent":[]}}],"position":{"start":{"line":199,"column":14,"offset":3235},"end":{"line":199,"column":38,"offset":3259},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3222},"end":{"line":199,"column":40,"offset":3261},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<","position":{"start":{"line":200,"column":3,"offset":3264},"end":{"line":200,"column":6,"offset":3267},"indent":[]}}],"position":{"start":{"line":200,"column":3,"offset":3264},"end":{"line":200,"column":11,"offset":3272},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Less than","position":{"start":{"line":200,"column":14,"offset":3275},"end":{"line":200,"column":23,"offset":3284},"indent":[]}}],"position":{"start":{"line":200,"column":14,"offset":3275},"end":{"line":200,"column":38,"offset":3299},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":3262},"end":{"line":200,"column":40,"offset":3301},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">","position":{"start":{"line":201,"column":3,"offset":3304},"end":{"line":201,"column":6,"offset":3307},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":3304},"end":{"line":201,"column":11,"offset":3312},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Greater Than","position":{"start":{"line":201,"column":14,"offset":3315},"end":{"line":201,"column":26,"offset":3327},"indent":[]}}],"position":{"start":{"line":201,"column":14,"offset":3315},"end":{"line":201,"column":38,"offset":3339},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":3302},"end":{"line":201,"column":40,"offset":3341},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<=","position":{"start":{"line":202,"column":3,"offset":3344},"end":{"line":202,"column":7,"offset":3348},"indent":[]}}],"position":{"start":{"line":202,"column":3,"offset":3344},"end":{"line":202,"column":11,"offset":3352},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Less than or Equal to","position":{"start":{"line":202,"column":14,"offset":3355},"end":{"line":202,"column":35,"offset":3376},"indent":[]}}],"position":{"start":{"line":202,"column":14,"offset":3355},"end":{"line":202,"column":38,"offset":3379},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":3342},"end":{"line":202,"column":40,"offset":3381},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">=","position":{"start":{"line":203,"column":3,"offset":3384},"end":{"line":203,"column":7,"offset":3388},"indent":[]}}],"position":{"start":{"line":203,"column":3,"offset":3384},"end":{"line":203,"column":11,"offset":3392},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Greater than or Equal to","position":{"start":{"line":203,"column":14,"offset":3395},"end":{"line":203,"column":38,"offset":3419},"indent":[]}}],"position":{"start":{"line":203,"column":14,"offset":3395},"end":{"line":203,"column":38,"offset":3419},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":3382},"end":{"line":203,"column":40,"offset":3421},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":3102},"end":{"line":203,"column":40,"offset":3421},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These operators evaluate to True or False depending on the values you give them.","position":{"start":{"line":205,"column":1,"offset":3423},"end":{"line":205,"column":81,"offset":3503},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":3423},"end":{"line":205,"column":81,"offset":3503},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Examples:","position":{"start":{"line":207,"column":1,"offset":3505},"end":{"line":207,"column":10,"offset":3514},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":3505},"end":{"line":207,"column":10,"offset":3514},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"42 == 42","position":{"start":{"line":209,"column":1,"offset":3516},"end":{"line":211,"column":4,"offset":3538},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"40 == 42","position":{"start":{"line":213,"column":1,"offset":3540},"end":{"line":215,"column":4,"offset":3562},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'hello' == 'hello'","position":{"start":{"line":217,"column":1,"offset":3564},"end":{"line":219,"column":4,"offset":3596},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'hello' == 'Hello'","position":{"start":{"line":221,"column":1,"offset":3598},"end":{"line":223,"column":4,"offset":3630},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'dog' != 'cat'","position":{"start":{"line":225,"column":1,"offset":3632},"end":{"line":227,"column":4,"offset":3660},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"42 == 42.0","position":{"start":{"line":229,"column":1,"offset":3662},"end":{"line":231,"column":4,"offset":3686},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"42 == '42'","position":{"start":{"line":233,"column":1,"offset":3688},"end":{"line":235,"column":4,"offset":3712},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Boolean evaluation","position":{"start":{"line":237,"column":5,"offset":3718},"end":{"line":237,"column":23,"offset":3736},"indent":[]}}],"position":{"start":{"line":237,"column":1,"offset":3714},"end":{"line":237,"column":23,"offset":3736},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Never use ","position":{"start":{"line":239,"column":1,"offset":3738},"end":{"line":239,"column":11,"offset":3748},"indent":[]}},{"type":"inlineCode","value":"==","position":{"start":{"line":239,"column":11,"offset":3748},"end":{"line":239,"column":15,"offset":3752},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":239,"column":15,"offset":3752},"end":{"line":239,"column":19,"offset":3756},"indent":[]}},{"type":"inlineCode","value":"!=","position":{"start":{"line":239,"column":19,"offset":3756},"end":{"line":239,"column":23,"offset":3760},"indent":[]}},{"type":"text","value":" operator to evaluate boolean operation. Use the ","position":{"start":{"line":239,"column":23,"offset":3760},"end":{"line":239,"column":72,"offset":3809},"indent":[]}},{"type":"inlineCode","value":"is","position":{"start":{"line":239,"column":72,"offset":3809},"end":{"line":239,"column":76,"offset":3813},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":239,"column":76,"offset":3813},"end":{"line":239,"column":80,"offset":3817},"indent":[]}},{"type":"inlineCode","value":"is not","position":{"start":{"line":239,"column":80,"offset":3817},"end":{"line":239,"column":88,"offset":3825},"indent":[]}},{"type":"text","value":" operators,\nor use implicit boolean evaluation.","position":{"start":{"line":239,"column":88,"offset":3825},"end":{"line":240,"column":36,"offset":3872},"indent":[1]}}],"position":{"start":{"line":239,"column":1,"offset":3738},"end":{"line":240,"column":36,"offset":3872},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"NO (even if they are valid Python):","position":{"start":{"line":242,"column":1,"offset":3874},"end":{"line":242,"column":36,"offset":3909},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":3874},"end":{"line":242,"column":36,"offset":3909},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"True == True","position":{"start":{"line":244,"column":1,"offset":3911},"end":{"line":246,"column":4,"offset":3937},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"True != False","position":{"start":{"line":248,"column":1,"offset":3939},"end":{"line":250,"column":4,"offset":3966},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"YES (even if they are valid Python):","position":{"start":{"line":252,"column":1,"offset":3968},"end":{"line":252,"column":37,"offset":4004},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":3968},"end":{"line":252,"column":37,"offset":4004},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"True is True","position":{"start":{"line":254,"column":1,"offset":4006},"end":{"line":256,"column":4,"offset":4032},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"True is not False","position":{"start":{"line":258,"column":1,"offset":4034},"end":{"line":260,"column":4,"offset":4065},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These statements are equivalent:","position":{"start":{"line":262,"column":1,"offset":4067},"end":{"line":262,"column":33,"offset":4099},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":4067},"end":{"line":262,"column":33,"offset":4099},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"if a is True:\n   pass\nif a is not False:\n   pass\nif a:\n   pass","position":{"start":{"line":264,"column":1,"offset":4101},"end":{"line":271,"column":4,"offset":4177},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And these as well:","position":{"start":{"line":273,"column":1,"offset":4179},"end":{"line":273,"column":19,"offset":4197},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":4179},"end":{"line":273,"column":19,"offset":4197},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"if a is False:\n   pass\nif a is not True:\n   pass\nif not a:\n   pass","position":{"start":{"line":275,"column":1,"offset":4199},"end":{"line":282,"column":4,"offset":4279},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":284,"column":5,"offset":4285},"end":{"line":284,"column":22,"offset":4302},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":4281},"end":{"line":284,"column":22,"offset":4302},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three Boolean operators: and, or, and not.","position":{"start":{"line":286,"column":1,"offset":4304},"end":{"line":286,"column":53,"offset":4356},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":4304},"end":{"line":286,"column":53,"offset":4356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":288,"column":1,"offset":4358},"end":{"line":288,"column":5,"offset":4362},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"and","position":{"start":{"line":288,"column":6,"offset":4363},"end":{"line":288,"column":9,"offset":4366},"indent":[]}}],"position":{"start":{"line":288,"column":5,"offset":4362},"end":{"line":288,"column":10,"offset":4367},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":288,"column":10,"offset":4367},"end":{"line":288,"column":22,"offset":4379},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":288,"column":23,"offset":4380},"end":{"line":288,"column":28,"offset":4385},"indent":[]}}],"position":{"start":{"line":288,"column":22,"offset":4379},"end":{"line":288,"column":29,"offset":4386},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":288,"column":29,"offset":4386},"end":{"line":288,"column":36,"offset":4393},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":4358},"end":{"line":288,"column":36,"offset":4393},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":290,"column":3,"offset":4397},"end":{"line":290,"column":13,"offset":4407},"indent":[]}}],"position":{"start":{"line":290,"column":3,"offset":4397},"end":{"line":290,"column":18,"offset":4412},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":290,"column":21,"offset":4415},"end":{"line":290,"column":33,"offset":4427},"indent":[]}}],"position":{"start":{"line":290,"column":21,"offset":4415},"end":{"line":290,"column":33,"offset":4427},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":4395},"end":{"line":290,"column":35,"offset":4429},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True and True","position":{"start":{"line":292,"column":3,"offset":4467},"end":{"line":292,"column":16,"offset":4480},"indent":[]}}],"position":{"start":{"line":292,"column":3,"offset":4467},"end":{"line":292,"column":18,"offset":4482},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":292,"column":21,"offset":4485},"end":{"line":292,"column":25,"offset":4489},"indent":[]}}],"position":{"start":{"line":292,"column":21,"offset":4485},"end":{"line":292,"column":33,"offset":4497},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":4465},"end":{"line":292,"column":35,"offset":4499},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True and False","position":{"start":{"line":293,"column":3,"offset":4502},"end":{"line":293,"column":17,"offset":4516},"indent":[]}}],"position":{"start":{"line":293,"column":3,"offset":4502},"end":{"line":293,"column":18,"offset":4517},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":293,"column":21,"offset":4520},"end":{"line":293,"column":26,"offset":4525},"indent":[]}}],"position":{"start":{"line":293,"column":21,"offset":4520},"end":{"line":293,"column":33,"offset":4532},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":4500},"end":{"line":293,"column":35,"offset":4534},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False and True","position":{"start":{"line":294,"column":3,"offset":4537},"end":{"line":294,"column":17,"offset":4551},"indent":[]}}],"position":{"start":{"line":294,"column":3,"offset":4537},"end":{"line":294,"column":18,"offset":4552},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":294,"column":21,"offset":4555},"end":{"line":294,"column":26,"offset":4560},"indent":[]}}],"position":{"start":{"line":294,"column":21,"offset":4555},"end":{"line":294,"column":33,"offset":4567},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":4535},"end":{"line":294,"column":35,"offset":4569},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False and False","position":{"start":{"line":295,"column":3,"offset":4572},"end":{"line":295,"column":18,"offset":4587},"indent":[]}}],"position":{"start":{"line":295,"column":3,"offset":4572},"end":{"line":295,"column":18,"offset":4587},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":295,"column":21,"offset":4590},"end":{"line":295,"column":26,"offset":4595},"indent":[]}}],"position":{"start":{"line":295,"column":21,"offset":4590},"end":{"line":295,"column":33,"offset":4602},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":4570},"end":{"line":295,"column":35,"offset":4604},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":4395},"end":{"line":295,"column":35,"offset":4604},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":297,"column":1,"offset":4606},"end":{"line":297,"column":5,"offset":4610},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"or","position":{"start":{"line":297,"column":6,"offset":4611},"end":{"line":297,"column":8,"offset":4613},"indent":[]}}],"position":{"start":{"line":297,"column":5,"offset":4610},"end":{"line":297,"column":9,"offset":4614},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":297,"column":9,"offset":4614},"end":{"line":297,"column":21,"offset":4626},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":297,"column":22,"offset":4627},"end":{"line":297,"column":27,"offset":4632},"indent":[]}}],"position":{"start":{"line":297,"column":21,"offset":4626},"end":{"line":297,"column":28,"offset":4633},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":297,"column":28,"offset":4633},"end":{"line":297,"column":35,"offset":4640},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":4606},"end":{"line":297,"column":35,"offset":4640},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":299,"column":3,"offset":4644},"end":{"line":299,"column":13,"offset":4654},"indent":[]}}],"position":{"start":{"line":299,"column":3,"offset":4644},"end":{"line":299,"column":17,"offset":4658},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":299,"column":20,"offset":4661},"end":{"line":299,"column":32,"offset":4673},"indent":[]}}],"position":{"start":{"line":299,"column":20,"offset":4661},"end":{"line":299,"column":32,"offset":4673},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":4642},"end":{"line":299,"column":34,"offset":4675},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True or True","position":{"start":{"line":301,"column":3,"offset":4712},"end":{"line":301,"column":15,"offset":4724},"indent":[]}}],"position":{"start":{"line":301,"column":3,"offset":4712},"end":{"line":301,"column":17,"offset":4726},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":301,"column":20,"offset":4729},"end":{"line":301,"column":24,"offset":4733},"indent":[]}}],"position":{"start":{"line":301,"column":20,"offset":4729},"end":{"line":301,"column":32,"offset":4741},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":4710},"end":{"line":301,"column":34,"offset":4743},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True or False","position":{"start":{"line":302,"column":3,"offset":4746},"end":{"line":302,"column":16,"offset":4759},"indent":[]}}],"position":{"start":{"line":302,"column":3,"offset":4746},"end":{"line":302,"column":17,"offset":4760},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":302,"column":20,"offset":4763},"end":{"line":302,"column":24,"offset":4767},"indent":[]}}],"position":{"start":{"line":302,"column":20,"offset":4763},"end":{"line":302,"column":32,"offset":4775},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":4744},"end":{"line":302,"column":34,"offset":4777},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False or True","position":{"start":{"line":303,"column":3,"offset":4780},"end":{"line":303,"column":16,"offset":4793},"indent":[]}}],"position":{"start":{"line":303,"column":3,"offset":4780},"end":{"line":303,"column":17,"offset":4794},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":303,"column":20,"offset":4797},"end":{"line":303,"column":24,"offset":4801},"indent":[]}}],"position":{"start":{"line":303,"column":20,"offset":4797},"end":{"line":303,"column":32,"offset":4809},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":4778},"end":{"line":303,"column":34,"offset":4811},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False or False","position":{"start":{"line":304,"column":3,"offset":4814},"end":{"line":304,"column":17,"offset":4828},"indent":[]}}],"position":{"start":{"line":304,"column":3,"offset":4814},"end":{"line":304,"column":17,"offset":4828},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":304,"column":20,"offset":4831},"end":{"line":304,"column":25,"offset":4836},"indent":[]}}],"position":{"start":{"line":304,"column":20,"offset":4831},"end":{"line":304,"column":32,"offset":4843},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":4812},"end":{"line":304,"column":34,"offset":4845},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":4642},"end":{"line":304,"column":34,"offset":4845},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":306,"column":1,"offset":4847},"end":{"line":306,"column":5,"offset":4851},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":306,"column":6,"offset":4852},"end":{"line":306,"column":9,"offset":4855},"indent":[]}}],"position":{"start":{"line":306,"column":5,"offset":4851},"end":{"line":306,"column":10,"offset":4856},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":306,"column":10,"offset":4856},"end":{"line":306,"column":22,"offset":4868},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":306,"column":23,"offset":4869},"end":{"line":306,"column":28,"offset":4874},"indent":[]}}],"position":{"start":{"line":306,"column":22,"offset":4868},"end":{"line":306,"column":29,"offset":4875},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":306,"column":29,"offset":4875},"end":{"line":306,"column":36,"offset":4882},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":4847},"end":{"line":306,"column":36,"offset":4882},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":308,"column":3,"offset":4886},"end":{"line":308,"column":13,"offset":4896},"indent":[]}}],"position":{"start":{"line":308,"column":3,"offset":4886},"end":{"line":308,"column":13,"offset":4896},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":308,"column":16,"offset":4899},"end":{"line":308,"column":28,"offset":4911},"indent":[]}}],"position":{"start":{"line":308,"column":16,"offset":4899},"end":{"line":308,"column":28,"offset":4911},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":4884},"end":{"line":308,"column":30,"offset":4913},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"not True","position":{"start":{"line":310,"column":3,"offset":4946},"end":{"line":310,"column":11,"offset":4954},"indent":[]}}],"position":{"start":{"line":310,"column":3,"offset":4946},"end":{"line":310,"column":13,"offset":4956},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":310,"column":16,"offset":4959},"end":{"line":310,"column":21,"offset":4964},"indent":[]}}],"position":{"start":{"line":310,"column":16,"offset":4959},"end":{"line":310,"column":28,"offset":4971},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":4944},"end":{"line":310,"column":30,"offset":4973},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"not False","position":{"start":{"line":311,"column":3,"offset":4976},"end":{"line":311,"column":12,"offset":4985},"indent":[]}}],"position":{"start":{"line":311,"column":3,"offset":4976},"end":{"line":311,"column":13,"offset":4986},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":311,"column":16,"offset":4989},"end":{"line":311,"column":20,"offset":4993},"indent":[]}}],"position":{"start":{"line":311,"column":16,"offset":4989},"end":{"line":311,"column":28,"offset":5001},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":4974},"end":{"line":311,"column":30,"offset":5003},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":4884},"end":{"line":311,"column":30,"offset":5003},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Mixing Boolean and Comparison Operators","position":{"start":{"line":313,"column":5,"offset":5009},"end":{"line":313,"column":44,"offset":5048},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":5005},"end":{"line":313,"column":44,"offset":5048},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"(4 < 5) and (5 < 6)","position":{"start":{"line":315,"column":1,"offset":5050},"end":{"line":317,"column":4,"offset":5083},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(4 < 5) and (9 < 6)","position":{"start":{"line":319,"column":1,"offset":5085},"end":{"line":321,"column":4,"offset":5118},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(1 == 2) or (2 == 2)","position":{"start":{"line":323,"column":1,"offset":5120},"end":{"line":325,"column":4,"offset":5154},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use multiple Boolean operators in an expression, along with the comparison operators:","position":{"start":{"line":327,"column":1,"offset":5156},"end":{"line":327,"column":99,"offset":5254},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":5156},"end":{"line":327,"column":99,"offset":5254},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2","position":{"start":{"line":329,"column":1,"offset":5256},"end":{"line":331,"column":4,"offset":5318},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"if Statements","position":{"start":{"line":333,"column":5,"offset":5324},"end":{"line":333,"column":18,"offset":5337},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":5320},"end":{"line":333,"column":18,"offset":5337},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if name == 'Alice':\n    print('Hi, Alice.')","position":{"start":{"line":335,"column":1,"offset":5339},"end":{"line":338,"column":4,"offset":5396},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"else Statements","position":{"start":{"line":340,"column":5,"offset":5402},"end":{"line":340,"column":20,"offset":5417},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":5398},"end":{"line":340,"column":20,"offset":5417},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelse:\n    print('Hello, stranger.')","position":{"start":{"line":342,"column":1,"offset":5419},"end":{"line":349,"column":4,"offset":5526},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"elif Statements","position":{"start":{"line":351,"column":5,"offset":5532},"end":{"line":351,"column":20,"offset":5547},"indent":[]}}],"position":{"start":{"line":351,"column":1,"offset":5528},"end":{"line":351,"column":20,"offset":5547},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\nage = 5\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age < 12:\n    print('You are not Alice, kiddo.')","position":{"start":{"line":353,"column":1,"offset":5549},"end":{"line":361,"column":4,"offset":5682},"indent":[1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\nage = 30\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age < 12:\n    print('You are not Alice, kiddo.')\nelse:\n    print('You are neither Alice nor a little kid.')","position":{"start":{"line":363,"column":1,"offset":5684},"end":{"line":373,"column":4,"offset":5877},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"while Loop Statements","position":{"start":{"line":375,"column":5,"offset":5883},"end":{"line":375,"column":26,"offset":5904},"indent":[]}}],"position":{"start":{"line":375,"column":1,"offset":5879},"end":{"line":375,"column":26,"offset":5904},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 0\n\nwhile spam < 5:\n    print('Hello, world.')\n    spam = spam + 1","position":{"start":{"line":377,"column":1,"offset":5906},"end":{"line":383,"column":4,"offset":5992},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"break Statements","position":{"start":{"line":385,"column":5,"offset":5998},"end":{"line":385,"column":21,"offset":6014},"indent":[]}}],"position":{"start":{"line":385,"column":1,"offset":5994},"end":{"line":385,"column":21,"offset":6014},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the execution reaches a break statement, it immediately exits the while loop's clause:","position":{"start":{"line":387,"column":1,"offset":6016},"end":{"line":387,"column":90,"offset":6105},"indent":[]}}],"position":{"start":{"line":387,"column":1,"offset":6016},"end":{"line":387,"column":90,"offset":6105},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"while True:\n    print('Please type your name.')\n    name = input()\n    if name == 'your name':\n        break\n\nprint('Thank you!')","position":{"start":{"line":389,"column":1,"offset":6107},"end":{"line":397,"column":4,"offset":6250},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"continue Statements","position":{"start":{"line":399,"column":5,"offset":6256},"end":{"line":399,"column":24,"offset":6275},"indent":[]}}],"position":{"start":{"line":399,"column":1,"offset":6252},"end":{"line":399,"column":24,"offset":6275},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop.","position":{"start":{"line":401,"column":1,"offset":6277},"end":{"line":401,"column":128,"offset":6404},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":6277},"end":{"line":401,"column":128,"offset":6404},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"while True:\n    print('Who are you?')\n    name = input()\n    if name != 'Joe':\n        continue\n    print('Hello, Joe. What is the password? (It is a fish.)')\n    password = input()\n    if password == 'swordfish':\n        break\n\nprint('Access granted.')","position":{"start":{"line":403,"column":1,"offset":6406},"end":{"line":415,"column":4,"offset":6673},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"for Loops and the range() Function","position":{"start":{"line":417,"column":5,"offset":6679},"end":{"line":417,"column":39,"offset":6713},"indent":[]}}],"position":{"start":{"line":417,"column":1,"offset":6675},"end":{"line":417,"column":39,"offset":6713},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('My name is')\nfor i in range(5):\n    print('Jimmy Five Times ({})'.format(str(i)))","position":{"start":{"line":419,"column":1,"offset":6715},"end":{"line":423,"column":4,"offset":6817},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":425,"column":1,"offset":6819},"end":{"line":425,"column":5,"offset":6823},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"range()","position":{"start":{"line":425,"column":6,"offset":6824},"end":{"line":425,"column":13,"offset":6831},"indent":[]}}],"position":{"start":{"line":425,"column":5,"offset":6823},"end":{"line":425,"column":14,"offset":6832},"indent":[]}},{"type":"text","value":" function can also be called with three arguments. The first two arguments will be the start and stop values, and the third will be the step argument. The step is the amount that the variable is increased by after each iteration.","position":{"start":{"line":425,"column":14,"offset":6832},"end":{"line":425,"column":243,"offset":7061},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":6819},"end":{"line":425,"column":243,"offset":7061},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in range(0, 10, 2):\n   print(i)","position":{"start":{"line":427,"column":1,"offset":7063},"end":{"line":430,"column":4,"offset":7114},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can even use a negative number for the step argument to make the for loop count down instead of up.","position":{"start":{"line":432,"column":1,"offset":7116},"end":{"line":432,"column":104,"offset":7219},"indent":[]}}],"position":{"start":{"line":432,"column":1,"offset":7116},"end":{"line":432,"column":104,"offset":7219},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in range(5, -1, -1):\n    print(i)","position":{"start":{"line":434,"column":1,"offset":7221},"end":{"line":437,"column":4,"offset":7274},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For else statement","position":{"start":{"line":439,"column":5,"offset":7280},"end":{"line":439,"column":23,"offset":7298},"indent":[]}}],"position":{"start":{"line":439,"column":1,"offset":7276},"end":{"line":439,"column":23,"offset":7298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This allows to specify a statement to execute in case of the full loop has been executed. Only\nuseful when a ","position":{"start":{"line":441,"column":1,"offset":7300},"end":{"line":442,"column":15,"offset":7409},"indent":[1]}},{"type":"inlineCode","value":"break","position":{"start":{"line":442,"column":15,"offset":7409},"end":{"line":442,"column":22,"offset":7416},"indent":[]}},{"type":"text","value":" condition can occur in the loop:","position":{"start":{"line":442,"column":22,"offset":7416},"end":{"line":442,"column":55,"offset":7449},"indent":[]}}],"position":{"start":{"line":441,"column":1,"offset":7300},"end":{"line":442,"column":55,"offset":7449},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"for i in [1, 2, 3, 4, 5]:\n   if i == 3:\n       break\nelse:\n   print(\"only executed when no item of the list is equal to 3\")","position":{"start":{"line":444,"column":1,"offset":7451},"end":{"line":450,"column":4,"offset":7588},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Importing Modules","position":{"start":{"line":452,"column":5,"offset":7594},"end":{"line":452,"column":22,"offset":7611},"indent":[]}}],"position":{"start":{"line":452,"column":1,"offset":7590},"end":{"line":452,"column":22,"offset":7611},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import random\n\nfor i in range(5):\n    print(random.randint(1, 10))","position":{"start":{"line":454,"column":1,"offset":7613},"end":{"line":459,"column":4,"offset":7693},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"import random, sys, os, math","position":{"start":{"line":461,"column":1,"offset":7695},"end":{"line":463,"column":4,"offset":7737},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"from random import *.","position":{"start":{"line":465,"column":1,"offset":7739},"end":{"line":467,"column":4,"offset":7774},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Ending a Program with sys.exit","position":{"start":{"line":469,"column":5,"offset":7780},"end":{"line":469,"column":35,"offset":7810},"indent":[]}}],"position":{"start":{"line":469,"column":1,"offset":7776},"end":{"line":469,"column":35,"offset":7810},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import sys\n\nwhile True:\n    print('Type exit to exit.')\n    response = input()\n    if response == 'exit':\n        sys.exit()\n    print('You typed {}.'.format(response))","position":{"start":{"line":471,"column":1,"offset":7812},"end":{"line":480,"column":4,"offset":7994},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Functions","position":{"start":{"line":482,"column":4,"offset":7999},"end":{"line":482,"column":13,"offset":8008},"indent":[]}}],"position":{"start":{"line":482,"column":1,"offset":7996},"end":{"line":482,"column":13,"offset":8008},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def hello(name):\n    print('Hello {}'.format(name))","position":{"start":{"line":484,"column":1,"offset":8010},"end":{"line":487,"column":4,"offset":8075},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return Values and return Statements","position":{"start":{"line":489,"column":5,"offset":8081},"end":{"line":489,"column":40,"offset":8116},"indent":[]}}],"position":{"start":{"line":489,"column":1,"offset":8077},"end":{"line":489,"column":40,"offset":8116},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:","position":{"start":{"line":491,"column":1,"offset":8118},"end":{"line":491,"column":169,"offset":8286},"indent":[]}}],"position":{"start":{"line":491,"column":1,"offset":8118},"end":{"line":491,"column":169,"offset":8286},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The return keyword.","position":{"start":{"line":493,"column":5,"offset":8292},"end":{"line":493,"column":24,"offset":8311},"indent":[]}}],"position":{"start":{"line":493,"column":5,"offset":8292},"end":{"line":493,"column":24,"offset":8311},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":8288},"end":{"line":493,"column":24,"offset":8311},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":494,"column":1,"offset":8312},"end":{"line":494,"column":2,"offset":8313},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":8312},"end":{"line":494,"column":2,"offset":8313},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":8312},"end":{"line":494,"column":2,"offset":8313},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The value or expression that the function should return.","position":{"start":{"line":495,"column":5,"offset":8318},"end":{"line":495,"column":61,"offset":8374},"indent":[]}}],"position":{"start":{"line":495,"column":5,"offset":8318},"end":{"line":495,"column":61,"offset":8374},"indent":[]}}],"position":{"start":{"line":495,"column":1,"offset":8314},"end":{"line":495,"column":61,"offset":8374},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":8288},"end":{"line":495,"column":61,"offset":8374},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"import random\ndef getAnswer(answerNumber):\n    if answerNumber == 1:\n        return 'It is certain'\n    elif answerNumber == 2:\n        return 'It is decidedly so'\n    elif answerNumber == 3:\n        return 'Yes'\n    elif answerNumber == 4:\n        return 'Reply hazy try again'\n    elif answerNumber == 5:\n        return 'Ask again later'\n    elif answerNumber == 6:\n        return 'Concentrate and ask again'\n    elif answerNumber == 7:\n        return 'My reply is no'\n    elif answerNumber == 8:\n        return 'Outlook not so good'\n    elif answerNumber == 9:\n        return 'Very doubtful'\n\nr = random.randint(1, 9)\nfortune = getAnswer(r)\nprint(fortune)","position":{"start":{"line":497,"column":1,"offset":8376},"end":{"line":522,"column":4,"offset":9048},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The None Value","position":{"start":{"line":524,"column":5,"offset":9054},"end":{"line":524,"column":19,"offset":9068},"indent":[]}}],"position":{"start":{"line":524,"column":1,"offset":9050},"end":{"line":524,"column":19,"offset":9068},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = print('Hello!')\nspam is None","position":{"start":{"line":526,"column":1,"offset":9070},"end":{"line":529,"column":4,"offset":9119},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: never compare to ","position":{"start":{"line":531,"column":1,"offset":9121},"end":{"line":531,"column":24,"offset":9144},"indent":[]}},{"type":"inlineCode","value":"None","position":{"start":{"line":531,"column":24,"offset":9144},"end":{"line":531,"column":30,"offset":9150},"indent":[]}},{"type":"text","value":" with the ","position":{"start":{"line":531,"column":30,"offset":9150},"end":{"line":531,"column":40,"offset":9160},"indent":[]}},{"type":"inlineCode","value":"==","position":{"start":{"line":531,"column":40,"offset":9160},"end":{"line":531,"column":44,"offset":9164},"indent":[]}},{"type":"text","value":" operator. Always use ","position":{"start":{"line":531,"column":44,"offset":9164},"end":{"line":531,"column":66,"offset":9186},"indent":[]}},{"type":"inlineCode","value":"is","position":{"start":{"line":531,"column":66,"offset":9186},"end":{"line":531,"column":70,"offset":9190},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":531,"column":70,"offset":9190},"end":{"line":531,"column":71,"offset":9191},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":9121},"end":{"line":531,"column":71,"offset":9191},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"print Keyword Arguments","position":{"start":{"line":533,"column":5,"offset":9197},"end":{"line":533,"column":28,"offset":9220},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":9193},"end":{"line":533,"column":28,"offset":9220},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('Hello', end='')\nprint('World')","position":{"start":{"line":535,"column":1,"offset":9222},"end":{"line":538,"column":4,"offset":9273},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('cats', 'dogs', 'mice')","position":{"start":{"line":540,"column":1,"offset":9275},"end":{"line":542,"column":4,"offset":9318},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('cats', 'dogs', 'mice', sep=',')","position":{"start":{"line":544,"column":1,"offset":9320},"end":{"line":546,"column":4,"offset":9372},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Local and Global Scope","position":{"start":{"line":548,"column":5,"offset":9378},"end":{"line":548,"column":27,"offset":9400},"indent":[]}}],"position":{"start":{"line":548,"column":1,"offset":9374},"end":{"line":548,"column":27,"offset":9400},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code in the global scope cannot use any local variables.","position":{"start":{"line":550,"column":5,"offset":9406},"end":{"line":550,"column":61,"offset":9462},"indent":[]}}],"position":{"start":{"line":550,"column":5,"offset":9406},"end":{"line":550,"column":61,"offset":9462},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":9402},"end":{"line":550,"column":61,"offset":9462},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":551,"column":1,"offset":9463},"end":{"line":551,"column":2,"offset":9464},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":9463},"end":{"line":551,"column":2,"offset":9464},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":9463},"end":{"line":551,"column":2,"offset":9464},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"However, a local scope can access global variables.","position":{"start":{"line":552,"column":5,"offset":9469},"end":{"line":552,"column":56,"offset":9520},"indent":[]}}],"position":{"start":{"line":552,"column":5,"offset":9469},"end":{"line":552,"column":56,"offset":9520},"indent":[]}}],"position":{"start":{"line":552,"column":1,"offset":9465},"end":{"line":552,"column":56,"offset":9520},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":553,"column":1,"offset":9521},"end":{"line":553,"column":2,"offset":9522},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":9521},"end":{"line":553,"column":2,"offset":9522},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":9521},"end":{"line":553,"column":2,"offset":9522},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code in a function's local scope cannot use variables in any other local scope.","position":{"start":{"line":554,"column":5,"offset":9527},"end":{"line":554,"column":84,"offset":9606},"indent":[]}}],"position":{"start":{"line":554,"column":5,"offset":9527},"end":{"line":554,"column":84,"offset":9606},"indent":[]}}],"position":{"start":{"line":554,"column":1,"offset":9523},"end":{"line":555,"column":1,"offset":9607},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.","position":{"start":{"line":556,"column":5,"offset":9612},"end":{"line":556,"column":176,"offset":9783},"indent":[]}}],"position":{"start":{"line":556,"column":5,"offset":9612},"end":{"line":556,"column":176,"offset":9783},"indent":[]}}],"position":{"start":{"line":556,"column":1,"offset":9608},"end":{"line":556,"column":176,"offset":9783},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":9402},"end":{"line":556,"column":176,"offset":9783},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The global Statement","position":{"start":{"line":558,"column":5,"offset":9789},"end":{"line":558,"column":25,"offset":9809},"indent":[]}}],"position":{"start":{"line":558,"column":1,"offset":9785},"end":{"line":558,"column":25,"offset":9809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to modify a global variable from within a function, use the global statement:","position":{"start":{"line":560,"column":1,"offset":9811},"end":{"line":560,"column":90,"offset":9900},"indent":[]}}],"position":{"start":{"line":560,"column":1,"offset":9811},"end":{"line":560,"column":90,"offset":9900},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def spam():\n    global eggs\n    eggs = 'spam'\n\neggs = 'global'\nspam()\nprint(eggs)","position":{"start":{"line":562,"column":1,"offset":9902},"end":{"line":570,"column":4,"offset":9997},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are four rules to tell whether a variable is in a local scope or global scope:","position":{"start":{"line":572,"column":1,"offset":9999},"end":{"line":572,"column":85,"offset":10083},"indent":[]}}],"position":{"start":{"line":572,"column":1,"offset":9999},"end":{"line":572,"column":85,"offset":10083},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.","position":{"start":{"line":574,"column":4,"offset":10088},"end":{"line":574,"column":125,"offset":10209},"indent":[]}}],"position":{"start":{"line":574,"column":4,"offset":10088},"end":{"line":574,"column":125,"offset":10209},"indent":[]}}],"position":{"start":{"line":574,"column":1,"offset":10085},"end":{"line":575,"column":1,"offset":10210},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If there is a global statement for that variable in a function, it is a global variable.","position":{"start":{"line":576,"column":4,"offset":10214},"end":{"line":576,"column":92,"offset":10302},"indent":[]}}],"position":{"start":{"line":576,"column":4,"offset":10214},"end":{"line":576,"column":92,"offset":10302},"indent":[]}}],"position":{"start":{"line":576,"column":1,"offset":10211},"end":{"line":577,"column":1,"offset":10303},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.","position":{"start":{"line":578,"column":4,"offset":10307},"end":{"line":578,"column":106,"offset":10409},"indent":[]}}],"position":{"start":{"line":578,"column":4,"offset":10307},"end":{"line":578,"column":106,"offset":10409},"indent":[]}}],"position":{"start":{"line":578,"column":1,"offset":10304},"end":{"line":579,"column":1,"offset":10410},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"But if the variable is not used in an assignment statement, it is a global variable.","position":{"start":{"line":580,"column":4,"offset":10414},"end":{"line":580,"column":88,"offset":10498},"indent":[]}}],"position":{"start":{"line":580,"column":4,"offset":10414},"end":{"line":580,"column":88,"offset":10498},"indent":[]}}],"position":{"start":{"line":580,"column":1,"offset":10411},"end":{"line":580,"column":88,"offset":10498},"indent":[]}}],"position":{"start":{"line":574,"column":1,"offset":10085},"end":{"line":580,"column":88,"offset":10498},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Exception Handling","position":{"start":{"line":582,"column":4,"offset":10503},"end":{"line":582,"column":22,"offset":10521},"indent":[]}}],"position":{"start":{"line":582,"column":1,"offset":10500},"end":{"line":582,"column":22,"offset":10521},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Basic exception handling","position":{"start":{"line":584,"column":5,"offset":10527},"end":{"line":584,"column":29,"offset":10551},"indent":[]}}],"position":{"start":{"line":584,"column":1,"offset":10523},"end":{"line":584,"column":29,"offset":10551},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def spam(divideBy):\n    try:\n        return 42 / divideBy\n    except ZeroDivisionError as e:\n        print('Error: Invalid argument: {}'.format(e))\n\nprint(spam(2))\nprint(spam(12))\nprint(spam(0))\nprint(spam(1))","position":{"start":{"line":586,"column":1,"offset":10553},"end":{"line":597,"column":4,"offset":10776},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Final code in exception handling","position":{"start":{"line":599,"column":5,"offset":10782},"end":{"line":599,"column":37,"offset":10814},"indent":[]}}],"position":{"start":{"line":599,"column":1,"offset":10778},"end":{"line":599,"column":37,"offset":10814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Code inside the ","position":{"start":{"line":601,"column":1,"offset":10816},"end":{"line":601,"column":17,"offset":10832},"indent":[]}},{"type":"inlineCode","value":"finally","position":{"start":{"line":601,"column":17,"offset":10832},"end":{"line":601,"column":26,"offset":10841},"indent":[]}},{"type":"text","value":" section is always executed, no matter if an exception has been raised or\nnot, and even if an exception is not caught.","position":{"start":{"line":601,"column":26,"offset":10841},"end":{"line":602,"column":45,"offset":10959},"indent":[1]}}],"position":{"start":{"line":601,"column":1,"offset":10816},"end":{"line":602,"column":45,"offset":10959},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"def spam(divideBy):\n    try:\n        return 42 / divideBy\n    except ZeroDivisionError as e:\n        print('Error: Invalid argument: {}'.format(e))\n    finally:\n        print(\"-- division finished --\")\n\nprint(spam(12))\nprint(spam(0))","position":{"start":{"line":604,"column":1,"offset":10961},"end":{"line":615,"column":4,"offset":11208},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Lists","position":{"start":{"line":617,"column":4,"offset":11213},"end":{"line":617,"column":9,"offset":11218},"indent":[]}}],"position":{"start":{"line":617,"column":1,"offset":11210},"end":{"line":617,"column":9,"offset":11218},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"['cat', 'bat', 'rat', 'elephant']","position":{"start":{"line":619,"column":1,"offset":11220},"end":{"line":621,"column":4,"offset":11267},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting Individual Values in a List with Indexes","position":{"start":{"line":623,"column":5,"offset":11273},"end":{"line":623,"column":53,"offset":11321},"indent":[]}}],"position":{"start":{"line":623,"column":1,"offset":11269},"end":{"line":623,"column":53,"offset":11321},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[0]","position":{"start":{"line":625,"column":1,"offset":11323},"end":{"line":628,"column":4,"offset":11385},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1]","position":{"start":{"line":630,"column":1,"offset":11387},"end":{"line":632,"column":4,"offset":11408},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[2]","position":{"start":{"line":634,"column":1,"offset":11410},"end":{"line":636,"column":4,"offset":11431},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[3]","position":{"start":{"line":638,"column":1,"offset":11433},"end":{"line":640,"column":4,"offset":11454},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Negative Indexes","position":{"start":{"line":642,"column":5,"offset":11460},"end":{"line":642,"column":21,"offset":11476},"indent":[]}}],"position":{"start":{"line":642,"column":1,"offset":11456},"end":{"line":642,"column":21,"offset":11476},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[-1]","position":{"start":{"line":644,"column":1,"offset":11478},"end":{"line":647,"column":4,"offset":11541},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-3]","position":{"start":{"line":649,"column":1,"offset":11543},"end":{"line":651,"column":4,"offset":11565},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'The {} is afraid of the {}.'.format(spam[-1], spam[-3])","position":{"start":{"line":653,"column":1,"offset":11567},"end":{"line":655,"column":4,"offset":11637},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting Sublists with Slices","position":{"start":{"line":657,"column":5,"offset":11643},"end":{"line":657,"column":33,"offset":11671},"indent":[]}}],"position":{"start":{"line":657,"column":1,"offset":11639},"end":{"line":657,"column":33,"offset":11671},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[0:4]","position":{"start":{"line":659,"column":1,"offset":11673},"end":{"line":662,"column":4,"offset":11737},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1:3]","position":{"start":{"line":664,"column":1,"offset":11739},"end":{"line":666,"column":4,"offset":11762},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[0:-1]","position":{"start":{"line":668,"column":1,"offset":11764},"end":{"line":670,"column":4,"offset":11788},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[:2]","position":{"start":{"line":672,"column":1,"offset":11790},"end":{"line":675,"column":4,"offset":11853},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1:]","position":{"start":{"line":677,"column":1,"offset":11855},"end":{"line":679,"column":4,"offset":11877},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:]","position":{"start":{"line":681,"column":1,"offset":11879},"end":{"line":683,"column":4,"offset":11900},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting a list Length with len","position":{"start":{"line":685,"column":5,"offset":11906},"end":{"line":685,"column":35,"offset":11936},"indent":[]}}],"position":{"start":{"line":685,"column":1,"offset":11902},"end":{"line":685,"column":35,"offset":11936},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'moose']\nlen(spam)","position":{"start":{"line":687,"column":1,"offset":11938},"end":{"line":690,"column":4,"offset":11992},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Changing Values in a List with Indexes","position":{"start":{"line":692,"column":5,"offset":11998},"end":{"line":692,"column":43,"offset":12036},"indent":[]}}],"position":{"start":{"line":692,"column":1,"offset":11994},"end":{"line":692,"column":43,"offset":12036},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[1] = 'aardvark'\nspam","position":{"start":{"line":694,"column":1,"offset":12038},"end":{"line":698,"column":4,"offset":12118},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[2] = spam[1]\nspam","position":{"start":{"line":700,"column":1,"offset":12120},"end":{"line":703,"column":4,"offset":12156},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-1] = 12345\nspam","position":{"start":{"line":705,"column":1,"offset":12158},"end":{"line":708,"column":4,"offset":12193},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"List Concatenation and List Replication","position":{"start":{"line":710,"column":5,"offset":12199},"end":{"line":710,"column":44,"offset":12238},"indent":[]}}],"position":{"start":{"line":710,"column":1,"offset":12195},"end":{"line":710,"column":44,"offset":12238},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"[1, 2, 3] + ['A', 'B', 'C']","position":{"start":{"line":712,"column":1,"offset":12240},"end":{"line":714,"column":4,"offset":12281},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"['X', 'Y', 'Z'] * 3","position":{"start":{"line":716,"column":1,"offset":12283},"end":{"line":718,"column":4,"offset":12316},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = [1, 2, 3]\nspam = spam + ['A', 'B', 'C']\nspam","position":{"start":{"line":720,"column":1,"offset":12318},"end":{"line":724,"column":4,"offset":12383},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Values from Lists with del Statements","position":{"start":{"line":726,"column":5,"offset":12389},"end":{"line":726,"column":51,"offset":12435},"indent":[]}}],"position":{"start":{"line":726,"column":1,"offset":12385},"end":{"line":726,"column":51,"offset":12435},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\ndel spam[2]\nspam","position":{"start":{"line":728,"column":1,"offset":12437},"end":{"line":732,"column":4,"offset":12508},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"del spam[2]\nspam","position":{"start":{"line":734,"column":1,"offset":12510},"end":{"line":737,"column":4,"offset":12540},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using for Loops with Lists","position":{"start":{"line":739,"column":5,"offset":12546},"end":{"line":739,"column":31,"offset":12572},"indent":[]}}],"position":{"start":{"line":739,"column":1,"offset":12542},"end":{"line":739,"column":31,"offset":12572},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"supplies = ['pens', 'staplers', 'flame-throwers', 'binders']\n\nfor i, supply in enumerate(supplies):\n    print('Index {} in supplies is: {}'.format(str(i), supply))","position":{"start":{"line":741,"column":1,"offset":12574},"end":{"line":746,"column":4,"offset":12751},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Looping Through Multiple Lists with zip","position":{"start":{"line":748,"column":5,"offset":12757},"end":{"line":748,"column":44,"offset":12796},"indent":[]}}],"position":{"start":{"line":748,"column":1,"offset":12753},"end":{"line":748,"column":44,"offset":12796},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = ['Pete', 'John', 'Elizabeth']\nage = [6, 23, 44]\n\nfor n, a in zip(name, age):\n    print('{} is {} years old'.format(n, a))","position":{"start":{"line":750,"column":1,"offset":12798},"end":{"line":756,"column":4,"offset":12940},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators","position":{"start":{"line":758,"column":5,"offset":12946},"end":{"line":758,"column":32,"offset":12973},"indent":[]}}],"position":{"start":{"line":758,"column":1,"offset":12942},"end":{"line":758,"column":32,"offset":12973},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'howdy' in ['hello', 'hi', 'howdy', 'heyas']","position":{"start":{"line":760,"column":1,"offset":12975},"end":{"line":762,"column":4,"offset":13033},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['hello', 'hi', 'howdy', 'heyas']\nFalse","position":{"start":{"line":764,"column":1,"offset":13035},"end":{"line":767,"column":4,"offset":13095},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'howdy' not in spam","position":{"start":{"line":769,"column":1,"offset":13097},"end":{"line":771,"column":4,"offset":13130},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'cat' not in spam","position":{"start":{"line":773,"column":1,"offset":13132},"end":{"line":775,"column":4,"offset":13163},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Multiple Assignment Trick","position":{"start":{"line":777,"column":5,"offset":13169},"end":{"line":777,"column":34,"offset":13198},"indent":[]}}],"position":{"start":{"line":777,"column":1,"offset":13165},"end":{"line":777,"column":34,"offset":13198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The multiple assignment trick is a shortcut that lets you assign multiple variables with the values in a list in one line of code. So instead of doing this:","position":{"start":{"line":779,"column":1,"offset":13200},"end":{"line":779,"column":157,"offset":13356},"indent":[]}}],"position":{"start":{"line":779,"column":1,"offset":13200},"end":{"line":779,"column":157,"offset":13356},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"cat = ['fat', 'orange', 'loud']\nsize = cat[0]\ncolor = cat[1]\ndisposition = cat[2]","position":{"start":{"line":781,"column":1,"offset":13358},"end":{"line":786,"column":4,"offset":13453},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You could type this line of code:","position":{"start":{"line":788,"column":1,"offset":13455},"end":{"line":788,"column":34,"offset":13488},"indent":[]}}],"position":{"start":{"line":788,"column":1,"offset":13455},"end":{"line":788,"column":34,"offset":13488},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"cat = ['fat', 'orange', 'loud']\nsize, color, disposition = cat","position":{"start":{"line":790,"column":1,"offset":13490},"end":{"line":793,"column":4,"offset":13566},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The multiple assignment trick can also be used to swap the values in two variables:","position":{"start":{"line":795,"column":1,"offset":13568},"end":{"line":795,"column":84,"offset":13651},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":13568},"end":{"line":795,"column":84,"offset":13651},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a, b = 'Alice', 'Bob'\na, b = b, a\nprint(a)","position":{"start":{"line":797,"column":1,"offset":13653},"end":{"line":801,"column":4,"offset":13709},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(b)","position":{"start":{"line":803,"column":1,"offset":13711},"end":{"line":805,"column":4,"offset":13733},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Augmented Assignment Operators","position":{"start":{"line":807,"column":5,"offset":13739},"end":{"line":807,"column":35,"offset":13769},"indent":[]}}],"position":{"start":{"line":807,"column":1,"offset":13735},"end":{"line":807,"column":35,"offset":13769},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operator","position":{"start":{"line":809,"column":3,"offset":13773},"end":{"line":809,"column":11,"offset":13781},"indent":[]}}],"position":{"start":{"line":809,"column":3,"offset":13773},"end":{"line":809,"column":14,"offset":13784},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Equivalent","position":{"start":{"line":809,"column":17,"offset":13787},"end":{"line":809,"column":27,"offset":13797},"indent":[]}}],"position":{"start":{"line":809,"column":17,"offset":13787},"end":{"line":809,"column":34,"offset":13804},"indent":[]}}],"position":{"start":{"line":809,"column":1,"offset":13771},"end":{"line":809,"column":36,"offset":13806},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam += 1","position":{"start":{"line":811,"column":3,"offset":13845},"end":{"line":811,"column":14,"offset":13856},"indent":[]}}],"position":{"start":{"line":811,"column":3,"offset":13845},"end":{"line":811,"column":14,"offset":13856},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam + 1","position":{"start":{"line":811,"column":17,"offset":13859},"end":{"line":811,"column":34,"offset":13876},"indent":[]}}],"position":{"start":{"line":811,"column":17,"offset":13859},"end":{"line":811,"column":34,"offset":13876},"indent":[]}}],"position":{"start":{"line":811,"column":1,"offset":13843},"end":{"line":811,"column":36,"offset":13878},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam -= 1","position":{"start":{"line":812,"column":3,"offset":13881},"end":{"line":812,"column":14,"offset":13892},"indent":[]}}],"position":{"start":{"line":812,"column":3,"offset":13881},"end":{"line":812,"column":14,"offset":13892},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam - 1","position":{"start":{"line":812,"column":17,"offset":13895},"end":{"line":812,"column":34,"offset":13912},"indent":[]}}],"position":{"start":{"line":812,"column":17,"offset":13895},"end":{"line":812,"column":34,"offset":13912},"indent":[]}}],"position":{"start":{"line":812,"column":1,"offset":13879},"end":{"line":812,"column":36,"offset":13914},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam *= 1","position":{"start":{"line":813,"column":3,"offset":13917},"end":{"line":813,"column":14,"offset":13928},"indent":[]}}],"position":{"start":{"line":813,"column":3,"offset":13917},"end":{"line":813,"column":14,"offset":13928},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam * 1","position":{"start":{"line":813,"column":17,"offset":13931},"end":{"line":813,"column":34,"offset":13948},"indent":[]}}],"position":{"start":{"line":813,"column":17,"offset":13931},"end":{"line":813,"column":34,"offset":13948},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":13915},"end":{"line":813,"column":36,"offset":13950},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam /= 1","position":{"start":{"line":814,"column":3,"offset":13953},"end":{"line":814,"column":14,"offset":13964},"indent":[]}}],"position":{"start":{"line":814,"column":3,"offset":13953},"end":{"line":814,"column":14,"offset":13964},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam / 1","position":{"start":{"line":814,"column":17,"offset":13967},"end":{"line":814,"column":34,"offset":13984},"indent":[]}}],"position":{"start":{"line":814,"column":17,"offset":13967},"end":{"line":814,"column":34,"offset":13984},"indent":[]}}],"position":{"start":{"line":814,"column":1,"offset":13951},"end":{"line":814,"column":36,"offset":13986},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam %= 1","position":{"start":{"line":815,"column":3,"offset":13989},"end":{"line":815,"column":14,"offset":14000},"indent":[]}}],"position":{"start":{"line":815,"column":3,"offset":13989},"end":{"line":815,"column":14,"offset":14000},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam % 1","position":{"start":{"line":815,"column":17,"offset":14003},"end":{"line":815,"column":34,"offset":14020},"indent":[]}}],"position":{"start":{"line":815,"column":17,"offset":14003},"end":{"line":815,"column":34,"offset":14020},"indent":[]}}],"position":{"start":{"line":815,"column":1,"offset":13987},"end":{"line":815,"column":36,"offset":14022},"indent":[]}}],"position":{"start":{"line":809,"column":1,"offset":13771},"end":{"line":815,"column":36,"offset":14022},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Examples:","position":{"start":{"line":817,"column":1,"offset":14024},"end":{"line":817,"column":10,"offset":14033},"indent":[]}}],"position":{"start":{"line":817,"column":1,"offset":14024},"end":{"line":817,"column":10,"offset":14033},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello'\nspam += ' world!'\nspam","position":{"start":{"line":819,"column":1,"offset":14035},"end":{"line":823,"column":4,"offset":14086},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"bacon = ['Zophie']\nbacon *= 3\nbacon","position":{"start":{"line":825,"column":1,"offset":14088},"end":{"line":829,"column":4,"offset":14137},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Finding a Value in a List with the index Method","position":{"start":{"line":831,"column":5,"offset":14143},"end":{"line":831,"column":52,"offset":14190},"indent":[]}}],"position":{"start":{"line":831,"column":1,"offset":14139},"end":{"line":831,"column":52,"offset":14190},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['Zophie', 'Pooka', 'Fat-tail', 'Pooka']\nspam.index('Pooka')","position":{"start":{"line":833,"column":1,"offset":14192},"end":{"line":836,"column":4,"offset":14273},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding Values to Lists with append and insert","position":{"start":{"line":838,"column":5,"offset":14279},"end":{"line":838,"column":50,"offset":14324},"indent":[]}}],"position":{"start":{"line":838,"column":1,"offset":14275},"end":{"line":838,"column":50,"offset":14324},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"append()","position":{"start":{"line":840,"column":3,"offset":14328},"end":{"line":840,"column":11,"offset":14336},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":14326},"end":{"line":840,"column":13,"offset":14338},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":840,"column":13,"offset":14338},"end":{"line":840,"column":14,"offset":14339},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":14326},"end":{"line":840,"column":14,"offset":14339},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'bat']\nspam.append('moose')\nspam","position":{"start":{"line":842,"column":1,"offset":14341},"end":{"line":846,"column":4,"offset":14409},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"insert()","position":{"start":{"line":848,"column":3,"offset":14413},"end":{"line":848,"column":11,"offset":14421},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":14411},"end":{"line":848,"column":13,"offset":14423},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":848,"column":13,"offset":14423},"end":{"line":848,"column":14,"offset":14424},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":14411},"end":{"line":848,"column":14,"offset":14424},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'bat']\nspam.insert(1, 'chicken')\nspam","position":{"start":{"line":850,"column":1,"offset":14426},"end":{"line":854,"column":4,"offset":14499},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Values from Lists with remove","position":{"start":{"line":856,"column":5,"offset":14505},"end":{"line":856,"column":43,"offset":14543},"indent":[]}}],"position":{"start":{"line":856,"column":1,"offset":14501},"end":{"line":856,"column":43,"offset":14543},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam.remove('bat')\nspam","position":{"start":{"line":858,"column":1,"offset":14545},"end":{"line":862,"column":4,"offset":14623},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the value appears multiple times in the list, only the first instance of the value will be removed.","position":{"start":{"line":864,"column":1,"offset":14625},"end":{"line":864,"column":103,"offset":14727},"indent":[]}}],"position":{"start":{"line":864,"column":1,"offset":14625},"end":{"line":864,"column":103,"offset":14727},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Sorting the Values in a List with sort","position":{"start":{"line":866,"column":5,"offset":14733},"end":{"line":866,"column":43,"offset":14771},"indent":[]}}],"position":{"start":{"line":866,"column":1,"offset":14729},"end":{"line":866,"column":43,"offset":14771},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = [2, 5, 3.14, 1, -7]\nspam.sort()\nspam","position":{"start":{"line":868,"column":1,"offset":14773},"end":{"line":872,"column":4,"offset":14830},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['ants', 'cats', 'dogs', 'badgers', 'elephants']\nspam.sort()\nspam","position":{"start":{"line":874,"column":1,"offset":14832},"end":{"line":878,"column":4,"offset":14918},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also pass True for the reverse keyword argument to have sort() sort the values in reverse order:","position":{"start":{"line":880,"column":1,"offset":14920},"end":{"line":880,"column":105,"offset":15024},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":14920},"end":{"line":880,"column":105,"offset":15024},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam.sort(reverse=True)\nspam","position":{"start":{"line":882,"column":1,"offset":15026},"end":{"line":885,"column":4,"offset":15068},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to sort the values in regular alphabetical order, pass str. lower for the key keyword argument in the sort() method call:","position":{"start":{"line":887,"column":1,"offset":15070},"end":{"line":887,"column":134,"offset":15203},"indent":[]}}],"position":{"start":{"line":887,"column":1,"offset":15070},"end":{"line":887,"column":134,"offset":15203},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['a', 'z', 'A', 'Z']\nspam.sort(key=str.lower)\nspam","position":{"start":{"line":889,"column":1,"offset":15205},"end":{"line":893,"column":4,"offset":15276},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use the built-in function ","position":{"start":{"line":895,"column":1,"offset":15278},"end":{"line":895,"column":35,"offset":15312},"indent":[]}},{"type":"inlineCode","value":"sorted","position":{"start":{"line":895,"column":35,"offset":15312},"end":{"line":895,"column":43,"offset":15320},"indent":[]}},{"type":"text","value":" to return a new list:","position":{"start":{"line":895,"column":43,"offset":15320},"end":{"line":895,"column":65,"offset":15342},"indent":[]}}],"position":{"start":{"line":895,"column":1,"offset":15278},"end":{"line":895,"column":65,"offset":15342},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['ants', 'cats', 'dogs', 'badgers', 'elephants']\nsorted(spam)","position":{"start":{"line":897,"column":1,"offset":15344},"end":{"line":900,"column":4,"offset":15426},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tuple Data Type","position":{"start":{"line":902,"column":4,"offset":15431},"end":{"line":902,"column":19,"offset":15446},"indent":[]}}],"position":{"start":{"line":902,"column":1,"offset":15428},"end":{"line":902,"column":19,"offset":15446},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"eggs = ('hello', 42, 0.5)\neggs[0]","position":{"start":{"line":904,"column":1,"offset":15448},"end":{"line":907,"column":4,"offset":15495},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"eggs[1:3]","position":{"start":{"line":909,"column":1,"offset":15497},"end":{"line":911,"column":4,"offset":15520},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"len(eggs)","position":{"start":{"line":913,"column":1,"offset":15522},"end":{"line":915,"column":4,"offset":15545},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The main way that tuples are different from lists is that tuples, like strings, are immutable.","position":{"start":{"line":917,"column":1,"offset":15547},"end":{"line":917,"column":95,"offset":15641},"indent":[]}}],"position":{"start":{"line":917,"column":1,"offset":15547},"end":{"line":917,"column":95,"offset":15641},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Converting Types with the list and tuple Functions","position":{"start":{"line":919,"column":4,"offset":15646},"end":{"line":919,"column":54,"offset":15696},"indent":[]}}],"position":{"start":{"line":919,"column":1,"offset":15643},"end":{"line":919,"column":54,"offset":15696},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"tuple(['cat', 'dog', 5])","position":{"start":{"line":921,"column":1,"offset":15698},"end":{"line":923,"column":4,"offset":15736},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"list(('cat', 'dog', 5))","position":{"start":{"line":925,"column":1,"offset":15738},"end":{"line":927,"column":4,"offset":15775},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"list('hello')","position":{"start":{"line":929,"column":1,"offset":15777},"end":{"line":931,"column":4,"offset":15804},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dictionaries and Structuring Data","position":{"start":{"line":933,"column":4,"offset":15809},"end":{"line":933,"column":37,"offset":15842},"indent":[]}}],"position":{"start":{"line":933,"column":1,"offset":15806},"end":{"line":933,"column":37,"offset":15842},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example Dictionary:","position":{"start":{"line":935,"column":1,"offset":15844},"end":{"line":935,"column":20,"offset":15863},"indent":[]}}],"position":{"start":{"line":935,"column":1,"offset":15844},"end":{"line":935,"column":20,"offset":15863},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"myCat = {'size': 'fat', 'color': 'gray', 'disposition': 'loud'}","position":{"start":{"line":937,"column":1,"offset":15865},"end":{"line":939,"column":4,"offset":15942},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The keys, values, and items Methods","position":{"start":{"line":941,"column":5,"offset":15948},"end":{"line":941,"column":40,"offset":15983},"indent":[]}}],"position":{"start":{"line":941,"column":1,"offset":15944},"end":{"line":941,"column":40,"offset":15983},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values():","position":{"start":{"line":943,"column":1,"offset":15985},"end":{"line":943,"column":10,"offset":15994},"indent":[]}}],"position":{"start":{"line":943,"column":1,"offset":15985},"end":{"line":943,"column":10,"offset":15994},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'color': 'red', 'age': 42}\n\nfor v in spam.values():\n    print(v)","position":{"start":{"line":945,"column":1,"offset":15996},"end":{"line":950,"column":4,"offset":16082},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"keys():","position":{"start":{"line":952,"column":1,"offset":16084},"end":{"line":952,"column":8,"offset":16091},"indent":[]}}],"position":{"start":{"line":952,"column":1,"offset":16084},"end":{"line":952,"column":8,"offset":16091},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for k in spam.keys():\n    print(k)","position":{"start":{"line":954,"column":1,"offset":16093},"end":{"line":957,"column":4,"offset":16141},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"items():","position":{"start":{"line":959,"column":1,"offset":16143},"end":{"line":959,"column":9,"offset":16151},"indent":[]}}],"position":{"start":{"line":959,"column":1,"offset":16143},"end":{"line":959,"column":9,"offset":16151},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in spam.items():\n    print(i)","position":{"start":{"line":961,"column":1,"offset":16153},"end":{"line":964,"column":4,"offset":16202},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using the keys(), values(), and items() methods, a for loop can iterate over the keys, values, or key-value pairs in a dictionary, respectively.","position":{"start":{"line":966,"column":1,"offset":16204},"end":{"line":966,"column":145,"offset":16348},"indent":[]}}],"position":{"start":{"line":966,"column":1,"offset":16204},"end":{"line":966,"column":145,"offset":16348},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'color': 'red', 'age': 42}\n\nfor k, v in spam.items():\n    print('Key: {} Value: {}'.format(k, str(v)))","position":{"start":{"line":968,"column":1,"offset":16350},"end":{"line":973,"column":4,"offset":16474},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Checking if a Key or Value Exists in a Dictionary","position":{"start":{"line":975,"column":5,"offset":16480},"end":{"line":975,"column":54,"offset":16529},"indent":[]}}],"position":{"start":{"line":975,"column":1,"offset":16476},"end":{"line":975,"column":54,"offset":16529},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Zophie', 'age': 7}\n'name' in spam.keys()","position":{"start":{"line":977,"column":1,"offset":16531},"end":{"line":980,"column":4,"offset":16602},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Zophie' in spam.values()","position":{"start":{"line":982,"column":1,"offset":16604},"end":{"line":984,"column":4,"offset":16643},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"# You can omit the call to keys() when checking for a key\n'color' in spam","position":{"start":{"line":986,"column":1,"offset":16645},"end":{"line":989,"column":4,"offset":16732},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'color' not in spam","position":{"start":{"line":991,"column":1,"offset":16734},"end":{"line":993,"column":4,"offset":16767},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'color' in spam","position":{"start":{"line":995,"column":1,"offset":16769},"end":{"line":997,"column":4,"offset":16798},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The get Method","position":{"start":{"line":999,"column":5,"offset":16804},"end":{"line":999,"column":19,"offset":16818},"indent":[]}}],"position":{"start":{"line":999,"column":1,"offset":16800},"end":{"line":999,"column":19,"offset":16818},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"picnic_items = {'apples': 5, 'cups': 2}\n'I am bringing {} cups.'.format(str(picnic_items.get('cups', 0)))","position":{"start":{"line":1001,"column":1,"offset":16820},"end":{"line":1004,"column":4,"offset":16939},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'I am bringing {} eggs.'.format(str(picnic_items.get('eggs', 0)))","position":{"start":{"line":1006,"column":1,"offset":16941},"end":{"line":1008,"column":4,"offset":17020},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The setdefault Method","position":{"start":{"line":1010,"column":5,"offset":17026},"end":{"line":1010,"column":26,"offset":17047},"indent":[]}}],"position":{"start":{"line":1010,"column":1,"offset":17022},"end":{"line":1010,"column":26,"offset":17047},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's consider this code:","position":{"start":{"line":1012,"column":1,"offset":17049},"end":{"line":1012,"column":26,"offset":17074},"indent":[]}}],"position":{"start":{"line":1012,"column":1,"offset":17049},"end":{"line":1012,"column":26,"offset":17074},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Pooka', 'age': 5}\nif 'color' not in spam:\n    spam['color'] = 'black'","position":{"start":{"line":1014,"column":1,"offset":17076},"end":{"line":1018,"column":4,"offset":17176},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":1020,"column":1,"offset":17178},"end":{"line":1020,"column":7,"offset":17184},"indent":[]}},{"type":"inlineCode","value":"setdefault","position":{"start":{"line":1020,"column":7,"offset":17184},"end":{"line":1020,"column":19,"offset":17196},"indent":[]}},{"type":"text","value":" we could make the same code more shortly:","position":{"start":{"line":1020,"column":19,"offset":17196},"end":{"line":1020,"column":61,"offset":17238},"indent":[]}}],"position":{"start":{"line":1020,"column":1,"offset":17178},"end":{"line":1020,"column":61,"offset":17238},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Pooka', 'age': 5}\nspam.setdefault('color', 'black')","position":{"start":{"line":1022,"column":1,"offset":17240},"end":{"line":1025,"column":4,"offset":17322},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam","position":{"start":{"line":1027,"column":1,"offset":17324},"end":{"line":1029,"column":4,"offset":17342},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.setdefault('color', 'white')","position":{"start":{"line":1031,"column":1,"offset":17344},"end":{"line":1033,"column":4,"offset":17391},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam","position":{"start":{"line":1035,"column":1,"offset":17393},"end":{"line":1037,"column":4,"offset":17411},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Pretty Printing","position":{"start":{"line":1039,"column":5,"offset":17417},"end":{"line":1039,"column":20,"offset":17432},"indent":[]}}],"position":{"start":{"line":1039,"column":1,"offset":17413},"end":{"line":1039,"column":20,"offset":17432},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import pprint\n\nmessage = 'It was a bright cold day in April, and the clocks were striking thirteen.'\ncount = {}\n\nfor character in message:\n    count.setdefault(character, 0)\n    count[character] = count[character] + 1\n\npprint.pprint(count)","position":{"start":{"line":1041,"column":1,"offset":17434},"end":{"line":1052,"column":4,"offset":17687},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Merge two dictionaries","position":{"start":{"line":1054,"column":5,"offset":17693},"end":{"line":1054,"column":27,"offset":17715},"indent":[]}}],"position":{"start":{"line":1054,"column":1,"offset":17689},"end":{"line":1054,"column":27,"offset":17715},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# in Python 3.5+:\nx = {'a': 1, 'b': 2}\ny = {'b': 3, 'c': 4}\nz = {**x, **y}\nz","position":{"start":{"line":1056,"column":1,"offset":17717},"end":{"line":1062,"column":4,"offset":17807},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"sets","position":{"start":{"line":1064,"column":4,"offset":17812},"end":{"line":1064,"column":8,"offset":17816},"indent":[]}}],"position":{"start":{"line":1064,"column":1,"offset":17809},"end":{"line":1064,"column":8,"offset":17816},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the Python 3 ","position":{"start":{"line":1066,"column":1,"offset":17818},"end":{"line":1066,"column":19,"offset":17836},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/tutorial/datastructures.html","children":[{"type":"text","value":"documentation","position":{"start":{"line":1066,"column":20,"offset":17837},"end":{"line":1066,"column":33,"offset":17850},"indent":[]}}],"position":{"start":{"line":1066,"column":19,"offset":17836},"end":{"line":1066,"column":90,"offset":17907},"indent":[]}}],"position":{"start":{"line":1066,"column":1,"offset":17818},"end":{"line":1066,"column":90,"offset":17907},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A set is an unordered collection with no duplicate elements. Basic uses include membership testing and eliminating duplicate entries. Set objects also support mathematical operations like union, intersection, difference, and symmetric difference.","position":{"start":{"line":1068,"column":3,"offset":17911},"end":{"line":1068,"column":249,"offset":18157},"indent":[]}}],"position":{"start":{"line":1068,"column":3,"offset":17911},"end":{"line":1068,"column":249,"offset":18157},"indent":[]}}],"position":{"start":{"line":1068,"column":1,"offset":17909},"end":{"line":1068,"column":249,"offset":18157},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Initializing a set","position":{"start":{"line":1070,"column":5,"offset":18163},"end":{"line":1070,"column":23,"offset":18181},"indent":[]}}],"position":{"start":{"line":1070,"column":1,"offset":18159},"end":{"line":1070,"column":23,"offset":18181},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to create sets: using curly braces ","position":{"start":{"line":1072,"column":1,"offset":18183},"end":{"line":1072,"column":55,"offset":18237},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":1072,"column":55,"offset":18237},"end":{"line":1072,"column":59,"offset":18241},"indent":[]}},{"type":"text","value":" and the bult-in function ","position":{"start":{"line":1072,"column":59,"offset":18241},"end":{"line":1072,"column":85,"offset":18267},"indent":[]}},{"type":"inlineCode","value":"set()","position":{"start":{"line":1072,"column":85,"offset":18267},"end":{"line":1072,"column":92,"offset":18274},"indent":[]}}],"position":{"start":{"line":1072,"column":1,"offset":18183},"end":{"line":1072,"column":92,"offset":18274},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns = set([1, 2, 3])","position":{"start":{"line":1074,"column":1,"offset":18276},"end":{"line":1077,"column":4,"offset":18322},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When creating an empty set, be sure to not use the curly braces ","position":{"start":{"line":1079,"column":1,"offset":18324},"end":{"line":1079,"column":65,"offset":18388},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":1079,"column":65,"offset":18388},"end":{"line":1079,"column":69,"offset":18392},"indent":[]}},{"type":"text","value":" or you will get an empty dictionary instead.","position":{"start":{"line":1079,"column":69,"offset":18392},"end":{"line":1079,"column":114,"offset":18437},"indent":[]}}],"position":{"start":{"line":1079,"column":1,"offset":18324},"end":{"line":1079,"column":114,"offset":18437},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {}\ntype(s)","position":{"start":{"line":1081,"column":1,"offset":18439},"end":{"line":1084,"column":4,"offset":18467},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sets: unordered collections of unique elements","position":{"start":{"line":1086,"column":5,"offset":18473},"end":{"line":1086,"column":51,"offset":18519},"indent":[]}}],"position":{"start":{"line":1086,"column":1,"offset":18469},"end":{"line":1086,"column":51,"offset":18519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A set automatically remove all the duplicate values.","position":{"start":{"line":1088,"column":1,"offset":18521},"end":{"line":1088,"column":53,"offset":18573},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":18521},"end":{"line":1088,"column":53,"offset":18573},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3, 2, 3, 4}\ns","position":{"start":{"line":1090,"column":1,"offset":18575},"end":{"line":1093,"column":4,"offset":18613},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And as an unordered data type, they can't be indexed.","position":{"start":{"line":1095,"column":1,"offset":18615},"end":{"line":1095,"column":54,"offset":18668},"indent":[]}}],"position":{"start":{"line":1095,"column":1,"offset":18615},"end":{"line":1095,"column":54,"offset":18668},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns(0)","position":{"start":{"line":1097,"column":1,"offset":18670},"end":{"line":1100,"column":4,"offset":18702},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set add and update","position":{"start":{"line":1102,"column":5,"offset":18708},"end":{"line":1102,"column":23,"offset":18726},"indent":[]}}],"position":{"start":{"line":1102,"column":1,"offset":18704},"end":{"line":1102,"column":23,"offset":18726},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using the ","position":{"start":{"line":1104,"column":1,"offset":18728},"end":{"line":1104,"column":11,"offset":18738},"indent":[]}},{"type":"inlineCode","value":"add()","position":{"start":{"line":1104,"column":11,"offset":18738},"end":{"line":1104,"column":18,"offset":18745},"indent":[]}},{"type":"text","value":" method we can add a single element to the set.","position":{"start":{"line":1104,"column":18,"offset":18745},"end":{"line":1104,"column":65,"offset":18792},"indent":[]}}],"position":{"start":{"line":1104,"column":1,"offset":18728},"end":{"line":1104,"column":65,"offset":18792},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.add(4)\ns","position":{"start":{"line":1106,"column":1,"offset":18794},"end":{"line":1110,"column":4,"offset":18832},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And with ","position":{"start":{"line":1112,"column":1,"offset":18834},"end":{"line":1112,"column":10,"offset":18843},"indent":[]}},{"type":"inlineCode","value":"update()","position":{"start":{"line":1112,"column":10,"offset":18843},"end":{"line":1112,"column":20,"offset":18853},"indent":[]}},{"type":"text","value":", multiple ones .","position":{"start":{"line":1112,"column":20,"offset":18853},"end":{"line":1112,"column":37,"offset":18870},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":18834},"end":{"line":1112,"column":37,"offset":18870},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.update([2, 3, 4, 5, 6])\ns  # remember, sets automatically remove duplicates","position":{"start":{"line":1114,"column":1,"offset":18872},"end":{"line":1118,"column":4,"offset":18977},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set remove and discard","position":{"start":{"line":1120,"column":5,"offset":18983},"end":{"line":1120,"column":27,"offset":19005},"indent":[]}}],"position":{"start":{"line":1120,"column":1,"offset":18979},"end":{"line":1120,"column":27,"offset":19005},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Both methods will remove an element from the set, but ","position":{"start":{"line":1122,"column":1,"offset":19007},"end":{"line":1122,"column":55,"offset":19061},"indent":[]}},{"type":"inlineCode","value":"remove()","position":{"start":{"line":1122,"column":55,"offset":19061},"end":{"line":1122,"column":65,"offset":19071},"indent":[]}},{"type":"text","value":" will raise a ","position":{"start":{"line":1122,"column":65,"offset":19071},"end":{"line":1122,"column":79,"offset":19085},"indent":[]}},{"type":"inlineCode","value":"key error","position":{"start":{"line":1122,"column":79,"offset":19085},"end":{"line":1122,"column":90,"offset":19096},"indent":[]}},{"type":"text","value":" if the value doesn't exist.","position":{"start":{"line":1122,"column":90,"offset":19096},"end":{"line":1122,"column":118,"offset":19124},"indent":[]}}],"position":{"start":{"line":1122,"column":1,"offset":19007},"end":{"line":1122,"column":118,"offset":19124},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.remove(3)\ns","position":{"start":{"line":1124,"column":1,"offset":19126},"end":{"line":1128,"column":4,"offset":19167},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"s.remove(3)","position":{"start":{"line":1130,"column":1,"offset":19169},"end":{"line":1132,"column":4,"offset":19194},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"discard()","position":{"start":{"line":1134,"column":1,"offset":19196},"end":{"line":1134,"column":12,"offset":19207},"indent":[]}},{"type":"text","value":" won't raise any errors.","position":{"start":{"line":1134,"column":12,"offset":19207},"end":{"line":1134,"column":36,"offset":19231},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":19196},"end":{"line":1134,"column":36,"offset":19231},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.discard(3)\ns","position":{"start":{"line":1136,"column":1,"offset":19233},"end":{"line":1140,"column":4,"offset":19275},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"s.discard(3)","position":{"start":{"line":1142,"column":1,"offset":19277},"end":{"line":1144,"column":4,"offset":19303},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set union","position":{"start":{"line":1146,"column":5,"offset":19309},"end":{"line":1146,"column":14,"offset":19318},"indent":[]}}],"position":{"start":{"line":1146,"column":1,"offset":19305},"end":{"line":1146,"column":14,"offset":19318},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"union()","position":{"start":{"line":1148,"column":1,"offset":19320},"end":{"line":1148,"column":10,"offset":19329},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1148,"column":10,"offset":19329},"end":{"line":1148,"column":14,"offset":19333},"indent":[]}},{"type":"inlineCode","value":"|","position":{"start":{"line":1148,"column":14,"offset":19333},"end":{"line":1148,"column":17,"offset":19336},"indent":[]}},{"type":"text","value":" will create a new set that contains all the elements from the sets provided.","position":{"start":{"line":1148,"column":17,"offset":19336},"end":{"line":1148,"column":94,"offset":19413},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":19320},"end":{"line":1148,"column":94,"offset":19413},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {3, 4, 5}\ns1.union(s2)  # or 's1 | s2'","position":{"start":{"line":1150,"column":1,"offset":19415},"end":{"line":1154,"column":4,"offset":19487},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set intersection","position":{"start":{"line":1156,"column":5,"offset":19493},"end":{"line":1156,"column":21,"offset":19509},"indent":[]}}],"position":{"start":{"line":1156,"column":1,"offset":19489},"end":{"line":1156,"column":21,"offset":19509},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"intersection","position":{"start":{"line":1158,"column":1,"offset":19511},"end":{"line":1158,"column":15,"offset":19525},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1158,"column":15,"offset":19525},"end":{"line":1158,"column":19,"offset":19529},"indent":[]}},{"type":"inlineCode","value":"&","position":{"start":{"line":1158,"column":19,"offset":19529},"end":{"line":1158,"column":22,"offset":19532},"indent":[]}},{"type":"text","value":" will return a set containing only the elements that are common to all of them.","position":{"start":{"line":1158,"column":22,"offset":19532},"end":{"line":1158,"column":101,"offset":19611},"indent":[]}}],"position":{"start":{"line":1158,"column":1,"offset":19511},"end":{"line":1158,"column":101,"offset":19611},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns3 = {3, 4, 5}\ns1.intersection(s2, s3)  # or 's1 & s2 & s3'","position":{"start":{"line":1160,"column":1,"offset":19613},"end":{"line":1165,"column":4,"offset":19716},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set difference","position":{"start":{"line":1167,"column":5,"offset":19722},"end":{"line":1167,"column":19,"offset":19736},"indent":[]}}],"position":{"start":{"line":1167,"column":1,"offset":19718},"end":{"line":1167,"column":19,"offset":19736},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"difference","position":{"start":{"line":1169,"column":1,"offset":19738},"end":{"line":1169,"column":13,"offset":19750},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1169,"column":13,"offset":19750},"end":{"line":1169,"column":17,"offset":19754},"indent":[]}},{"type":"inlineCode","value":"-","position":{"start":{"line":1169,"column":17,"offset":19754},"end":{"line":1169,"column":20,"offset":19757},"indent":[]}},{"type":"text","value":" will return only the elements that are in one of the sets.","position":{"start":{"line":1169,"column":20,"offset":19757},"end":{"line":1169,"column":79,"offset":19816},"indent":[]}}],"position":{"start":{"line":1169,"column":1,"offset":19738},"end":{"line":1169,"column":79,"offset":19816},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns1.difference(s2)  # or 's1 - s2'","position":{"start":{"line":1171,"column":1,"offset":19818},"end":{"line":1175,"column":4,"offset":19895},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set symetric_difference","position":{"start":{"line":1177,"column":5,"offset":19901},"end":{"line":1177,"column":28,"offset":19924},"indent":[]}}],"position":{"start":{"line":1177,"column":1,"offset":19897},"end":{"line":1177,"column":28,"offset":19924},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"symetric_difference","position":{"start":{"line":1179,"column":1,"offset":19926},"end":{"line":1179,"column":22,"offset":19947},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1179,"column":22,"offset":19947},"end":{"line":1179,"column":26,"offset":19951},"indent":[]}},{"type":"inlineCode","value":"^","position":{"start":{"line":1179,"column":26,"offset":19951},"end":{"line":1179,"column":29,"offset":19954},"indent":[]}},{"type":"text","value":" will return all the elements that are not common between them.","position":{"start":{"line":1179,"column":29,"offset":19954},"end":{"line":1179,"column":92,"offset":20017},"indent":[]}}],"position":{"start":{"line":1179,"column":1,"offset":19926},"end":{"line":1179,"column":92,"offset":20017},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns1.symmetric_difference(s2)  # or 's1 ^ s2'","position":{"start":{"line":1181,"column":1,"offset":20019},"end":{"line":1185,"column":4,"offset":20106},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"itertools Module","position":{"start":{"line":1187,"column":4,"offset":20111},"end":{"line":1187,"column":20,"offset":20127},"indent":[]}}],"position":{"start":{"line":1187,"column":1,"offset":20108},"end":{"line":1187,"column":20,"offset":20127},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1189,"column":1,"offset":20129},"end":{"line":1189,"column":5,"offset":20133},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"itertools","position":{"start":{"line":1189,"column":6,"offset":20134},"end":{"line":1189,"column":15,"offset":20143},"indent":[]}}],"position":{"start":{"line":1189,"column":5,"offset":20133},"end":{"line":1189,"column":16,"offset":20144},"indent":[]}},{"type":"text","value":" module is a collection of tools intented to be fast and use memory efficiently when handling iterators (like ","position":{"start":{"line":1189,"column":16,"offset":20144},"end":{"line":1189,"column":126,"offset":20254},"indent":[]}},{"type":"link","title":null,"url":"#lists","children":[{"type":"text","value":"lists","position":{"start":{"line":1189,"column":127,"offset":20255},"end":{"line":1189,"column":132,"offset":20260},"indent":[]}}],"position":{"start":{"line":1189,"column":126,"offset":20254},"end":{"line":1189,"column":141,"offset":20269},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1189,"column":141,"offset":20269},"end":{"line":1189,"column":145,"offset":20273},"indent":[]}},{"type":"link","title":null,"url":"#dictionaries-and-structuring-data","children":[{"type":"text","value":"dictionaries","position":{"start":{"line":1189,"column":146,"offset":20274},"end":{"line":1189,"column":158,"offset":20286},"indent":[]}}],"position":{"start":{"line":1189,"column":145,"offset":20273},"end":{"line":1189,"column":195,"offset":20323},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":1189,"column":195,"offset":20323},"end":{"line":1189,"column":197,"offset":20325},"indent":[]}}],"position":{"start":{"line":1189,"column":1,"offset":20129},"end":{"line":1189,"column":197,"offset":20325},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the official ","position":{"start":{"line":1191,"column":1,"offset":20327},"end":{"line":1191,"column":19,"offset":20345},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/itertools.html","children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1191,"column":20,"offset":20346},"end":{"line":1191,"column":44,"offset":20370},"indent":[]}}],"position":{"start":{"line":1191,"column":19,"offset":20345},"end":{"line":1191,"column":95,"offset":20421},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":1191,"column":95,"offset":20421},"end":{"line":1191,"column":96,"offset":20422},"indent":[]}}],"position":{"start":{"line":1191,"column":1,"offset":20327},"end":{"line":1191,"column":96,"offset":20422},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an \"iterator algebra\" making it possible to construct specialized tools succinctly and efficiently in pure Python.","position":{"start":{"line":1193,"column":3,"offset":20426},"end":{"line":1193,"column":253,"offset":20676},"indent":[]}}],"position":{"start":{"line":1193,"column":3,"offset":20426},"end":{"line":1193,"column":253,"offset":20676},"indent":[]}}],"position":{"start":{"line":1193,"column":1,"offset":20424},"end":{"line":1193,"column":253,"offset":20676},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1195,"column":1,"offset":20678},"end":{"line":1195,"column":5,"offset":20682},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"itertools","position":{"start":{"line":1195,"column":6,"offset":20683},"end":{"line":1195,"column":15,"offset":20692},"indent":[]}}],"position":{"start":{"line":1195,"column":5,"offset":20682},"end":{"line":1195,"column":16,"offset":20693},"indent":[]}},{"type":"text","value":" module comes in the standard library and must be imported.","position":{"start":{"line":1195,"column":16,"offset":20693},"end":{"line":1195,"column":75,"offset":20752},"indent":[]}}],"position":{"start":{"line":1195,"column":1,"offset":20678},"end":{"line":1195,"column":75,"offset":20752},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1197,"column":1,"offset":20754},"end":{"line":1197,"column":5,"offset":20758},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/operator.html","children":[{"type":"text","value":"operator","position":{"start":{"line":1197,"column":6,"offset":20759},"end":{"line":1197,"column":14,"offset":20767},"indent":[]}}],"position":{"start":{"line":1197,"column":5,"offset":20758},"end":{"line":1197,"column":64,"offset":20817},"indent":[]}},{"type":"text","value":" module will also be used. This module is not necessary when using itertools, but needed for some of the examples below.","position":{"start":{"line":1197,"column":64,"offset":20817},"end":{"line":1197,"column":184,"offset":20937},"indent":[]}}],"position":{"start":{"line":1197,"column":1,"offset":20754},"end":{"line":1197,"column":184,"offset":20937},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import itertools\nimport operator","position":{"start":{"line":1199,"column":1,"offset":20939},"end":{"line":1202,"column":4,"offset":20985},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"accumulate","position":{"start":{"line":1204,"column":5,"offset":20991},"end":{"line":1204,"column":15,"offset":21001},"indent":[]}}],"position":{"start":{"line":1204,"column":1,"offset":20987},"end":{"line":1204,"column":15,"offset":21001},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that returns the results of a function.","position":{"start":{"line":1206,"column":1,"offset":21003},"end":{"line":1206,"column":58,"offset":21060},"indent":[]}}],"position":{"start":{"line":1206,"column":1,"offset":21003},"end":{"line":1206,"column":58,"offset":21060},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.accumulate(iterable[, func])","position":{"start":{"line":1208,"column":1,"offset":21062},"end":{"line":1210,"column":4,"offset":21114},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1212,"column":1,"offset":21116},"end":{"line":1212,"column":9,"offset":21124},"indent":[]}}],"position":{"start":{"line":1212,"column":1,"offset":21116},"end":{"line":1212,"column":9,"offset":21124},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5]\nresult = itertools.accumulate(data, operator.mul)\nfor each in result:\n   print(each)","position":{"start":{"line":1214,"column":1,"offset":21126},"end":{"line":1219,"column":4,"offset":21247},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The operator.mul takes two numbers and multiplies them:","position":{"start":{"line":1221,"column":1,"offset":21249},"end":{"line":1221,"column":56,"offset":21304},"indent":[]}}],"position":{"start":{"line":1221,"column":1,"offset":21249},"end":{"line":1221,"column":56,"offset":21304},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(1, 2)","position":{"start":{"line":1223,"column":1,"offset":21306},"end":{"line":1225,"column":4,"offset":21338},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(2, 3)","position":{"start":{"line":1227,"column":1,"offset":21340},"end":{"line":1229,"column":4,"offset":21372},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(6, 4)","position":{"start":{"line":1231,"column":1,"offset":21374},"end":{"line":1233,"column":4,"offset":21406},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(24, 5)","position":{"start":{"line":1235,"column":1,"offset":21408},"end":{"line":1237,"column":4,"offset":21441},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Passing a function is optional:","position":{"start":{"line":1239,"column":1,"offset":21443},"end":{"line":1239,"column":32,"offset":21474},"indent":[]}}],"position":{"start":{"line":1239,"column":1,"offset":21443},"end":{"line":1239,"column":32,"offset":21474},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [5, 2, 6, 4, 5, 9, 1]\nresult = itertools.accumulate(data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1241,"column":1,"offset":21476},"end":{"line":1247,"column":4,"offset":21590},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If no function is designated the items will be summed:","position":{"start":{"line":1249,"column":1,"offset":21592},"end":{"line":1249,"column":55,"offset":21646},"indent":[]}}],"position":{"start":{"line":1249,"column":1,"offset":21592},"end":{"line":1249,"column":55,"offset":21646},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"5\n5 + 2 = 7\n7 + 6 = 13\n13 + 4 = 17\n17 + 5 = 22\n22 + 9 = 31\n31 + 1 = 32","position":{"start":{"line":1251,"column":1,"offset":21648},"end":{"line":1259,"column":4,"offset":21732},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"combinations","position":{"start":{"line":1261,"column":5,"offset":21738},"end":{"line":1261,"column":17,"offset":21750},"indent":[]}}],"position":{"start":{"line":1261,"column":1,"offset":21734},"end":{"line":1261,"column":17,"offset":21750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Takes an iterable and a integer. This will create all the unique combination that have r members.","position":{"start":{"line":1263,"column":1,"offset":21752},"end":{"line":1263,"column":98,"offset":21849},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":21752},"end":{"line":1263,"column":98,"offset":21849},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.combinations(iterable, r)","position":{"start":{"line":1265,"column":1,"offset":21851},"end":{"line":1267,"column":4,"offset":21900},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1269,"column":1,"offset":21902},"end":{"line":1269,"column":9,"offset":21910},"indent":[]}}],"position":{"start":{"line":1269,"column":1,"offset":21902},"end":{"line":1269,"column":9,"offset":21910},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square',]\nresult = itertools.combinations(shapes, 2)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1271,"column":1,"offset":21912},"end":{"line":1277,"column":4,"offset":22047},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"combinations","position":{"start":{"line":1279,"column":5,"offset":22053},"end":{"line":1279,"column":17,"offset":22065},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"with","position":{"start":{"line":1279,"column":18,"offset":22066},"end":{"line":1279,"column":22,"offset":22070},"indent":[]}}],"position":{"start":{"line":1279,"column":17,"offset":22065},"end":{"line":1279,"column":23,"offset":22071},"indent":[]}},{"type":"text","value":"replacement","position":{"start":{"line":1279,"column":23,"offset":22071},"end":{"line":1279,"column":34,"offset":22082},"indent":[]}}],"position":{"start":{"line":1279,"column":1,"offset":22049},"end":{"line":1279,"column":34,"offset":22082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like combinations(), but allows individual elements to be repeated more than once.","position":{"start":{"line":1281,"column":1,"offset":22084},"end":{"line":1281,"column":88,"offset":22171},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":22084},"end":{"line":1281,"column":88,"offset":22171},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.combinations_with_replacement(iterable, r)","position":{"start":{"line":1283,"column":1,"offset":22173},"end":{"line":1285,"column":4,"offset":22239},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1287,"column":1,"offset":22241},"end":{"line":1287,"column":9,"offset":22249},"indent":[]}}],"position":{"start":{"line":1287,"column":1,"offset":22241},"end":{"line":1287,"column":9,"offset":22249},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square']\nresult = itertools.combinations_with_replacement(shapes, 2)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1289,"column":1,"offset":22251},"end":{"line":1295,"column":4,"offset":22402},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"count","position":{"start":{"line":1297,"column":5,"offset":22408},"end":{"line":1297,"column":10,"offset":22413},"indent":[]}}],"position":{"start":{"line":1297,"column":1,"offset":22404},"end":{"line":1297,"column":10,"offset":22413},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that returns evenly spaced values starting with number start.","position":{"start":{"line":1299,"column":1,"offset":22415},"end":{"line":1299,"column":80,"offset":22494},"indent":[]}}],"position":{"start":{"line":1299,"column":1,"offset":22415},"end":{"line":1299,"column":80,"offset":22494},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.count(start=0, step=1)","position":{"start":{"line":1301,"column":1,"offset":22496},"end":{"line":1303,"column":4,"offset":22542},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1305,"column":1,"offset":22544},"end":{"line":1305,"column":9,"offset":22552},"indent":[]}}],"position":{"start":{"line":1305,"column":1,"offset":22544},"end":{"line":1305,"column":9,"offset":22552},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in itertools.count(10,3):\n   print(i)\n   if i > 20:\n       break","position":{"start":{"line":1307,"column":1,"offset":22554},"end":{"line":1312,"column":4,"offset":22638},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"cycle","position":{"start":{"line":1314,"column":5,"offset":22644},"end":{"line":1314,"column":10,"offset":22649},"indent":[]}}],"position":{"start":{"line":1314,"column":1,"offset":22640},"end":{"line":1314,"column":10,"offset":22649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function cycles through an iterator endlessly.","position":{"start":{"line":1316,"column":1,"offset":22651},"end":{"line":1316,"column":52,"offset":22702},"indent":[]}}],"position":{"start":{"line":1316,"column":1,"offset":22651},"end":{"line":1316,"column":52,"offset":22702},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.cycle(iterable)","position":{"start":{"line":1318,"column":1,"offset":22704},"end":{"line":1320,"column":4,"offset":22743},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1322,"column":1,"offset":22745},"end":{"line":1322,"column":9,"offset":22753},"indent":[]}}],"position":{"start":{"line":1322,"column":1,"offset":22745},"end":{"line":1322,"column":9,"offset":22753},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue', 'violet']\nfor color in itertools.cycle(colors):\n   print(color)","position":{"start":{"line":1324,"column":1,"offset":22755},"end":{"line":1328,"column":4,"offset":22886},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When reached the end of the iterable it start over again from the beginning.","position":{"start":{"line":1330,"column":1,"offset":22888},"end":{"line":1330,"column":77,"offset":22964},"indent":[]}}],"position":{"start":{"line":1330,"column":1,"offset":22888},"end":{"line":1330,"column":77,"offset":22964},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"chain","position":{"start":{"line":1332,"column":5,"offset":22970},"end":{"line":1332,"column":10,"offset":22975},"indent":[]}}],"position":{"start":{"line":1332,"column":1,"offset":22966},"end":{"line":1332,"column":10,"offset":22975},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Take a series of iterables and return them as one long iterable.","position":{"start":{"line":1334,"column":1,"offset":22977},"end":{"line":1334,"column":65,"offset":23041},"indent":[]}}],"position":{"start":{"line":1334,"column":1,"offset":22977},"end":{"line":1334,"column":65,"offset":23041},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.chain(*iterables)","position":{"start":{"line":1336,"column":1,"offset":23043},"end":{"line":1338,"column":4,"offset":23084},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1340,"column":1,"offset":23086},"end":{"line":1340,"column":9,"offset":23094},"indent":[]}}],"position":{"start":{"line":1340,"column":1,"offset":23086},"end":{"line":1340,"column":9,"offset":23094},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nshapes = ['circle', 'triangle', 'square', 'pentagon']\nresult = itertools.chain(colors, shapes)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1342,"column":1,"offset":23096},"end":{"line":1349,"column":4,"offset":23294},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"compress","position":{"start":{"line":1351,"column":5,"offset":23300},"end":{"line":1351,"column":13,"offset":23308},"indent":[]}}],"position":{"start":{"line":1351,"column":1,"offset":23296},"end":{"line":1351,"column":13,"offset":23308},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Filters one iterable with another.","position":{"start":{"line":1353,"column":1,"offset":23310},"end":{"line":1353,"column":35,"offset":23344},"indent":[]}}],"position":{"start":{"line":1353,"column":1,"offset":23310},"end":{"line":1353,"column":35,"offset":23344},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.compress(data, selectors)","position":{"start":{"line":1355,"column":1,"offset":23346},"end":{"line":1357,"column":4,"offset":23395},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1359,"column":1,"offset":23397},"end":{"line":1359,"column":9,"offset":23405},"indent":[]}}],"position":{"start":{"line":1359,"column":1,"offset":23397},"end":{"line":1359,"column":9,"offset":23405},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square', 'pentagon']\nselections = [True, False, True, False]\nresult = itertools.compress(shapes, selections)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1361,"column":1,"offset":23407},"end":{"line":1368,"column":4,"offset":23598},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"dropwhile","position":{"start":{"line":1370,"column":5,"offset":23604},"end":{"line":1370,"column":14,"offset":23613},"indent":[]}}],"position":{"start":{"line":1370,"column":1,"offset":23600},"end":{"line":1370,"column":14,"offset":23613},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element.","position":{"start":{"line":1372,"column":1,"offset":23615},"end":{"line":1372,"column":124,"offset":23738},"indent":[]}}],"position":{"start":{"line":1372,"column":1,"offset":23615},"end":{"line":1372,"column":124,"offset":23738},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.dropwhile(predicate, iterable)","position":{"start":{"line":1374,"column":1,"offset":23740},"end":{"line":1376,"column":4,"offset":23794},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1378,"column":1,"offset":23796},"end":{"line":1378,"column":9,"offset":23804},"indent":[]}}],"position":{"start":{"line":1378,"column":1,"offset":23796},"end":{"line":1378,"column":9,"offset":23804},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]\nresult = itertools.dropwhile(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1380,"column":1,"offset":23806},"end":{"line":1386,"column":4,"offset":23947},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"filterfalse","position":{"start":{"line":1388,"column":5,"offset":23953},"end":{"line":1388,"column":16,"offset":23964},"indent":[]}}],"position":{"start":{"line":1388,"column":1,"offset":23949},"end":{"line":1388,"column":16,"offset":23964},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that filters elements from iterable returning only those for which the predicate is False.","position":{"start":{"line":1390,"column":1,"offset":23966},"end":{"line":1390,"column":109,"offset":24074},"indent":[]}}],"position":{"start":{"line":1390,"column":1,"offset":23966},"end":{"line":1390,"column":109,"offset":24074},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.filterfalse(predicate, iterable)","position":{"start":{"line":1392,"column":1,"offset":24076},"end":{"line":1394,"column":4,"offset":24132},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1396,"column":1,"offset":24134},"end":{"line":1396,"column":9,"offset":24142},"indent":[]}}],"position":{"start":{"line":1396,"column":1,"offset":24134},"end":{"line":1396,"column":9,"offset":24142},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nresult = itertools.filterfalse(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1398,"column":1,"offset":24144},"end":{"line":1404,"column":4,"offset":24284},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"groupby","position":{"start":{"line":1406,"column":5,"offset":24290},"end":{"line":1406,"column":12,"offset":24297},"indent":[]}}],"position":{"start":{"line":1406,"column":1,"offset":24286},"end":{"line":1406,"column":12,"offset":24297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Simply put, this function groups things together.","position":{"start":{"line":1408,"column":1,"offset":24299},"end":{"line":1408,"column":50,"offset":24348},"indent":[]}}],"position":{"start":{"line":1408,"column":1,"offset":24299},"end":{"line":1408,"column":50,"offset":24348},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.groupby(iterable, key=None)","position":{"start":{"line":1410,"column":1,"offset":24350},"end":{"line":1412,"column":4,"offset":24401},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1414,"column":1,"offset":24403},"end":{"line":1414,"column":9,"offset":24411},"indent":[]}}],"position":{"start":{"line":1414,"column":1,"offset":24403},"end":{"line":1414,"column":9,"offset":24411},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"robots = [{\n    'name': 'blaster',\n    'faction': 'autobot'\n}, {\n    'name': 'galvatron',\n    'faction': 'decepticon'\n}, {\n    'name': 'jazz',\n    'faction': 'autobot'\n}, {\n    'name': 'metroplex',\n    'faction': 'autobot'\n}, {\n    'name': 'megatron',\n    'faction': 'decepticon'\n}, {\n    'name': 'starcream',\n    'faction': 'decepticon'\n}]\n\nfor key, group in itertools.groupby(robots, key=lambda x: x['faction']):\n   print(key)\n   print(list(group))","position":{"start":{"line":1416,"column":1,"offset":24413},"end":{"line":1440,"column":4,"offset":24877},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"islice","position":{"start":{"line":1442,"column":5,"offset":24883},"end":{"line":1442,"column":11,"offset":24889},"indent":[]}}],"position":{"start":{"line":1442,"column":1,"offset":24879},"end":{"line":1442,"column":11,"offset":24889},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function is very much like slices. This allows you to cut out a piece of an iterable.","position":{"start":{"line":1444,"column":1,"offset":24891},"end":{"line":1444,"column":91,"offset":24981},"indent":[]}}],"position":{"start":{"line":1444,"column":1,"offset":24891},"end":{"line":1444,"column":91,"offset":24981},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.islice(iterable, start, stop[, step])","position":{"start":{"line":1446,"column":1,"offset":24983},"end":{"line":1448,"column":4,"offset":25044},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1450,"column":1,"offset":25046},"end":{"line":1450,"column":9,"offset":25054},"indent":[]}}],"position":{"start":{"line":1450,"column":1,"offset":25046},"end":{"line":1450,"column":9,"offset":25054},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue',]\nfew_colors = itertools.islice(colors, 2)\n\nfor each in few_colors:\n   print(each)","position":{"start":{"line":1452,"column":1,"offset":25056},"end":{"line":1458,"column":4,"offset":25205},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"permutations","position":{"start":{"line":1460,"column":5,"offset":25211},"end":{"line":1460,"column":17,"offset":25223},"indent":[]}}],"position":{"start":{"line":1460,"column":1,"offset":25207},"end":{"line":1460,"column":17,"offset":25223},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.permutations(iterable, r=None)","position":{"start":{"line":1462,"column":1,"offset":25225},"end":{"line":1464,"column":4,"offset":25279},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1466,"column":1,"offset":25281},"end":{"line":1466,"column":9,"offset":25289},"indent":[]}}],"position":{"start":{"line":1466,"column":1,"offset":25281},"end":{"line":1466,"column":9,"offset":25289},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"alpha_data = ['a', 'b', 'c']\nresult = itertools.permutations(alpha_data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1468,"column":1,"offset":25291},"end":{"line":1474,"column":4,"offset":25413},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"product","position":{"start":{"line":1476,"column":5,"offset":25419},"end":{"line":1476,"column":12,"offset":25426},"indent":[]}}],"position":{"start":{"line":1476,"column":1,"offset":25415},"end":{"line":1476,"column":12,"offset":25426},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Creates the cartesian products from a series of iterables.","position":{"start":{"line":1478,"column":1,"offset":25428},"end":{"line":1478,"column":59,"offset":25486},"indent":[]}}],"position":{"start":{"line":1478,"column":1,"offset":25428},"end":{"line":1478,"column":59,"offset":25486},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"num_data = [1, 2, 3]\nalpha_data = ['a', 'b', 'c']\nresult = itertools.product(num_data, alpha_data)\n\nfor each in result:\n    print(each)","position":{"start":{"line":1480,"column":1,"offset":25488},"end":{"line":1487,"column":4,"offset":25637},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"repeat","position":{"start":{"line":1489,"column":5,"offset":25643},"end":{"line":1489,"column":11,"offset":25649},"indent":[]}}],"position":{"start":{"line":1489,"column":1,"offset":25639},"end":{"line":1489,"column":11,"offset":25649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function will repeat an object over and over again. Unless, there is a times argument.","position":{"start":{"line":1491,"column":1,"offset":25651},"end":{"line":1491,"column":92,"offset":25742},"indent":[]}}],"position":{"start":{"line":1491,"column":1,"offset":25651},"end":{"line":1491,"column":92,"offset":25742},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.repeat(object[, times])","position":{"start":{"line":1493,"column":1,"offset":25744},"end":{"line":1495,"column":4,"offset":25791},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1497,"column":1,"offset":25793},"end":{"line":1497,"column":9,"offset":25801},"indent":[]}}],"position":{"start":{"line":1497,"column":1,"offset":25793},"end":{"line":1497,"column":9,"offset":25801},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in itertools.repeat(\"spam\", 3):\n    print(i)","position":{"start":{"line":1499,"column":1,"offset":25803},"end":{"line":1502,"column":4,"offset":25867},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"starmap","position":{"start":{"line":1504,"column":5,"offset":25873},"end":{"line":1504,"column":12,"offset":25880},"indent":[]}}],"position":{"start":{"line":1504,"column":1,"offset":25869},"end":{"line":1504,"column":12,"offset":25880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that computes the function using arguments obtained from the iterable.","position":{"start":{"line":1506,"column":1,"offset":25882},"end":{"line":1506,"column":89,"offset":25970},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":25882},"end":{"line":1506,"column":89,"offset":25970},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.starmap(function, iterable)","position":{"start":{"line":1508,"column":1,"offset":25972},"end":{"line":1510,"column":4,"offset":26023},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1512,"column":1,"offset":26025},"end":{"line":1512,"column":9,"offset":26033},"indent":[]}}],"position":{"start":{"line":1512,"column":1,"offset":26025},"end":{"line":1512,"column":9,"offset":26033},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [(2, 6), (8, 4), (7, 3)]\nresult = itertools.starmap(operator.mul, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1514,"column":1,"offset":26035},"end":{"line":1520,"column":4,"offset":26163},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"takewhile","position":{"start":{"line":1522,"column":5,"offset":26169},"end":{"line":1522,"column":14,"offset":26178},"indent":[]}}],"position":{"start":{"line":1522,"column":1,"offset":26165},"end":{"line":1522,"column":14,"offset":26178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The opposite of dropwhile(). Makes an iterator and returns elements from the iterable as long as the predicate is true.","position":{"start":{"line":1524,"column":1,"offset":26180},"end":{"line":1524,"column":120,"offset":26299},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":26180},"end":{"line":1524,"column":120,"offset":26299},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.takewhile(predicate, iterable)","position":{"start":{"line":1526,"column":1,"offset":26301},"end":{"line":1528,"column":4,"offset":26355},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1530,"column":1,"offset":26357},"end":{"line":1530,"column":9,"offset":26365},"indent":[]}}],"position":{"start":{"line":1530,"column":1,"offset":26357},"end":{"line":1530,"column":9,"offset":26365},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]\nresult = itertools.takewhile(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1532,"column":1,"offset":26367},"end":{"line":1538,"column":4,"offset":26508},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"tee","position":{"start":{"line":1540,"column":5,"offset":26514},"end":{"line":1540,"column":8,"offset":26517},"indent":[]}}],"position":{"start":{"line":1540,"column":1,"offset":26510},"end":{"line":1540,"column":8,"offset":26517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Return n independent iterators from a single iterable.","position":{"start":{"line":1542,"column":1,"offset":26519},"end":{"line":1542,"column":55,"offset":26573},"indent":[]}}],"position":{"start":{"line":1542,"column":1,"offset":26519},"end":{"line":1542,"column":55,"offset":26573},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.tee(iterable, n=2)","position":{"start":{"line":1544,"column":1,"offset":26575},"end":{"line":1546,"column":4,"offset":26617},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1548,"column":1,"offset":26619},"end":{"line":1548,"column":9,"offset":26627},"indent":[]}}],"position":{"start":{"line":1548,"column":1,"offset":26619},"end":{"line":1548,"column":9,"offset":26627},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nalpha_colors, beta_colors = itertools.tee(colors)\n\nfor each in alpha_colors:\n   print(each)","position":{"start":{"line":1550,"column":1,"offset":26629},"end":{"line":1556,"column":4,"offset":26788},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nalpha_colors, beta_colors = itertools.tee(colors)\n\nfor each in beta_colors:\n   print(each)","position":{"start":{"line":1558,"column":1,"offset":26790},"end":{"line":1564,"column":4,"offset":26948},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"zip_longest","position":{"start":{"line":1566,"column":5,"offset":26954},"end":{"line":1566,"column":16,"offset":26965},"indent":[]}}],"position":{"start":{"line":1566,"column":1,"offset":26950},"end":{"line":1566,"column":16,"offset":26965},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with fillvalue. Iteration continues until the longest iterable is exhausted.","position":{"start":{"line":1568,"column":1,"offset":26967},"end":{"line":1568,"column":216,"offset":27182},"indent":[]}}],"position":{"start":{"line":1568,"column":1,"offset":26967},"end":{"line":1568,"column":216,"offset":27182},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.zip_longest(*iterables, fillvalue=None)","position":{"start":{"line":1570,"column":1,"offset":27184},"end":{"line":1572,"column":4,"offset":27247},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1574,"column":1,"offset":27249},"end":{"line":1574,"column":9,"offset":27257},"indent":[]}}],"position":{"start":{"line":1574,"column":1,"offset":27249},"end":{"line":1574,"column":9,"offset":27257},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue',]\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,]\n\nfor each in itertools.zip_longest(colors, data, fillvalue=None):\n   print(each)","position":{"start":{"line":1576,"column":1,"offset":27259},"end":{"line":1582,"column":4,"offset":27448},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Comprehensions","position":{"start":{"line":1584,"column":4,"offset":27453},"end":{"line":1584,"column":18,"offset":27467},"indent":[]}}],"position":{"start":{"line":1584,"column":1,"offset":27450},"end":{"line":1584,"column":18,"offset":27467},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"List comprehension","position":{"start":{"line":1586,"column":5,"offset":27473},"end":{"line":1586,"column":23,"offset":27491},"indent":[]}}],"position":{"start":{"line":1586,"column":1,"offset":27469},"end":{"line":1586,"column":23,"offset":27491},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 3, 5, 7, 9, 11]\n[i - 1 for i in a]","position":{"start":{"line":1588,"column":1,"offset":27493},"end":{"line":1591,"column":4,"offset":27549},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Set comprehension","position":{"start":{"line":1593,"column":5,"offset":27555},"end":{"line":1593,"column":22,"offset":27572},"indent":[]}}],"position":{"start":{"line":1593,"column":1,"offset":27551},"end":{"line":1593,"column":22,"offset":27572},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"b = {\"abc\", \"def\"}\n{s.upper() for s in b}","position":{"start":{"line":1595,"column":1,"offset":27574},"end":{"line":1598,"column":4,"offset":27629},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Dict comprehension","position":{"start":{"line":1600,"column":5,"offset":27635},"end":{"line":1600,"column":23,"offset":27653},"indent":[]}}],"position":{"start":{"line":1600,"column":1,"offset":27631},"end":{"line":1600,"column":23,"offset":27653},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"c = {'name': 'Pooka', 'age': 5}\n{v, k for k, v in c.items()}","position":{"start":{"line":1602,"column":1,"offset":27655},"end":{"line":1605,"column":4,"offset":27729},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A List comprehension can be generated from a dictionary:","position":{"start":{"line":1607,"column":1,"offset":27731},"end":{"line":1607,"column":57,"offset":27787},"indent":[]}}],"position":{"start":{"line":1607,"column":1,"offset":27731},"end":{"line":1607,"column":57,"offset":27787},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"c = {'name': 'Pooka', 'first_name': 'Oooka'}\n[\"{}:{}\".format(k.upper(), v.upper()) for k, v in c.items()]","position":{"start":{"line":1609,"column":1,"offset":27789},"end":{"line":1612,"column":4,"offset":27908},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Manipulating Strings","position":{"start":{"line":1614,"column":4,"offset":27913},"end":{"line":1614,"column":24,"offset":27933},"indent":[]}}],"position":{"start":{"line":1614,"column":1,"offset":27910},"end":{"line":1614,"column":24,"offset":27933},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Escape Characters","position":{"start":{"line":1616,"column":5,"offset":27939},"end":{"line":1616,"column":22,"offset":27956},"indent":[]}}],"position":{"start":{"line":1616,"column":1,"offset":27935},"end":{"line":1616,"column":22,"offset":27956},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Escape character","position":{"start":{"line":1618,"column":3,"offset":27960},"end":{"line":1618,"column":19,"offset":27976},"indent":[]}}],"position":{"start":{"line":1618,"column":3,"offset":27960},"end":{"line":1618,"column":19,"offset":27976},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Prints as","position":{"start":{"line":1618,"column":22,"offset":27979},"end":{"line":1618,"column":31,"offset":27988},"indent":[]}}],"position":{"start":{"line":1618,"column":22,"offset":27979},"end":{"line":1618,"column":42,"offset":27999},"indent":[]}}],"position":{"start":{"line":1618,"column":1,"offset":27958},"end":{"line":1618,"column":44,"offset":28001},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\'","position":{"start":{"line":1620,"column":3,"offset":28048},"end":{"line":1620,"column":7,"offset":28052},"indent":[]}}],"position":{"start":{"line":1620,"column":3,"offset":28048},"end":{"line":1620,"column":19,"offset":28064},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Single quote","position":{"start":{"line":1620,"column":22,"offset":28067},"end":{"line":1620,"column":34,"offset":28079},"indent":[]}}],"position":{"start":{"line":1620,"column":22,"offset":28067},"end":{"line":1620,"column":42,"offset":28087},"indent":[]}}],"position":{"start":{"line":1620,"column":1,"offset":28046},"end":{"line":1620,"column":44,"offset":28089},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\\"","position":{"start":{"line":1621,"column":3,"offset":28092},"end":{"line":1621,"column":7,"offset":28096},"indent":[]}}],"position":{"start":{"line":1621,"column":3,"offset":28092},"end":{"line":1621,"column":19,"offset":28108},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Double quote","position":{"start":{"line":1621,"column":22,"offset":28111},"end":{"line":1621,"column":34,"offset":28123},"indent":[]}}],"position":{"start":{"line":1621,"column":22,"offset":28111},"end":{"line":1621,"column":42,"offset":28131},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":28090},"end":{"line":1621,"column":44,"offset":28133},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\t","position":{"start":{"line":1622,"column":3,"offset":28136},"end":{"line":1622,"column":7,"offset":28140},"indent":[]}}],"position":{"start":{"line":1622,"column":3,"offset":28136},"end":{"line":1622,"column":19,"offset":28152},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Tab","position":{"start":{"line":1622,"column":22,"offset":28155},"end":{"line":1622,"column":25,"offset":28158},"indent":[]}}],"position":{"start":{"line":1622,"column":22,"offset":28155},"end":{"line":1622,"column":42,"offset":28175},"indent":[]}}],"position":{"start":{"line":1622,"column":1,"offset":28134},"end":{"line":1622,"column":44,"offset":28177},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\n","position":{"start":{"line":1623,"column":3,"offset":28180},"end":{"line":1623,"column":7,"offset":28184},"indent":[]}}],"position":{"start":{"line":1623,"column":3,"offset":28180},"end":{"line":1623,"column":19,"offset":28196},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Newline (line break)","position":{"start":{"line":1623,"column":22,"offset":28199},"end":{"line":1623,"column":42,"offset":28219},"indent":[]}}],"position":{"start":{"line":1623,"column":22,"offset":28199},"end":{"line":1623,"column":42,"offset":28219},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":28178},"end":{"line":1623,"column":44,"offset":28221},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\\\","position":{"start":{"line":1624,"column":3,"offset":28224},"end":{"line":1624,"column":7,"offset":28228},"indent":[]}}],"position":{"start":{"line":1624,"column":3,"offset":28224},"end":{"line":1624,"column":19,"offset":28240},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Backslash","position":{"start":{"line":1624,"column":22,"offset":28243},"end":{"line":1624,"column":31,"offset":28252},"indent":[]}}],"position":{"start":{"line":1624,"column":22,"offset":28243},"end":{"line":1624,"column":42,"offset":28263},"indent":[]}}],"position":{"start":{"line":1624,"column":1,"offset":28222},"end":{"line":1624,"column":44,"offset":28265},"indent":[]}}],"position":{"start":{"line":1618,"column":1,"offset":27958},"end":{"line":1624,"column":44,"offset":28265},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1626,"column":1,"offset":28267},"end":{"line":1626,"column":9,"offset":28275},"indent":[]}}],"position":{"start":{"line":1626,"column":1,"offset":28267},"end":{"line":1626,"column":9,"offset":28275},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print(\"Hello there!\\nHow are you?\\nI\\'m doing fine.\")\nHello there!\nHow are you?","position":{"start":{"line":1628,"column":1,"offset":28277},"end":{"line":1632,"column":4,"offset":28370},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Raw Strings","position":{"start":{"line":1634,"column":5,"offset":28376},"end":{"line":1634,"column":16,"offset":28387},"indent":[]}}],"position":{"start":{"line":1634,"column":1,"offset":28372},"end":{"line":1634,"column":16,"offset":28387},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A raw string completely ignores all escape characters and prints any backslash that appears in the string.","position":{"start":{"line":1636,"column":1,"offset":28389},"end":{"line":1636,"column":107,"offset":28495},"indent":[]}}],"position":{"start":{"line":1636,"column":1,"offset":28389},"end":{"line":1636,"column":107,"offset":28495},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print(r'That is Carol\\'s cat.')","position":{"start":{"line":1638,"column":1,"offset":28497},"end":{"line":1640,"column":4,"offset":28542},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: mostly used for regular expression definition (see ","position":{"start":{"line":1642,"column":1,"offset":28544},"end":{"line":1642,"column":58,"offset":28601},"indent":[]}},{"type":"inlineCode","value":"re","position":{"start":{"line":1642,"column":58,"offset":28601},"end":{"line":1642,"column":62,"offset":28605},"indent":[]}},{"type":"text","value":" package)","position":{"start":{"line":1642,"column":62,"offset":28605},"end":{"line":1642,"column":71,"offset":28614},"indent":[]}}],"position":{"start":{"line":1642,"column":1,"offset":28544},"end":{"line":1642,"column":71,"offset":28614},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Multiline Strings with Triple Quotes","position":{"start":{"line":1644,"column":5,"offset":28620},"end":{"line":1644,"column":41,"offset":28656},"indent":[]}}],"position":{"start":{"line":1644,"column":1,"offset":28616},"end":{"line":1644,"column":41,"offset":28656},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('''Dear Alice,\n\nEve's cat has been arrested for catnapping, cat burglary, and extortion.\n\nSincerely,\nBob''')","position":{"start":{"line":1646,"column":1,"offset":28658},"end":{"line":1653,"column":4,"offset":28786},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To keep a nicer flow in your code, you can use the ","position":{"start":{"line":1655,"column":1,"offset":28788},"end":{"line":1655,"column":52,"offset":28839},"indent":[]}},{"type":"inlineCode","value":"dedent","position":{"start":{"line":1655,"column":52,"offset":28839},"end":{"line":1655,"column":60,"offset":28847},"indent":[]}},{"type":"text","value":" function from the ","position":{"start":{"line":1655,"column":60,"offset":28847},"end":{"line":1655,"column":79,"offset":28866},"indent":[]}},{"type":"inlineCode","value":"textwrap","position":{"start":{"line":1655,"column":79,"offset":28866},"end":{"line":1655,"column":89,"offset":28876},"indent":[]}},{"type":"text","value":" standard package.","position":{"start":{"line":1655,"column":89,"offset":28876},"end":{"line":1655,"column":107,"offset":28894},"indent":[]}}],"position":{"start":{"line":1655,"column":1,"offset":28788},"end":{"line":1655,"column":107,"offset":28894},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from textwrap import dedent\n\ndef my_function():\n    print('''\n        Dear Alice,\n\n        Eve's cat has been arrested for catnapping, cat burglary, and extortion.\n\n        Sincerely,\n        Bob\n        ''').strip()","position":{"start":{"line":1657,"column":1,"offset":28896},"end":{"line":1669,"column":4,"offset":29126},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This generates the same string than before.","position":{"start":{"line":1671,"column":1,"offset":29128},"end":{"line":1671,"column":44,"offset":29171},"indent":[]}}],"position":{"start":{"line":1671,"column":1,"offset":29128},"end":{"line":1671,"column":44,"offset":29171},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Indexing and Slicing Strings","position":{"start":{"line":1673,"column":5,"offset":29177},"end":{"line":1673,"column":33,"offset":29205},"indent":[]}}],"position":{"start":{"line":1673,"column":1,"offset":29173},"end":{"line":1673,"column":33,"offset":29205},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"H   e   l   l   o       w   o   r   l   d    !\n0   1   2   3   4   5   6   7   8   9   10   11","position":{"start":{"line":1675,"column":1,"offset":29207},"end":{"line":1676,"column":52,"offset":29309},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam[0]","position":{"start":{"line":1678,"column":1,"offset":29311},"end":{"line":1681,"column":4,"offset":29354},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[4]","position":{"start":{"line":1683,"column":1,"offset":29356},"end":{"line":1685,"column":4,"offset":29377},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-1]","position":{"start":{"line":1687,"column":1,"offset":29379},"end":{"line":1689,"column":4,"offset":29401},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Slicing:","position":{"start":{"line":1691,"column":1,"offset":29403},"end":{"line":1691,"column":9,"offset":29411},"indent":[]}}],"position":{"start":{"line":1691,"column":1,"offset":29403},"end":{"line":1691,"column":9,"offset":29411},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam[0:5]","position":{"start":{"line":1693,"column":1,"offset":29413},"end":{"line":1696,"column":4,"offset":29437},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:5]","position":{"start":{"line":1698,"column":1,"offset":29439},"end":{"line":1700,"column":4,"offset":29461},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[6:]","position":{"start":{"line":1702,"column":1,"offset":29463},"end":{"line":1704,"column":4,"offset":29485},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[6:-1]","position":{"start":{"line":1706,"column":1,"offset":29487},"end":{"line":1708,"column":4,"offset":29511},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:-1]","position":{"start":{"line":1710,"column":1,"offset":29513},"end":{"line":1712,"column":4,"offset":29536},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[::-1]","position":{"start":{"line":1714,"column":1,"offset":29538},"end":{"line":1716,"column":4,"offset":29562},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nfizz = spam[0:5]\nfizz","position":{"start":{"line":1718,"column":1,"offset":29564},"end":{"line":1722,"column":4,"offset":29621},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators with Strings","position":{"start":{"line":1724,"column":5,"offset":29627},"end":{"line":1724,"column":45,"offset":29667},"indent":[]}}],"position":{"start":{"line":1724,"column":1,"offset":29623},"end":{"line":1724,"column":45,"offset":29667},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello' in 'Hello World'","position":{"start":{"line":1726,"column":1,"offset":29669},"end":{"line":1728,"column":4,"offset":29707},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello' in 'Hello'","position":{"start":{"line":1730,"column":1,"offset":29709},"end":{"line":1732,"column":4,"offset":29741},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'HELLO' in 'Hello World'","position":{"start":{"line":1734,"column":1,"offset":29743},"end":{"line":1736,"column":4,"offset":29781},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'' in 'spam'","position":{"start":{"line":1738,"column":1,"offset":29783},"end":{"line":1740,"column":4,"offset":29809},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'cats' not in 'cats and dogs'","position":{"start":{"line":1742,"column":1,"offset":29811},"end":{"line":1744,"column":4,"offset":29854},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators with list","position":{"start":{"line":1746,"column":5,"offset":29860},"end":{"line":1746,"column":42,"offset":29897},"indent":[]}}],"position":{"start":{"line":1746,"column":1,"offset":29856},"end":{"line":1746,"column":42,"offset":29897},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 2, 3, 4]\n5 in a","position":{"start":{"line":1748,"column":1,"offset":29899},"end":{"line":1751,"column":4,"offset":29936},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"2 in a","position":{"start":{"line":1753,"column":1,"offset":29938},"end":{"line":1755,"column":4,"offset":29958},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The upper, lower, isupper, and islower String Methods","position":{"start":{"line":1757,"column":5,"offset":29964},"end":{"line":1757,"column":58,"offset":30017},"indent":[]}}],"position":{"start":{"line":1757,"column":1,"offset":29960},"end":{"line":1757,"column":58,"offset":30017},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"upper()","position":{"start":{"line":1759,"column":1,"offset":30019},"end":{"line":1759,"column":10,"offset":30028},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1759,"column":10,"offset":30028},"end":{"line":1759,"column":15,"offset":30033},"indent":[]}},{"type":"inlineCode","value":"lower()","position":{"start":{"line":1759,"column":15,"offset":30033},"end":{"line":1759,"column":24,"offset":30042},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":1759,"column":24,"offset":30042},"end":{"line":1759,"column":25,"offset":30043},"indent":[]}}],"position":{"start":{"line":1759,"column":1,"offset":30019},"end":{"line":1759,"column":25,"offset":30043},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam = spam.upper()\nspam","position":{"start":{"line":1761,"column":1,"offset":30045},"end":{"line":1765,"column":4,"offset":30105},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = spam.lower()\nspam","position":{"start":{"line":1767,"column":1,"offset":30107},"end":{"line":1770,"column":4,"offset":30145},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"isupper() and islower():","position":{"start":{"line":1772,"column":1,"offset":30147},"end":{"line":1772,"column":25,"offset":30171},"indent":[]}}],"position":{"start":{"line":1772,"column":1,"offset":30147},"end":{"line":1772,"column":25,"offset":30171},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam.islower()","position":{"start":{"line":1774,"column":1,"offset":30173},"end":{"line":1777,"column":4,"offset":30223},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.isupper()","position":{"start":{"line":1779,"column":1,"offset":30225},"end":{"line":1781,"column":4,"offset":30253},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'HELLO'.isupper()","position":{"start":{"line":1783,"column":1,"offset":30255},"end":{"line":1785,"column":4,"offset":30286},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc12345'.islower()","position":{"start":{"line":1787,"column":1,"offset":30288},"end":{"line":1789,"column":4,"offset":30322},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'12345'.islower()","position":{"start":{"line":1791,"column":1,"offset":30324},"end":{"line":1793,"column":4,"offset":30355},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'12345'.isupper()","position":{"start":{"line":1795,"column":1,"offset":30357},"end":{"line":1797,"column":4,"offset":30388},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The isX String Methods","position":{"start":{"line":1799,"column":5,"offset":30394},"end":{"line":1799,"column":27,"offset":30416},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":30390},"end":{"line":1799,"column":27,"offset":30416},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isalpha()","position":{"start":{"line":1801,"column":7,"offset":30424},"end":{"line":1801,"column":16,"offset":30433},"indent":[]}}],"position":{"start":{"line":1801,"column":5,"offset":30422},"end":{"line":1801,"column":18,"offset":30435},"indent":[]}},{"type":"text","value":" returns True if the string consists only of letters and is not blank.","position":{"start":{"line":1801,"column":18,"offset":30435},"end":{"line":1801,"column":88,"offset":30505},"indent":[]}}],"position":{"start":{"line":1801,"column":5,"offset":30422},"end":{"line":1801,"column":88,"offset":30505},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":30418},"end":{"line":1801,"column":88,"offset":30505},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isalnum()","position":{"start":{"line":1802,"column":7,"offset":30512},"end":{"line":1802,"column":16,"offset":30521},"indent":[]}}],"position":{"start":{"line":1802,"column":5,"offset":30510},"end":{"line":1802,"column":18,"offset":30523},"indent":[]}},{"type":"text","value":" returns True if the string consists only of lettersand numbers and is not blank.","position":{"start":{"line":1802,"column":18,"offset":30523},"end":{"line":1802,"column":99,"offset":30604},"indent":[]}}],"position":{"start":{"line":1802,"column":5,"offset":30510},"end":{"line":1802,"column":99,"offset":30604},"indent":[]}}],"position":{"start":{"line":1802,"column":1,"offset":30506},"end":{"line":1802,"column":99,"offset":30604},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isdecimal()","position":{"start":{"line":1803,"column":7,"offset":30611},"end":{"line":1803,"column":18,"offset":30622},"indent":[]}}],"position":{"start":{"line":1803,"column":5,"offset":30609},"end":{"line":1803,"column":20,"offset":30624},"indent":[]}},{"type":"text","value":" returns True if the string consists only ofnumeric characters and is not blank.","position":{"start":{"line":1803,"column":20,"offset":30624},"end":{"line":1803,"column":100,"offset":30704},"indent":[]}}],"position":{"start":{"line":1803,"column":5,"offset":30609},"end":{"line":1803,"column":100,"offset":30704},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":30605},"end":{"line":1803,"column":100,"offset":30704},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isspace()","position":{"start":{"line":1804,"column":7,"offset":30711},"end":{"line":1804,"column":16,"offset":30720},"indent":[]}}],"position":{"start":{"line":1804,"column":5,"offset":30709},"end":{"line":1804,"column":18,"offset":30722},"indent":[]}},{"type":"text","value":" returns True if the string consists only of spaces,tabs, and new-lines and is not blank.","position":{"start":{"line":1804,"column":18,"offset":30722},"end":{"line":1804,"column":107,"offset":30811},"indent":[]}}],"position":{"start":{"line":1804,"column":5,"offset":30709},"end":{"line":1804,"column":107,"offset":30811},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":30705},"end":{"line":1804,"column":107,"offset":30811},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"istitle()","position":{"start":{"line":1805,"column":7,"offset":30818},"end":{"line":1805,"column":16,"offset":30827},"indent":[]}}],"position":{"start":{"line":1805,"column":5,"offset":30816},"end":{"line":1805,"column":18,"offset":30829},"indent":[]}},{"type":"text","value":" returns True if the string consists only of wordsthat begin with an uppercase letter followed by onlylowercase letters.","position":{"start":{"line":1805,"column":18,"offset":30829},"end":{"line":1805,"column":138,"offset":30949},"indent":[]}}],"position":{"start":{"line":1805,"column":5,"offset":30816},"end":{"line":1805,"column":138,"offset":30949},"indent":[]}}],"position":{"start":{"line":1805,"column":1,"offset":30812},"end":{"line":1805,"column":138,"offset":30949},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":30418},"end":{"line":1805,"column":138,"offset":30949},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The startswith and endswith String Methods","position":{"start":{"line":1807,"column":5,"offset":30955},"end":{"line":1807,"column":47,"offset":30997},"indent":[]}}],"position":{"start":{"line":1807,"column":1,"offset":30951},"end":{"line":1807,"column":47,"offset":30997},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.startswith('Hello')","position":{"start":{"line":1809,"column":1,"offset":30999},"end":{"line":1811,"column":4,"offset":31047},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.endswith('world!')","position":{"start":{"line":1813,"column":1,"offset":31049},"end":{"line":1815,"column":4,"offset":31096},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc123'.startswith('abcdef')","position":{"start":{"line":1817,"column":1,"offset":31098},"end":{"line":1819,"column":4,"offset":31141},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc123'.endswith('12')","position":{"start":{"line":1821,"column":1,"offset":31143},"end":{"line":1823,"column":4,"offset":31180},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.startswith('Hello world!')","position":{"start":{"line":1825,"column":1,"offset":31182},"end":{"line":1827,"column":4,"offset":31237},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.endswith('Hello world!')","position":{"start":{"line":1829,"column":1,"offset":31239},"end":{"line":1831,"column":4,"offset":31292},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The join and split String Methods","position":{"start":{"line":1833,"column":5,"offset":31298},"end":{"line":1833,"column":38,"offset":31331},"indent":[]}}],"position":{"start":{"line":1833,"column":1,"offset":31294},"end":{"line":1833,"column":38,"offset":31331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"join():","position":{"start":{"line":1835,"column":1,"offset":31333},"end":{"line":1835,"column":8,"offset":31340},"indent":[]}}],"position":{"start":{"line":1835,"column":1,"offset":31333},"end":{"line":1835,"column":8,"offset":31340},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"', '.join(['cats', 'rats', 'bats'])","position":{"start":{"line":1837,"column":1,"offset":31342},"end":{"line":1839,"column":4,"offset":31391},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"' '.join(['My', 'name', 'is', 'Simon'])","position":{"start":{"line":1841,"column":1,"offset":31393},"end":{"line":1843,"column":4,"offset":31446},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'ABC'.join(['My', 'name', 'is', 'Simon'])","position":{"start":{"line":1845,"column":1,"offset":31448},"end":{"line":1847,"column":4,"offset":31503},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"split():","position":{"start":{"line":1849,"column":1,"offset":31505},"end":{"line":1849,"column":9,"offset":31513},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":31505},"end":{"line":1849,"column":9,"offset":31513},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'My name is Simon'.split()","position":{"start":{"line":1851,"column":1,"offset":31515},"end":{"line":1853,"column":4,"offset":31555},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'MyABCnameABCisABCSimon'.split('ABC')","position":{"start":{"line":1855,"column":1,"offset":31557},"end":{"line":1857,"column":4,"offset":31608},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'My name is Simon'.split('m')","position":{"start":{"line":1859,"column":1,"offset":31610},"end":{"line":1861,"column":4,"offset":31653},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Justifying Text with rjust, ljust, and center","position":{"start":{"line":1863,"column":5,"offset":31659},"end":{"line":1863,"column":50,"offset":31704},"indent":[]}}],"position":{"start":{"line":1863,"column":1,"offset":31655},"end":{"line":1863,"column":50,"offset":31704},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"rjust() and ljust():","position":{"start":{"line":1865,"column":1,"offset":31706},"end":{"line":1865,"column":21,"offset":31726},"indent":[]}}],"position":{"start":{"line":1865,"column":1,"offset":31706},"end":{"line":1865,"column":21,"offset":31726},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(10)","position":{"start":{"line":1867,"column":1,"offset":31728},"end":{"line":1869,"column":4,"offset":31759},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(20)","position":{"start":{"line":1871,"column":1,"offset":31761},"end":{"line":1873,"column":4,"offset":31792},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello World'.rjust(20)","position":{"start":{"line":1875,"column":1,"offset":31794},"end":{"line":1877,"column":4,"offset":31831},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.ljust(10)","position":{"start":{"line":1879,"column":1,"offset":31833},"end":{"line":1881,"column":4,"offset":31864},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"An optional second argument to rjust() and ljust() will specify a fill character other than a space character. Enter the following into the interactive shell:","position":{"start":{"line":1883,"column":1,"offset":31866},"end":{"line":1883,"column":159,"offset":32024},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":31866},"end":{"line":1883,"column":159,"offset":32024},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(20, '*')","position":{"start":{"line":1885,"column":1,"offset":32026},"end":{"line":1887,"column":4,"offset":32062},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.ljust(20, '-')","position":{"start":{"line":1889,"column":1,"offset":32064},"end":{"line":1891,"column":4,"offset":32100},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"center():","position":{"start":{"line":1893,"column":1,"offset":32102},"end":{"line":1893,"column":10,"offset":32111},"indent":[]}}],"position":{"start":{"line":1893,"column":1,"offset":32102},"end":{"line":1893,"column":10,"offset":32111},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.center(20)","position":{"start":{"line":1895,"column":1,"offset":32113},"end":{"line":1897,"column":4,"offset":32145},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.center(20, '=')","position":{"start":{"line":1899,"column":1,"offset":32147},"end":{"line":1901,"column":4,"offset":32184},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Whitespace with strip, rstrip, and lstrip","position":{"start":{"line":1903,"column":5,"offset":32190},"end":{"line":1903,"column":55,"offset":32240},"indent":[]}}],"position":{"start":{"line":1903,"column":1,"offset":32186},"end":{"line":1903,"column":55,"offset":32240},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = '    Hello World     '\nspam.strip()","position":{"start":{"line":1905,"column":1,"offset":32242},"end":{"line":1908,"column":4,"offset":32298},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.lstrip()","position":{"start":{"line":1910,"column":1,"offset":32300},"end":{"line":1912,"column":4,"offset":32327},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.rstrip()","position":{"start":{"line":1914,"column":1,"offset":32329},"end":{"line":1916,"column":4,"offset":32356},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'SpamSpamBaconSpamEggsSpamSpam'\nspam.strip('ampS')","position":{"start":{"line":1918,"column":1,"offset":32358},"end":{"line":1921,"column":4,"offset":32429},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copying and Pasting Strings with the pyperclip Module","position":{"start":{"line":1923,"column":5,"offset":32435},"end":{"line":1923,"column":58,"offset":32488},"indent":[]}}],"position":{"start":{"line":1923,"column":1,"offset":32431},"end":{"line":1923,"column":58,"offset":32488},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, install ","position":{"start":{"line":1925,"column":1,"offset":32490},"end":{"line":1925,"column":16,"offset":32505},"indent":[]}},{"type":"inlineCode","value":"pypeerclip","position":{"start":{"line":1925,"column":16,"offset":32505},"end":{"line":1925,"column":28,"offset":32517},"indent":[]}},{"type":"text","value":" with pip:","position":{"start":{"line":1925,"column":28,"offset":32517},"end":{"line":1925,"column":38,"offset":32527},"indent":[]}}],"position":{"start":{"line":1925,"column":1,"offset":32490},"end":{"line":1925,"column":38,"offset":32527},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"pip install pyperclip","position":{"start":{"line":1927,"column":1,"offset":32529},"end":{"line":1929,"column":4,"offset":32563},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"import pyperclip\n\npyperclip.copy('Hello world!')\npyperclip.paste()","position":{"start":{"line":1931,"column":1,"offset":32565},"end":{"line":1936,"column":4,"offset":32645},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"String Formatting","position":{"start":{"line":1938,"column":4,"offset":32650},"end":{"line":1938,"column":21,"offset":32667},"indent":[]}}],"position":{"start":{"line":1938,"column":1,"offset":32647},"end":{"line":1938,"column":21,"offset":32667},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"% operator","position":{"start":{"line":1940,"column":5,"offset":32673},"end":{"line":1940,"column":15,"offset":32683},"indent":[]}}],"position":{"start":{"line":1940,"column":1,"offset":32669},"end":{"line":1940,"column":15,"offset":32683},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Pete'\n'Hello %s' % name","position":{"start":{"line":1942,"column":1,"offset":32685},"end":{"line":1945,"column":4,"offset":32730},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the ","position":{"start":{"line":1947,"column":1,"offset":32732},"end":{"line":1947,"column":16,"offset":32747},"indent":[]}},{"type":"inlineCode","value":"%x","position":{"start":{"line":1947,"column":16,"offset":32747},"end":{"line":1947,"column":20,"offset":32751},"indent":[]}},{"type":"text","value":" format specifier to convert an int value to a string:","position":{"start":{"line":1947,"column":20,"offset":32751},"end":{"line":1947,"column":74,"offset":32805},"indent":[]}}],"position":{"start":{"line":1947,"column":1,"offset":32732},"end":{"line":1947,"column":74,"offset":32805},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"num = 5\n'I have %x apples' % num","position":{"start":{"line":1949,"column":1,"offset":32807},"end":{"line":1952,"column":4,"offset":32853},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: For new code, using str.format or f-strings is strongly recommended over the ","position":{"start":{"line":1954,"column":1,"offset":32855},"end":{"line":1954,"column":84,"offset":32938},"indent":[]}},{"type":"inlineCode","value":"%","position":{"start":{"line":1954,"column":84,"offset":32938},"end":{"line":1954,"column":87,"offset":32941},"indent":[]}},{"type":"text","value":" operator.","position":{"start":{"line":1954,"column":87,"offset":32941},"end":{"line":1954,"column":97,"offset":32951},"indent":[]}}],"position":{"start":{"line":1954,"column":1,"offset":32855},"end":{"line":1954,"column":97,"offset":32951},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"str.format","position":{"start":{"line":1956,"column":5,"offset":32957},"end":{"line":1956,"column":15,"offset":32967},"indent":[]}}],"position":{"start":{"line":1956,"column":1,"offset":32953},"end":{"line":1956,"column":15,"offset":32967},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3 introduced a new way to do string formatting that was later back-ported to Python 2.7. This makes the syntax for string formatting more regular.","position":{"start":{"line":1958,"column":1,"offset":32969},"end":{"line":1958,"column":154,"offset":33122},"indent":[]}}],"position":{"start":{"line":1958,"column":1,"offset":32969},"end":{"line":1958,"column":154,"offset":33122},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'John'\nage = 20'\n\n\"Hello I'm {}, my age is {}\".format(name, age)","position":{"start":{"line":1960,"column":1,"offset":33124},"end":{"line":1965,"column":4,"offset":33209},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"\"Hello I'm {0}, my age is {1}\".format(name, age)","position":{"start":{"line":1967,"column":1,"offset":33211},"end":{"line":1969,"column":4,"offset":33273},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The official ","position":{"start":{"line":1971,"column":1,"offset":33275},"end":{"line":1971,"column":14,"offset":33288},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/stdtypes.html?highlight=sprintf#printf-style-string-formatting","children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1971,"column":15,"offset":33289},"end":{"line":1971,"column":39,"offset":33313},"indent":[]}}],"position":{"start":{"line":1971,"column":14,"offset":33288},"end":{"line":1971,"column":138,"offset":33412},"indent":[]}},{"type":"text","value":" recommend ","position":{"start":{"line":1971,"column":138,"offset":33412},"end":{"line":1971,"column":149,"offset":33423},"indent":[]}},{"type":"inlineCode","value":"str.format","position":{"start":{"line":1971,"column":149,"offset":33423},"end":{"line":1971,"column":161,"offset":33435},"indent":[]}},{"type":"text","value":" over the ","position":{"start":{"line":1971,"column":161,"offset":33435},"end":{"line":1971,"column":171,"offset":33445},"indent":[]}},{"type":"inlineCode","value":"%","position":{"start":{"line":1971,"column":171,"offset":33445},"end":{"line":1971,"column":174,"offset":33448},"indent":[]}},{"type":"text","value":" operator:","position":{"start":{"line":1971,"column":174,"offset":33448},"end":{"line":1971,"column":184,"offset":33458},"indent":[]}}],"position":{"start":{"line":1971,"column":1,"offset":33275},"end":{"line":1971,"column":184,"offset":33458},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer formatted string literals or the str.format() interface helps avoid these errors. These alternatives also provide more powerful, flexible and extensible approaches to formatting text.","position":{"start":{"line":1973,"column":3,"offset":33462},"end":{"line":1973,"column":374,"offset":33833},"indent":[]}}],"position":{"start":{"line":1973,"column":3,"offset":33462},"end":{"line":1973,"column":374,"offset":33833},"indent":[]}}],"position":{"start":{"line":1973,"column":1,"offset":33460},"end":{"line":1973,"column":374,"offset":33833},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Lazy string formatting","position":{"start":{"line":1975,"column":5,"offset":33839},"end":{"line":1975,"column":27,"offset":33861},"indent":[]}}],"position":{"start":{"line":1975,"column":1,"offset":33835},"end":{"line":1975,"column":27,"offset":33861},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You would only use ","position":{"start":{"line":1977,"column":1,"offset":33863},"end":{"line":1977,"column":20,"offset":33882},"indent":[]}},{"type":"inlineCode","value":"%s","position":{"start":{"line":1977,"column":20,"offset":33882},"end":{"line":1977,"column":24,"offset":33886},"indent":[]}},{"type":"text","value":" string formatting on functions that can do lazy parameters evaluation,\nthe most common being logging:","position":{"start":{"line":1977,"column":24,"offset":33886},"end":{"line":1978,"column":31,"offset":33988},"indent":[1]}}],"position":{"start":{"line":1977,"column":1,"offset":33863},"end":{"line":1978,"column":31,"offset":33988},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Prefer:","position":{"start":{"line":1980,"column":1,"offset":33990},"end":{"line":1980,"column":8,"offset":33997},"indent":[]}}],"position":{"start":{"line":1980,"column":1,"offset":33990},"end":{"line":1980,"column":8,"offset":33997},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = \"alice\"\nlogging.debug(\"User name: %s\", name)","position":{"start":{"line":1982,"column":1,"offset":33999},"end":{"line":1985,"column":4,"offset":34064},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Over:","position":{"start":{"line":1987,"column":1,"offset":34066},"end":{"line":1987,"column":6,"offset":34071},"indent":[]}}],"position":{"start":{"line":1987,"column":1,"offset":34066},"end":{"line":1987,"column":6,"offset":34071},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"logging.debug(\"User name: {}\".format(name))","position":{"start":{"line":1989,"column":1,"offset":34073},"end":{"line":1991,"column":4,"offset":34130},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or:","position":{"start":{"line":1993,"column":1,"offset":34132},"end":{"line":1993,"column":4,"offset":34135},"indent":[]}}],"position":{"start":{"line":1993,"column":1,"offset":34132},"end":{"line":1993,"column":4,"offset":34135},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"logging.debug(\"User name: \" + name)","position":{"start":{"line":1995,"column":1,"offset":34137},"end":{"line":1997,"column":4,"offset":34186},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Formatted String Literals or f-strings","position":{"start":{"line":1999,"column":5,"offset":34192},"end":{"line":1999,"column":43,"offset":34230},"indent":[]}}],"position":{"start":{"line":1999,"column":1,"offset":34188},"end":{"line":1999,"column":43,"offset":34230},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3.6+","position":{"start":{"line":2001,"column":1,"offset":34232},"end":{"line":2001,"column":12,"offset":34243},"indent":[]}}],"position":{"start":{"line":2001,"column":1,"offset":34232},"end":{"line":2001,"column":12,"offset":34243},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Elizabeth'\nf'Hello {name}!'","position":{"start":{"line":2003,"column":1,"offset":34245},"end":{"line":2006,"column":4,"offset":34294},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is even possible to do inline arithmetic with it:","position":{"start":{"line":2008,"column":1,"offset":34296},"end":{"line":2008,"column":53,"offset":34348},"indent":[]}}],"position":{"start":{"line":2008,"column":1,"offset":34296},"end":{"line":2008,"column":53,"offset":34348},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = 5\nb = 10\nf'Five plus ten is {a + b} and not {2 * (a + b)}.'","position":{"start":{"line":2010,"column":1,"offset":34350},"end":{"line":2014,"column":4,"offset":34427},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Template Strings","position":{"start":{"line":2016,"column":5,"offset":34433},"end":{"line":2016,"column":21,"offset":34449},"indent":[]}}],"position":{"start":{"line":2016,"column":1,"offset":34429},"end":{"line":2016,"column":21,"offset":34449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A simpler and less powerful mechanism, but it is recommended when handling format strings generated by users. Due to their reduced complexity template strings are a safer choice.","position":{"start":{"line":2018,"column":1,"offset":34451},"end":{"line":2018,"column":179,"offset":34629},"indent":[]}}],"position":{"start":{"line":2018,"column":1,"offset":34451},"end":{"line":2018,"column":179,"offset":34629},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from string import Template\n\nname = 'Elizabeth'\nt = Template('Hey $name!')\nt.substitute(name=name)","position":{"start":{"line":2020,"column":1,"offset":34631},"end":{"line":2026,"column":4,"offset":34743},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Regular Expressions","position":{"start":{"line":2028,"column":4,"offset":34748},"end":{"line":2028,"column":23,"offset":34767},"indent":[]}}],"position":{"start":{"line":2028,"column":1,"offset":34745},"end":{"line":2028,"column":23,"offset":34767},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import the regex module with ","position":{"start":{"line":2030,"column":4,"offset":34772},"end":{"line":2030,"column":33,"offset":34801},"indent":[]}},{"type":"inlineCode","value":"import re","position":{"start":{"line":2030,"column":33,"offset":34801},"end":{"line":2030,"column":44,"offset":34812},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2030,"column":44,"offset":34812},"end":{"line":2030,"column":45,"offset":34813},"indent":[]}}],"position":{"start":{"line":2030,"column":4,"offset":34772},"end":{"line":2030,"column":45,"offset":34813},"indent":[]}}],"position":{"start":{"line":2030,"column":1,"offset":34769},"end":{"line":2030,"column":45,"offset":34813},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a Regex object with the ","position":{"start":{"line":2031,"column":4,"offset":34817},"end":{"line":2031,"column":35,"offset":34848},"indent":[]}},{"type":"inlineCode","value":"re.compile()","position":{"start":{"line":2031,"column":35,"offset":34848},"end":{"line":2031,"column":49,"offset":34862},"indent":[]}},{"type":"text","value":" function. (Remember to use a raw string.)","position":{"start":{"line":2031,"column":49,"offset":34862},"end":{"line":2031,"column":91,"offset":34904},"indent":[]}}],"position":{"start":{"line":2031,"column":4,"offset":34817},"end":{"line":2031,"column":91,"offset":34904},"indent":[]}}],"position":{"start":{"line":2031,"column":1,"offset":34814},"end":{"line":2031,"column":91,"offset":34904},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pass the string you want to search into the Regex object's ","position":{"start":{"line":2032,"column":4,"offset":34908},"end":{"line":2032,"column":63,"offset":34967},"indent":[]}},{"type":"inlineCode","value":"search()","position":{"start":{"line":2032,"column":63,"offset":34967},"end":{"line":2032,"column":73,"offset":34977},"indent":[]}},{"type":"text","value":" method. This returns a ","position":{"start":{"line":2032,"column":73,"offset":34977},"end":{"line":2032,"column":97,"offset":35001},"indent":[]}},{"type":"inlineCode","value":"Match","position":{"start":{"line":2032,"column":97,"offset":35001},"end":{"line":2032,"column":104,"offset":35008},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":2032,"column":104,"offset":35008},"end":{"line":2032,"column":112,"offset":35016},"indent":[]}}],"position":{"start":{"line":2032,"column":4,"offset":34908},"end":{"line":2032,"column":112,"offset":35016},"indent":[]}}],"position":{"start":{"line":2032,"column":1,"offset":34905},"end":{"line":2032,"column":112,"offset":35016},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Call the Match object's ","position":{"start":{"line":2033,"column":4,"offset":35020},"end":{"line":2033,"column":28,"offset":35044},"indent":[]}},{"type":"inlineCode","value":"group()","position":{"start":{"line":2033,"column":28,"offset":35044},"end":{"line":2033,"column":37,"offset":35053},"indent":[]}},{"type":"text","value":" method to return a string of the actual matched text.","position":{"start":{"line":2033,"column":37,"offset":35053},"end":{"line":2033,"column":91,"offset":35107},"indent":[]}}],"position":{"start":{"line":2033,"column":4,"offset":35020},"end":{"line":2033,"column":91,"offset":35107},"indent":[]}}],"position":{"start":{"line":2033,"column":1,"offset":35017},"end":{"line":2033,"column":91,"offset":35107},"indent":[]}}],"position":{"start":{"line":2030,"column":1,"offset":34769},"end":{"line":2033,"column":91,"offset":35107},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All the regex functions in Python are in the re module:","position":{"start":{"line":2035,"column":1,"offset":35109},"end":{"line":2035,"column":56,"offset":35164},"indent":[]}}],"position":{"start":{"line":2035,"column":1,"offset":35109},"end":{"line":2035,"column":56,"offset":35164},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import re","position":{"start":{"line":2037,"column":1,"offset":35166},"end":{"line":2039,"column":4,"offset":35189},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Regex Objects","position":{"start":{"line":2041,"column":5,"offset":35195},"end":{"line":2041,"column":27,"offset":35217},"indent":[]}}],"position":{"start":{"line":2041,"column":1,"offset":35191},"end":{"line":2041,"column":27,"offset":35217},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d')\nmo = phone_num_regex.search('My number is 415-555-4242.')\nprint('Phone number found: {}'.format(mo.group()))","position":{"start":{"line":2043,"column":1,"offset":35219},"end":{"line":2047,"column":4,"offset":35397},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Grouping with Parentheses","position":{"start":{"line":2049,"column":5,"offset":35403},"end":{"line":2049,"column":30,"offset":35428},"indent":[]}}],"position":{"start":{"line":2049,"column":1,"offset":35399},"end":{"line":2049,"column":30,"offset":35428},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)')\nmo = phone_num_regex.search('My number is 415-555-4242.')\nmo.group(1)","position":{"start":{"line":2051,"column":1,"offset":35430},"end":{"line":2055,"column":4,"offset":35573},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(2)","position":{"start":{"line":2057,"column":1,"offset":35575},"end":{"line":2059,"column":4,"offset":35600},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(0)","position":{"start":{"line":2061,"column":1,"offset":35602},"end":{"line":2063,"column":4,"offset":35627},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group()","position":{"start":{"line":2065,"column":1,"offset":35629},"end":{"line":2067,"column":4,"offset":35653},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To retrieve all the groups at once: use the groups() method—note the plural form for the name.","position":{"start":{"line":2069,"column":1,"offset":35655},"end":{"line":2069,"column":95,"offset":35749},"indent":[]}}],"position":{"start":{"line":2069,"column":1,"offset":35655},"end":{"line":2069,"column":95,"offset":35749},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"mo.groups()\narea_code, main_number = mo.groups()","position":{"start":{"line":2071,"column":1,"offset":35751},"end":{"line":2074,"column":4,"offset":35813},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(area_code)","position":{"start":{"line":2076,"column":1,"offset":35815},"end":{"line":2078,"column":4,"offset":35845},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(main_number)","position":{"start":{"line":2080,"column":1,"offset":35847},"end":{"line":2082,"column":4,"offset":35879},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Multiple Groups with the Pipe","position":{"start":{"line":2084,"column":5,"offset":35885},"end":{"line":2084,"column":43,"offset":35923},"indent":[]}}],"position":{"start":{"line":2084,"column":1,"offset":35881},"end":{"line":2084,"column":43,"offset":35923},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The | character is called a pipe. You can use it anywhere you want to match one of many expressions. For example, the regular expression r'Batman|Tina Fey' will match either 'Batman' or 'Tina Fey'.","position":{"start":{"line":2086,"column":1,"offset":35925},"end":{"line":2086,"column":198,"offset":36122},"indent":[]}}],"position":{"start":{"line":2086,"column":1,"offset":35925},"end":{"line":2086,"column":198,"offset":36122},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"hero_regex = re.compile (r'Batman|Tina Fey')\nmo1 = hero_regex.search('Batman and Tina Fey.')\nmo1.group()","position":{"start":{"line":2088,"column":1,"offset":36124},"end":{"line":2092,"column":4,"offset":36242},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = hero_regex.search('Tina Fey and Batman.')\nmo2.group()","position":{"start":{"line":2094,"column":1,"offset":36244},"end":{"line":2097,"column":4,"offset":36317},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use the pipe to match one of several patterns as part of your regex:","position":{"start":{"line":2099,"column":1,"offset":36319},"end":{"line":2099,"column":82,"offset":36400},"indent":[]}}],"position":{"start":{"line":2099,"column":1,"offset":36319},"end":{"line":2099,"column":82,"offset":36400},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(man|mobile|copter|bat)')\nmo = bat_regex.search('Batmobile lost a wheel')\nmo.group()","position":{"start":{"line":2101,"column":1,"offset":36402},"end":{"line":2105,"column":4,"offset":36528},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(1)","position":{"start":{"line":2107,"column":1,"offset":36530},"end":{"line":2109,"column":4,"offset":36555},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Optional Matching with the Question Mark","position":{"start":{"line":2111,"column":5,"offset":36561},"end":{"line":2111,"column":45,"offset":36601},"indent":[]}}],"position":{"start":{"line":2111,"column":1,"offset":36557},"end":{"line":2111,"column":45,"offset":36601},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ? character flags the group that precedes it as an optional part of the pattern.","position":{"start":{"line":2113,"column":1,"offset":36603},"end":{"line":2113,"column":85,"offset":36687},"indent":[]}}],"position":{"start":{"line":2113,"column":1,"offset":36603},"end":{"line":2113,"column":85,"offset":36687},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)?man')\nmo1 = bat_regex.search('The Adventures of Batman')\nmo1.group()","position":{"start":{"line":2115,"column":1,"offset":36689},"end":{"line":2119,"column":4,"offset":36804},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwoman')\nmo2.group()","position":{"start":{"line":2121,"column":1,"offset":36806},"end":{"line":2124,"column":4,"offset":36884},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Zero or More with the Star","position":{"start":{"line":2126,"column":5,"offset":36890},"end":{"line":2126,"column":40,"offset":36925},"indent":[]}}],"position":{"start":{"line":2126,"column":1,"offset":36886},"end":{"line":2126,"column":40,"offset":36925},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":2128,"column":1,"offset":36927},"end":{"line":2128,"column":5,"offset":36931},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2128,"column":5,"offset":36931},"end":{"line":2128,"column":7,"offset":36933},"indent":[]}},{"type":"text","value":" (called the star or asterisk) means \"match zero or more\"—the group that precedes the star can occur any number of times in the text.","position":{"start":{"line":2128,"column":7,"offset":36933},"end":{"line":2128,"column":140,"offset":37066},"indent":[]}}],"position":{"start":{"line":2128,"column":1,"offset":36927},"end":{"line":2128,"column":140,"offset":37066},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)*man')\nmo1 = bat_regex.search('The Adventures of Batman')\nmo1.group()","position":{"start":{"line":2130,"column":1,"offset":37068},"end":{"line":2134,"column":4,"offset":37183},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwoman')\nmo2.group()","position":{"start":{"line":2136,"column":1,"offset":37185},"end":{"line":2139,"column":4,"offset":37263},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo3 = bat_regex.search('The Adventures of Batwowowowoman')\nmo3.group()","position":{"start":{"line":2141,"column":1,"offset":37265},"end":{"line":2144,"column":4,"offset":37349},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching One or More with the Plus","position":{"start":{"line":2146,"column":5,"offset":37355},"end":{"line":2146,"column":39,"offset":37389},"indent":[]}}],"position":{"start":{"line":2146,"column":1,"offset":37351},"end":{"line":2146,"column":39,"offset":37389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While ","position":{"start":{"line":2148,"column":1,"offset":37391},"end":{"line":2148,"column":7,"offset":37397},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2148,"column":7,"offset":37397},"end":{"line":2148,"column":9,"offset":37399},"indent":[]}},{"type":"text","value":" means \"match zero or more,\" the + (or plus) means \"match one or more\". The group preceding a plus must appear at least once. It is not optional:","position":{"start":{"line":2148,"column":9,"offset":37399},"end":{"line":2148,"column":154,"offset":37544},"indent":[]}}],"position":{"start":{"line":2148,"column":1,"offset":37391},"end":{"line":2148,"column":154,"offset":37544},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)+man')\nmo1 = bat_regex.search('The Adventures of Batwoman')\nmo1.group()","position":{"start":{"line":2150,"column":1,"offset":37546},"end":{"line":2154,"column":4,"offset":37663},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwowowowoman')\nmo2.group()","position":{"start":{"line":2156,"column":1,"offset":37665},"end":{"line":2159,"column":4,"offset":37749},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo3 = bat_regex.search('The Adventures of Batman')\nmo3 is None","position":{"start":{"line":2161,"column":1,"offset":37751},"end":{"line":2164,"column":4,"offset":37827},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Specific Repetitions with Curly Brackets","position":{"start":{"line":2166,"column":5,"offset":37833},"end":{"line":2166,"column":54,"offset":37882},"indent":[]}}],"position":{"start":{"line":2166,"column":1,"offset":37829},"end":{"line":2166,"column":54,"offset":37882},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have a group that you want to repeat a specific number of times, follow the group in your regex with a number in curly brackets. For example, the regex (Ha){3} will match the string 'HaHaHa', but it will not match 'HaHa', since the latter has only two repeats of the (Ha) group.","position":{"start":{"line":2168,"column":1,"offset":37884},"end":{"line":2168,"column":286,"offset":38169},"indent":[]}}],"position":{"start":{"line":2168,"column":1,"offset":37884},"end":{"line":2168,"column":286,"offset":38169},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of one number, you can specify a range by writing a minimum, a comma, and a maximum in between the curly brackets. For example, the regex (Ha){3,5} will match 'HaHaHa', 'HaHaHaHa', and 'HaHaHaHaHa'.","position":{"start":{"line":2170,"column":1,"offset":38171},"end":{"line":2170,"column":207,"offset":38377},"indent":[]}}],"position":{"start":{"line":2170,"column":1,"offset":38171},"end":{"line":2170,"column":207,"offset":38377},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"ha_regex = re.compile(r'(Ha){3}')\nmo1 = ha_regex.search('HaHaHa')\nmo1.group()","position":{"start":{"line":2172,"column":1,"offset":38379},"end":{"line":2176,"column":4,"offset":38470},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = ha_regex.search('Ha')\nmo2 is None","position":{"start":{"line":2178,"column":1,"offset":38472},"end":{"line":2181,"column":4,"offset":38525},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Greedy and Nongreedy Matching","position":{"start":{"line":2183,"column":5,"offset":38531},"end":{"line":2183,"column":34,"offset":38560},"indent":[]}}],"position":{"start":{"line":2183,"column":1,"offset":38527},"end":{"line":2183,"column":34,"offset":38560},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python's regular expressions are greedy by default, which means that in ambiguous situations they will match the longest string possible. The non-greedy version of the curly brackets, which matches the shortest string possible, has the closing curly bracket followed by a question mark.","position":{"start":{"line":2185,"column":1,"offset":38562},"end":{"line":2185,"column":287,"offset":38848},"indent":[]}}],"position":{"start":{"line":2185,"column":1,"offset":38562},"end":{"line":2185,"column":287,"offset":38848},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"greedy_ha_regex = re.compile(r'(Ha){3,5}')\nmo1 = greedy_ha_regex.search('HaHaHaHaHa')\nmo1.group()","position":{"start":{"line":2187,"column":1,"offset":38850},"end":{"line":2191,"column":4,"offset":38961},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"nongreedy_ha_regex = re.compile(r'(Ha){3,5}?')\nmo2 = nongreedy_ha_regex.search('HaHaHaHaHa')\nmo2.group()","position":{"start":{"line":2193,"column":1,"offset":38963},"end":{"line":2197,"column":4,"offset":39081},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The findall Method","position":{"start":{"line":2199,"column":5,"offset":39087},"end":{"line":2199,"column":23,"offset":39105},"indent":[]}}],"position":{"start":{"line":2199,"column":1,"offset":39083},"end":{"line":2199,"column":23,"offset":39105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the search() method, Regex objects also have a findall() method. While search() will return a Match object of the first matched text in the searched string, the findall() method will return the strings of every match in the searched string.","position":{"start":{"line":2201,"column":1,"offset":39107},"end":{"line":2201,"column":256,"offset":39362},"indent":[]}}],"position":{"start":{"line":2201,"column":1,"offset":39107},"end":{"line":2201,"column":256,"offset":39362},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d') # has no groups\nphone_num_regex.findall('Cell: 415-555-9999 Work: 212-555-0000')","position":{"start":{"line":2203,"column":1,"offset":39364},"end":{"line":2206,"column":4,"offset":39514},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To summarize what the findall() method returns, remember the following:","position":{"start":{"line":2208,"column":1,"offset":39516},"end":{"line":2208,"column":72,"offset":39587},"indent":[]}}],"position":{"start":{"line":2208,"column":1,"offset":39516},"end":{"line":2208,"column":72,"offset":39587},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When called on a regex with no groups, such as \\d-\\d\\d\\d-\\d\\d\\d\\d, the method findall() returns a list of ng matches, such as ","position":{"start":{"line":2210,"column":5,"offset":39593},"end":{"line":2210,"column":131,"offset":39719},"indent":[]}},{"type":"linkReference","identifier":"'415-555-9999', '212-555-0000'","label":"'415-555-9999', '212-555-0000'","referenceType":"shortcut","children":[{"type":"text","value":"'415-555-9999', '212-555-0000'","position":{"start":{"line":2210,"column":132,"offset":39720},"end":{"line":2210,"column":162,"offset":39750},"indent":[]}}],"position":{"start":{"line":2210,"column":131,"offset":39719},"end":{"line":2210,"column":163,"offset":39751},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2210,"column":163,"offset":39751},"end":{"line":2210,"column":164,"offset":39752},"indent":[]}}],"position":{"start":{"line":2210,"column":5,"offset":39593},"end":{"line":2210,"column":164,"offset":39752},"indent":[]}}],"position":{"start":{"line":2210,"column":1,"offset":39589},"end":{"line":2210,"column":164,"offset":39752},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2211,"column":1,"offset":39753},"end":{"line":2211,"column":2,"offset":39754},"indent":[]}}],"position":{"start":{"line":2211,"column":1,"offset":39753},"end":{"line":2211,"column":2,"offset":39754},"indent":[]}}],"position":{"start":{"line":2211,"column":1,"offset":39753},"end":{"line":2211,"column":2,"offset":39754},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When called on a regex that has groups, such as (\\d\\d\\d)-d\\d)-(\\d\\ d\\d\\d), the method findall() returns a list of es of strings (one string for each group), such as ","position":{"start":{"line":2212,"column":5,"offset":39759},"end":{"line":2212,"column":170,"offset":39924},"indent":[]}},{"type":"linkReference","identifier":"('415', ', '9999'), ('212', '555', '0000')","label":"('415', ', '9999'), ('212', '555', '0000')","referenceType":"shortcut","children":[{"type":"text","value":"('415', ', '9999'), ('212', '555', '0000')","position":{"start":{"line":2212,"column":171,"offset":39925},"end":{"line":2212,"column":213,"offset":39967},"indent":[]}}],"position":{"start":{"line":2212,"column":170,"offset":39924},"end":{"line":2212,"column":214,"offset":39968},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2212,"column":214,"offset":39968},"end":{"line":2212,"column":215,"offset":39969},"indent":[]}}],"position":{"start":{"line":2212,"column":5,"offset":39759},"end":{"line":2212,"column":215,"offset":39969},"indent":[]}}],"position":{"start":{"line":2212,"column":1,"offset":39755},"end":{"line":2212,"column":215,"offset":39969},"indent":[]}}],"position":{"start":{"line":2210,"column":1,"offset":39589},"end":{"line":2212,"column":215,"offset":39969},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Making Your Own Character Classes","position":{"start":{"line":2214,"column":5,"offset":39975},"end":{"line":2214,"column":38,"offset":40008},"indent":[]}}],"position":{"start":{"line":2214,"column":1,"offset":39971},"end":{"line":2214,"column":38,"offset":40008},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are times when you want to match a set of characters but the shorthand character classes (\\d, \\w, \\s, and so on) are too broad. You can define your own character class using square brackets. For example, the character class ","position":{"start":{"line":2216,"column":1,"offset":40010},"end":{"line":2216,"column":231,"offset":40240},"indent":[]}},{"type":"linkReference","identifier":"aeiouaeiou","label":"aeiouAEIOU","referenceType":"shortcut","children":[{"type":"text","value":"aeiouAEIOU","position":{"start":{"line":2216,"column":232,"offset":40241},"end":{"line":2216,"column":242,"offset":40251},"indent":[]}}],"position":{"start":{"line":2216,"column":231,"offset":40240},"end":{"line":2216,"column":243,"offset":40252},"indent":[]}},{"type":"text","value":" will match any vowel, both lowercase and uppercase.","position":{"start":{"line":2216,"column":243,"offset":40252},"end":{"line":2216,"column":295,"offset":40304},"indent":[]}}],"position":{"start":{"line":2216,"column":1,"offset":40010},"end":{"line":2216,"column":295,"offset":40304},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"vowel_regex = re.compile(r'[aeiouAEIOU]')\nvowel_regex.findall('Robocop eats baby food. BABY FOOD.')","position":{"start":{"line":2218,"column":1,"offset":40306},"end":{"line":2221,"column":4,"offset":40419},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also include ranges of letters or numbers by using a hyphen. For example, the character class ","position":{"start":{"line":2223,"column":1,"offset":40421},"end":{"line":2223,"column":103,"offset":40523},"indent":[]}},{"type":"linkReference","identifier":"a-za-z0-9","label":"a-zA-Z0-9","referenceType":"shortcut","children":[{"type":"text","value":"a-zA-Z0-9","position":{"start":{"line":2223,"column":104,"offset":40524},"end":{"line":2223,"column":113,"offset":40533},"indent":[]}}],"position":{"start":{"line":2223,"column":103,"offset":40523},"end":{"line":2223,"column":114,"offset":40534},"indent":[]}},{"type":"text","value":" will match all lowercase letters, uppercase letters, and numbers.","position":{"start":{"line":2223,"column":114,"offset":40534},"end":{"line":2223,"column":180,"offset":40600},"indent":[]}}],"position":{"start":{"line":2223,"column":1,"offset":40421},"end":{"line":2223,"column":180,"offset":40600},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By placing a caret character (^) just after the character class's opening bracket, you can make a negative character class. A negative character class will match all the characters that are not in the character class. For example, enter the following into the interactive shell:","position":{"start":{"line":2225,"column":1,"offset":40602},"end":{"line":2225,"column":279,"offset":40880},"indent":[]}}],"position":{"start":{"line":2225,"column":1,"offset":40602},"end":{"line":2225,"column":279,"offset":40880},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"consonant_regex = re.compile(r'[^aeiouAEIOU]')\nconsonant_regex.findall('Robocop eats baby food. BABY FOOD.')","position":{"start":{"line":2227,"column":1,"offset":40882},"end":{"line":2230,"column":4,"offset":41004},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Caret and Dollar Sign Characters","position":{"start":{"line":2232,"column":5,"offset":41010},"end":{"line":2232,"column":41,"offset":41046},"indent":[]}}],"position":{"start":{"line":2232,"column":1,"offset":41006},"end":{"line":2232,"column":41,"offset":41046},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can also use the caret symbol (^) at the start of a regex to indicate that a match must occur at the beginning of the searched text.","position":{"start":{"line":2234,"column":5,"offset":41052},"end":{"line":2234,"column":141,"offset":41188},"indent":[]}}],"position":{"start":{"line":2234,"column":5,"offset":41052},"end":{"line":2234,"column":141,"offset":41188},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":41048},"end":{"line":2234,"column":141,"offset":41188},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2235,"column":1,"offset":41189},"end":{"line":2235,"column":2,"offset":41190},"indent":[]}}],"position":{"start":{"line":2235,"column":1,"offset":41189},"end":{"line":2235,"column":2,"offset":41190},"indent":[]}}],"position":{"start":{"line":2235,"column":1,"offset":41189},"end":{"line":2235,"column":2,"offset":41190},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Likewise, you can put a dollar sign ($) at the end of the regex to indicate the string must end with this regex pattern.","position":{"start":{"line":2236,"column":5,"offset":41195},"end":{"line":2236,"column":125,"offset":41315},"indent":[]}}],"position":{"start":{"line":2236,"column":5,"offset":41195},"end":{"line":2236,"column":125,"offset":41315},"indent":[]}}],"position":{"start":{"line":2236,"column":1,"offset":41191},"end":{"line":2237,"column":1,"offset":41316},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"And you can use the ^ and $ together to indicate that the entire string must match the regex—that is, it's not enough for a match to be made on some subset of the string.","position":{"start":{"line":2238,"column":5,"offset":41321},"end":{"line":2238,"column":175,"offset":41491},"indent":[]}}],"position":{"start":{"line":2238,"column":5,"offset":41321},"end":{"line":2238,"column":175,"offset":41491},"indent":[]}}],"position":{"start":{"line":2238,"column":1,"offset":41317},"end":{"line":2238,"column":175,"offset":41491},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":41048},"end":{"line":2238,"column":175,"offset":41491},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The r'^Hello' regular expression string matches strings that begin with 'Hello':","position":{"start":{"line":2240,"column":1,"offset":41493},"end":{"line":2240,"column":81,"offset":41573},"indent":[]}}],"position":{"start":{"line":2240,"column":1,"offset":41493},"end":{"line":2240,"column":81,"offset":41573},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"begins_with_hello = re.compile(r'^Hello')\nbegins_with_hello.search('Hello world!')","position":{"start":{"line":2242,"column":1,"offset":41575},"end":{"line":2245,"column":4,"offset":41671},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"begins_with_hello.search('He said hello.') is None","position":{"start":{"line":2247,"column":1,"offset":41673},"end":{"line":2249,"column":4,"offset":41737},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The r'\\d$' regular expression string matches strings that end with a numeric character from 0 to 9:","position":{"start":{"line":2251,"column":1,"offset":41739},"end":{"line":2251,"column":100,"offset":41838},"indent":[]}}],"position":{"start":{"line":2251,"column":1,"offset":41739},"end":{"line":2251,"column":100,"offset":41838},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num = re.compile(r'^\\d+$')\nwhole_string_is_num.search('1234567890')","position":{"start":{"line":2253,"column":1,"offset":41840},"end":{"line":2256,"column":4,"offset":41937},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num.search('12345xyz67890') is None","position":{"start":{"line":2258,"column":1,"offset":41939},"end":{"line":2260,"column":4,"offset":42004},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num.search('12 34567890') is None","position":{"start":{"line":2262,"column":1,"offset":42006},"end":{"line":2264,"column":4,"offset":42069},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Wildcard Character","position":{"start":{"line":2266,"column":5,"offset":42075},"end":{"line":2266,"column":27,"offset":42097},"indent":[]}}],"position":{"start":{"line":2266,"column":1,"offset":42071},"end":{"line":2266,"column":27,"offset":42097},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The . (or dot) character in a regular expression is called a wildcard and will match any character except for a newline:","position":{"start":{"line":2268,"column":1,"offset":42099},"end":{"line":2268,"column":121,"offset":42219},"indent":[]}}],"position":{"start":{"line":2268,"column":1,"offset":42099},"end":{"line":2268,"column":121,"offset":42219},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"at_regex = re.compile(r'.at')\nat_regex.findall('The cat in the hat sat on the flat mat.')","position":{"start":{"line":2270,"column":1,"offset":42221},"end":{"line":2273,"column":4,"offset":42324},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Everything with Dot-Star","position":{"start":{"line":2275,"column":5,"offset":42330},"end":{"line":2275,"column":38,"offset":42363},"indent":[]}}],"position":{"start":{"line":2275,"column":1,"offset":42326},"end":{"line":2275,"column":38,"offset":42363},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name_regex = re.compile(r'First Name: (.*) Last Name: (.*)')\nmo = name_regex.search('First Name: Some Last Name: One')\nmo.group(1)","position":{"start":{"line":2277,"column":1,"offset":42365},"end":{"line":2281,"column":4,"offset":42509},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(2)","position":{"start":{"line":2283,"column":1,"offset":42511},"end":{"line":2285,"column":4,"offset":42536},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The dot-star uses greedy mode: It will always try to match as much text as possible. To match any and all text in a nongreedy fashion, use the dot, star, and question mark (.","position":{"start":{"line":2287,"column":1,"offset":42538},"end":{"line":2287,"column":175,"offset":42712},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2287,"column":175,"offset":42712},"end":{"line":2287,"column":177,"offset":42714},"indent":[]}},{"type":"text","value":"?). The question mark tells Python to match in a nongreedy way:","position":{"start":{"line":2287,"column":177,"offset":42714},"end":{"line":2287,"column":240,"offset":42777},"indent":[]}}],"position":{"start":{"line":2287,"column":1,"offset":42538},"end":{"line":2287,"column":240,"offset":42777},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"nongreedy_regex = re.compile(r'<.*?>')\nmo = nongreedy_regex.search('<To serve man> for dinner.>')\nmo.group()","position":{"start":{"line":2289,"column":1,"offset":42779},"end":{"line":2293,"column":4,"offset":42901},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"greedy_regex = re.compile(r'<.*>')\nmo = greedy_regex.search('<To serve man> for dinner.>')\nmo.group()","position":{"start":{"line":2295,"column":1,"offset":42903},"end":{"line":2299,"column":4,"offset":43018},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Newlines with the Dot Character","position":{"start":{"line":2301,"column":5,"offset":43024},"end":{"line":2301,"column":45,"offset":43064},"indent":[]}}],"position":{"start":{"line":2301,"column":1,"offset":43020},"end":{"line":2301,"column":45,"offset":43064},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The dot-star will match everything except a newline. By passing re.DOTALL as the second argument to re.compile(), you can make the dot character match all characters, including the newline character:","position":{"start":{"line":2303,"column":1,"offset":43066},"end":{"line":2303,"column":200,"offset":43265},"indent":[]}}],"position":{"start":{"line":2303,"column":1,"offset":43066},"end":{"line":2303,"column":200,"offset":43265},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"no_newline_regex = re.compile('.*')\nno_newline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()","position":{"start":{"line":2305,"column":1,"offset":43267},"end":{"line":2308,"column":4,"offset":43415},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"newline_regex = re.compile('.*', re.DOTALL)\nnewline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()","position":{"start":{"line":2310,"column":1,"offset":43417},"end":{"line":2313,"column":4,"offset":43570},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Regex Symbols","position":{"start":{"line":2315,"column":5,"offset":43576},"end":{"line":2315,"column":28,"offset":43599},"indent":[]}}],"position":{"start":{"line":2315,"column":1,"offset":43572},"end":{"line":2315,"column":28,"offset":43599},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Symbol","position":{"start":{"line":2317,"column":3,"offset":43603},"end":{"line":2317,"column":9,"offset":43609},"indent":[]}}],"position":{"start":{"line":2317,"column":3,"offset":43603},"end":{"line":2317,"column":27,"offset":43627},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Matches","position":{"start":{"line":2317,"column":30,"offset":43630},"end":{"line":2317,"column":37,"offset":43637},"indent":[]}}],"position":{"start":{"line":2317,"column":30,"offset":43630},"end":{"line":2317,"column":90,"offset":43690},"indent":[]}}],"position":{"start":{"line":2317,"column":1,"offset":43601},"end":{"line":2317,"column":92,"offset":43692},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":2319,"column":3,"offset":43787},"end":{"line":2319,"column":6,"offset":43790},"indent":[]}}],"position":{"start":{"line":2319,"column":3,"offset":43787},"end":{"line":2319,"column":27,"offset":43811},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"zero or one of the preceding group.","position":{"start":{"line":2319,"column":30,"offset":43814},"end":{"line":2319,"column":65,"offset":43849},"indent":[]}}],"position":{"start":{"line":2319,"column":30,"offset":43814},"end":{"line":2319,"column":90,"offset":43874},"indent":[]}}],"position":{"start":{"line":2319,"column":1,"offset":43785},"end":{"line":2319,"column":92,"offset":43876},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"*","position":{"start":{"line":2320,"column":3,"offset":43879},"end":{"line":2320,"column":6,"offset":43882},"indent":[]}}],"position":{"start":{"line":2320,"column":3,"offset":43879},"end":{"line":2320,"column":27,"offset":43903},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"zero or more of the preceding group.","position":{"start":{"line":2320,"column":30,"offset":43906},"end":{"line":2320,"column":66,"offset":43942},"indent":[]}}],"position":{"start":{"line":2320,"column":30,"offset":43906},"end":{"line":2320,"column":90,"offset":43966},"indent":[]}}],"position":{"start":{"line":2320,"column":1,"offset":43877},"end":{"line":2320,"column":92,"offset":43968},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"+","position":{"start":{"line":2321,"column":3,"offset":43971},"end":{"line":2321,"column":6,"offset":43974},"indent":[]}}],"position":{"start":{"line":2321,"column":3,"offset":43971},"end":{"line":2321,"column":27,"offset":43995},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"one or more of the preceding group.","position":{"start":{"line":2321,"column":30,"offset":43998},"end":{"line":2321,"column":65,"offset":44033},"indent":[]}}],"position":{"start":{"line":2321,"column":30,"offset":43998},"end":{"line":2321,"column":90,"offset":44058},"indent":[]}}],"position":{"start":{"line":2321,"column":1,"offset":43969},"end":{"line":2321,"column":92,"offset":44060},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n}","position":{"start":{"line":2322,"column":3,"offset":44063},"end":{"line":2322,"column":8,"offset":44068},"indent":[]}}],"position":{"start":{"line":2322,"column":3,"offset":44063},"end":{"line":2322,"column":27,"offset":44087},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"exactly n of the preceding group.","position":{"start":{"line":2322,"column":30,"offset":44090},"end":{"line":2322,"column":63,"offset":44123},"indent":[]}}],"position":{"start":{"line":2322,"column":30,"offset":44090},"end":{"line":2322,"column":90,"offset":44150},"indent":[]}}],"position":{"start":{"line":2322,"column":1,"offset":44061},"end":{"line":2322,"column":92,"offset":44152},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,}","position":{"start":{"line":2323,"column":3,"offset":44155},"end":{"line":2323,"column":9,"offset":44161},"indent":[]}}],"position":{"start":{"line":2323,"column":3,"offset":44155},"end":{"line":2323,"column":27,"offset":44179},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"n or more of the preceding group.","position":{"start":{"line":2323,"column":30,"offset":44182},"end":{"line":2323,"column":63,"offset":44215},"indent":[]}}],"position":{"start":{"line":2323,"column":30,"offset":44182},"end":{"line":2323,"column":90,"offset":44242},"indent":[]}}],"position":{"start":{"line":2323,"column":1,"offset":44153},"end":{"line":2323,"column":92,"offset":44244},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{,m}","position":{"start":{"line":2324,"column":3,"offset":44247},"end":{"line":2324,"column":9,"offset":44253},"indent":[]}}],"position":{"start":{"line":2324,"column":3,"offset":44247},"end":{"line":2324,"column":27,"offset":44271},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"0 to m of the preceding group.","position":{"start":{"line":2324,"column":30,"offset":44274},"end":{"line":2324,"column":60,"offset":44304},"indent":[]}}],"position":{"start":{"line":2324,"column":30,"offset":44274},"end":{"line":2324,"column":90,"offset":44334},"indent":[]}}],"position":{"start":{"line":2324,"column":1,"offset":44245},"end":{"line":2324,"column":92,"offset":44336},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,m}","position":{"start":{"line":2325,"column":3,"offset":44339},"end":{"line":2325,"column":10,"offset":44346},"indent":[]}}],"position":{"start":{"line":2325,"column":3,"offset":44339},"end":{"line":2325,"column":27,"offset":44363},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"at least n and at most m of the preceding p.","position":{"start":{"line":2325,"column":30,"offset":44366},"end":{"line":2325,"column":74,"offset":44410},"indent":[]}}],"position":{"start":{"line":2325,"column":30,"offset":44366},"end":{"line":2325,"column":90,"offset":44426},"indent":[]}}],"position":{"start":{"line":2325,"column":1,"offset":44337},"end":{"line":2325,"column":92,"offset":44428},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,m}?","position":{"start":{"line":2326,"column":3,"offset":44431},"end":{"line":2326,"column":11,"offset":44439},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":2326,"column":11,"offset":44439},"end":{"line":2326,"column":15,"offset":44443},"indent":[]}},{"type":"inlineCode","value":"*?","position":{"start":{"line":2326,"column":15,"offset":44443},"end":{"line":2326,"column":19,"offset":44447},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":2326,"column":19,"offset":44447},"end":{"line":2326,"column":23,"offset":44451},"indent":[]}},{"type":"inlineCode","value":"+?","position":{"start":{"line":2326,"column":23,"offset":44451},"end":{"line":2326,"column":27,"offset":44455},"indent":[]}}],"position":{"start":{"line":2326,"column":3,"offset":44431},"end":{"line":2326,"column":27,"offset":44455},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"performs a nongreedy match of the preceding p.","position":{"start":{"line":2326,"column":30,"offset":44458},"end":{"line":2326,"column":76,"offset":44504},"indent":[]}}],"position":{"start":{"line":2326,"column":30,"offset":44458},"end":{"line":2326,"column":90,"offset":44518},"indent":[]}}],"position":{"start":{"line":2326,"column":1,"offset":44429},"end":{"line":2326,"column":92,"offset":44520},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"^spam","position":{"start":{"line":2327,"column":3,"offset":44523},"end":{"line":2327,"column":10,"offset":44530},"indent":[]}}],"position":{"start":{"line":2327,"column":3,"offset":44523},"end":{"line":2327,"column":27,"offset":44547},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"means the string must begin with spam.","position":{"start":{"line":2327,"column":30,"offset":44550},"end":{"line":2327,"column":68,"offset":44588},"indent":[]}}],"position":{"start":{"line":2327,"column":30,"offset":44550},"end":{"line":2327,"column":90,"offset":44610},"indent":[]}}],"position":{"start":{"line":2327,"column":1,"offset":44521},"end":{"line":2327,"column":92,"offset":44612},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam$","position":{"start":{"line":2328,"column":3,"offset":44615},"end":{"line":2328,"column":10,"offset":44622},"indent":[]}}],"position":{"start":{"line":2328,"column":3,"offset":44615},"end":{"line":2328,"column":27,"offset":44639},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"means the string must end with spam.","position":{"start":{"line":2328,"column":30,"offset":44642},"end":{"line":2328,"column":66,"offset":44678},"indent":[]}}],"position":{"start":{"line":2328,"column":30,"offset":44642},"end":{"line":2328,"column":90,"offset":44702},"indent":[]}}],"position":{"start":{"line":2328,"column":1,"offset":44613},"end":{"line":2328,"column":92,"offset":44704},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":".","position":{"start":{"line":2329,"column":3,"offset":44707},"end":{"line":2329,"column":6,"offset":44710},"indent":[]}}],"position":{"start":{"line":2329,"column":3,"offset":44707},"end":{"line":2329,"column":27,"offset":44731},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character, except newline characters.","position":{"start":{"line":2329,"column":30,"offset":44734},"end":{"line":2329,"column":71,"offset":44775},"indent":[]}}],"position":{"start":{"line":2329,"column":30,"offset":44734},"end":{"line":2329,"column":90,"offset":44794},"indent":[]}}],"position":{"start":{"line":2329,"column":1,"offset":44705},"end":{"line":2329,"column":92,"offset":44796},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\d","position":{"start":{"line":2330,"column":3,"offset":44799},"end":{"line":2330,"column":7,"offset":44803},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":2330,"column":7,"offset":44803},"end":{"line":2330,"column":9,"offset":44805},"indent":[]}},{"type":"inlineCode","value":"\\w","position":{"start":{"line":2330,"column":9,"offset":44805},"end":{"line":2330,"column":13,"offset":44809},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":2330,"column":13,"offset":44809},"end":{"line":2330,"column":19,"offset":44815},"indent":[]}},{"type":"inlineCode","value":"\\s","position":{"start":{"line":2330,"column":19,"offset":44815},"end":{"line":2330,"column":23,"offset":44819},"indent":[]}}],"position":{"start":{"line":2330,"column":3,"offset":44799},"end":{"line":2330,"column":27,"offset":44823},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"a digit, word, or space character, resectively.","position":{"start":{"line":2330,"column":30,"offset":44826},"end":{"line":2330,"column":77,"offset":44873},"indent":[]}}],"position":{"start":{"line":2330,"column":30,"offset":44826},"end":{"line":2330,"column":90,"offset":44886},"indent":[]}}],"position":{"start":{"line":2330,"column":1,"offset":44797},"end":{"line":2330,"column":92,"offset":44888},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\D","position":{"start":{"line":2331,"column":3,"offset":44891},"end":{"line":2331,"column":7,"offset":44895},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":2331,"column":7,"offset":44895},"end":{"line":2331,"column":9,"offset":44897},"indent":[]}},{"type":"inlineCode","value":"\\W","position":{"start":{"line":2331,"column":9,"offset":44897},"end":{"line":2331,"column":13,"offset":44901},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":2331,"column":13,"offset":44901},"end":{"line":2331,"column":19,"offset":44907},"indent":[]}},{"type":"inlineCode","value":"\\S","position":{"start":{"line":2331,"column":19,"offset":44907},"end":{"line":2331,"column":23,"offset":44911},"indent":[]}}],"position":{"start":{"line":2331,"column":3,"offset":44891},"end":{"line":2331,"column":27,"offset":44915},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"anything except a digit, word, or space acter, respectively.","position":{"start":{"line":2331,"column":30,"offset":44918},"end":{"line":2331,"column":90,"offset":44978},"indent":[]}}],"position":{"start":{"line":2331,"column":30,"offset":44918},"end":{"line":2331,"column":90,"offset":44978},"indent":[]}}],"position":{"start":{"line":2331,"column":1,"offset":44889},"end":{"line":2331,"column":92,"offset":44980},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"[abc]","position":{"start":{"line":2332,"column":3,"offset":44983},"end":{"line":2332,"column":10,"offset":44990},"indent":[]}}],"position":{"start":{"line":2332,"column":3,"offset":44983},"end":{"line":2332,"column":27,"offset":45007},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character between the brackets (such as a, b, ).","position":{"start":{"line":2332,"column":30,"offset":45010},"end":{"line":2332,"column":82,"offset":45062},"indent":[]}}],"position":{"start":{"line":2332,"column":30,"offset":45010},"end":{"line":2332,"column":90,"offset":45070},"indent":[]}}],"position":{"start":{"line":2332,"column":1,"offset":44981},"end":{"line":2332,"column":92,"offset":45072},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"[^abc]","position":{"start":{"line":2333,"column":3,"offset":45075},"end":{"line":2333,"column":11,"offset":45083},"indent":[]}}],"position":{"start":{"line":2333,"column":3,"offset":45075},"end":{"line":2333,"column":27,"offset":45099},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character that isn't between the brackets.","position":{"start":{"line":2333,"column":30,"offset":45102},"end":{"line":2333,"column":76,"offset":45148},"indent":[]}}],"position":{"start":{"line":2333,"column":30,"offset":45102},"end":{"line":2333,"column":90,"offset":45162},"indent":[]}}],"position":{"start":{"line":2333,"column":1,"offset":45073},"end":{"line":2333,"column":92,"offset":45164},"indent":[]}}],"position":{"start":{"line":2317,"column":1,"offset":43601},"end":{"line":2333,"column":92,"offset":45164},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Case-Insensitive Matching","position":{"start":{"line":2335,"column":5,"offset":45170},"end":{"line":2335,"column":30,"offset":45195},"indent":[]}}],"position":{"start":{"line":2335,"column":1,"offset":45166},"end":{"line":2335,"column":30,"offset":45195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To make your regex case-insensitive, you can pass re.IGNORECASE or re.I as a second argument to re.compile():","position":{"start":{"line":2337,"column":1,"offset":45197},"end":{"line":2337,"column":110,"offset":45306},"indent":[]}}],"position":{"start":{"line":2337,"column":1,"offset":45197},"end":{"line":2337,"column":110,"offset":45306},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"robocop = re.compile(r'robocop', re.I)\nrobocop.search('Robocop is part man, part machine, all cop.').group()","position":{"start":{"line":2339,"column":1,"offset":45308},"end":{"line":2342,"column":4,"offset":45430},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"robocop.search('ROBOCOP protects the innocent.').group()","position":{"start":{"line":2344,"column":1,"offset":45432},"end":{"line":2346,"column":4,"offset":45502},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"robocop.search('Al, why does your programming book talk about robocop so much?').group()","position":{"start":{"line":2348,"column":1,"offset":45504},"end":{"line":2350,"column":4,"offset":45606},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Substituting Strings with the sub() Method","position":{"start":{"line":2352,"column":5,"offset":45612},"end":{"line":2352,"column":47,"offset":45654},"indent":[]}}],"position":{"start":{"line":2352,"column":1,"offset":45608},"end":{"line":2352,"column":47,"offset":45654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The sub() method for Regex objects is passed two arguments:","position":{"start":{"line":2354,"column":1,"offset":45656},"end":{"line":2354,"column":60,"offset":45715},"indent":[]}}],"position":{"start":{"line":2354,"column":1,"offset":45656},"end":{"line":2354,"column":60,"offset":45715},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The first argument is a string to replace any matches.","position":{"start":{"line":2356,"column":4,"offset":45720},"end":{"line":2356,"column":58,"offset":45774},"indent":[]}}],"position":{"start":{"line":2356,"column":4,"offset":45720},"end":{"line":2356,"column":58,"offset":45774},"indent":[]}}],"position":{"start":{"line":2356,"column":1,"offset":45717},"end":{"line":2356,"column":58,"offset":45774},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The second is the string for the regular expression.","position":{"start":{"line":2357,"column":4,"offset":45778},"end":{"line":2357,"column":56,"offset":45830},"indent":[]}}],"position":{"start":{"line":2357,"column":4,"offset":45778},"end":{"line":2357,"column":56,"offset":45830},"indent":[]}}],"position":{"start":{"line":2357,"column":1,"offset":45775},"end":{"line":2357,"column":56,"offset":45830},"indent":[]}}],"position":{"start":{"line":2356,"column":1,"offset":45717},"end":{"line":2357,"column":56,"offset":45830},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The sub() method returns a string with the substitutions applied:","position":{"start":{"line":2359,"column":1,"offset":45832},"end":{"line":2359,"column":66,"offset":45897},"indent":[]}}],"position":{"start":{"line":2359,"column":1,"offset":45832},"end":{"line":2359,"column":66,"offset":45897},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"names_regex = re.compile(r'Agent \\w+')\nnames_regex.sub('CENSORED', 'Agent Alice gave the secret documents to Agent Bob.')","position":{"start":{"line":2361,"column":1,"offset":45899},"end":{"line":2364,"column":4,"offset":46034},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Another example:","position":{"start":{"line":2366,"column":1,"offset":46036},"end":{"line":2366,"column":17,"offset":46052},"indent":[]}}],"position":{"start":{"line":2366,"column":1,"offset":46036},"end":{"line":2366,"column":17,"offset":46052},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"agent_names_regex = re.compile(r'Agent (\\w)\\w*')\nagent_names_regex.sub(r'\\1****', 'Agent Alice told Agent Carol that Agent Eve knew Agent Bob was a double agent.')","position":{"start":{"line":2368,"column":1,"offset":46054},"end":{"line":2371,"column":4,"offset":46231},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Managing Complex Regexes","position":{"start":{"line":2373,"column":5,"offset":46237},"end":{"line":2373,"column":29,"offset":46261},"indent":[]}}],"position":{"start":{"line":2373,"column":1,"offset":46233},"end":{"line":2373,"column":29,"offset":46261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To tell the re.compile() function to ignore whitespace and comments inside the regular expression string, \"verbose mode\" can be enabled by passing the variable re.VERBOSE as the second argument to re.compile().","position":{"start":{"line":2375,"column":1,"offset":46263},"end":{"line":2375,"column":211,"offset":46473},"indent":[]}}],"position":{"start":{"line":2375,"column":1,"offset":46263},"end":{"line":2375,"column":211,"offset":46473},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now instead of a hard-to-read regular expression like this:","position":{"start":{"line":2377,"column":1,"offset":46475},"end":{"line":2377,"column":60,"offset":46534},"indent":[]}}],"position":{"start":{"line":2377,"column":1,"offset":46475},"end":{"line":2377,"column":60,"offset":46534},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_regex = re.compile(r'((\\d{3}|\\(\\d{3}\\))?(\\s|-|\\.)?\\d{3}(\\s|-|\\.)\\d{4}(\\s*(ext|x|ext.)\\s*\\d{2,5})?)')","position":{"start":{"line":2379,"column":1,"offset":46536},"end":{"line":2381,"column":4,"offset":46656},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"you can spread the regular expression over multiple lines with comments like this:","position":{"start":{"line":2383,"column":1,"offset":46658},"end":{"line":2383,"column":83,"offset":46740},"indent":[]}}],"position":{"start":{"line":2383,"column":1,"offset":46658},"end":{"line":2383,"column":83,"offset":46740},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_regex = re.compile(r'''(\n    (\\d{3}|\\(\\d{3}\\))?            # area code\n    (\\s|-|\\.)?                    # separator\n    \\d{3}                         # first 3 digits\n    (\\s|-|\\.)                     # separator\n    \\d{4}                         # last 4 digits\n    (\\s*(ext|x|ext.)\\s*\\d{2,5})?  # extension\n    )''', re.VERBOSE)","position":{"start":{"line":2385,"column":1,"offset":46742},"end":{"line":2394,"column":4,"offset":47093},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Handling File and Directory Paths","position":{"start":{"line":2396,"column":4,"offset":47098},"end":{"line":2396,"column":37,"offset":47131},"indent":[]}}],"position":{"start":{"line":2396,"column":1,"offset":47095},"end":{"line":2396,"column":37,"offset":47131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two main modules in Python that deals with path manipulation.\nOne is the ","position":{"start":{"line":2398,"column":1,"offset":47133},"end":{"line":2399,"column":12,"offset":47216},"indent":[1]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2399,"column":12,"offset":47216},"end":{"line":2399,"column":21,"offset":47225},"indent":[]}},{"type":"text","value":" module and the other is the ","position":{"start":{"line":2399,"column":21,"offset":47225},"end":{"line":2399,"column":50,"offset":47254},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2399,"column":50,"offset":47254},"end":{"line":2399,"column":59,"offset":47263},"indent":[]}},{"type":"text","value":" module.\nThe ","position":{"start":{"line":2399,"column":59,"offset":47263},"end":{"line":2400,"column":5,"offset":47276},"indent":[1]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2400,"column":5,"offset":47276},"end":{"line":2400,"column":14,"offset":47285},"indent":[]}},{"type":"text","value":" module was added in Python 3.4, offering an object-oriented way\nto handle file system paths.","position":{"start":{"line":2400,"column":14,"offset":47285},"end":{"line":2401,"column":29,"offset":47378},"indent":[1]}}],"position":{"start":{"line":2398,"column":1,"offset":47133},"end":{"line":2401,"column":29,"offset":47378},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Backslash on Windows and Forward Slash on OS X and Linux","position":{"start":{"line":2403,"column":5,"offset":47384},"end":{"line":2403,"column":61,"offset":47440},"indent":[]}}],"position":{"start":{"line":2403,"column":1,"offset":47380},"end":{"line":2403,"column":61,"offset":47440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On Windows, paths are written using backslashes (","position":{"start":{"line":2405,"column":1,"offset":47442},"end":{"line":2405,"column":50,"offset":47491},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":2405,"column":50,"offset":47491},"end":{"line":2405,"column":52,"offset":47493},"indent":[]}},{"type":"text","value":" as the separator between\nfolder names. On Unix based operating system such as macOS, Linux, and BSDs,\nthe forward slash (/) is used as the path separator. Joining paths can be\na headache if your code needs to work on different platforms.","position":{"start":{"line":2405,"column":52,"offset":47493},"end":{"line":2408,"column":62,"offset":47731},"indent":[1,1,1]}}],"position":{"start":{"line":2405,"column":1,"offset":47442},"end":{"line":2408,"column":62,"offset":47731},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Fortunately, Python provides easy ways to handle this. We will showcase\nhow to deal with this with both ","position":{"start":{"line":2410,"column":1,"offset":47733},"end":{"line":2411,"column":33,"offset":47837},"indent":[1]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2411,"column":33,"offset":47837},"end":{"line":2411,"column":47,"offset":47851},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2411,"column":47,"offset":47851},"end":{"line":2411,"column":52,"offset":47856},"indent":[]}},{"type":"inlineCode","value":"pathlib.Path.joinpath","position":{"start":{"line":2411,"column":52,"offset":47856},"end":{"line":2411,"column":75,"offset":47879},"indent":[]}}],"position":{"start":{"line":2410,"column":1,"offset":47733},"end":{"line":2411,"column":75,"offset":47879},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2413,"column":1,"offset":47881},"end":{"line":2413,"column":7,"offset":47887},"indent":[]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2413,"column":7,"offset":47887},"end":{"line":2413,"column":21,"offset":47901},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2413,"column":21,"offset":47901},"end":{"line":2413,"column":33,"offset":47913},"indent":[]}}],"position":{"start":{"line":2413,"column":1,"offset":47881},"end":{"line":2413,"column":33,"offset":47913},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.join('usr', 'bin', 'spam')","position":{"start":{"line":2415,"column":1,"offset":47915},"end":{"line":2419,"column":4,"offset":47974},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And using ","position":{"start":{"line":2421,"column":1,"offset":47976},"end":{"line":2421,"column":11,"offset":47986},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2421,"column":11,"offset":47986},"end":{"line":2421,"column":20,"offset":47995},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2421,"column":20,"offset":47995},"end":{"line":2421,"column":24,"offset":47999},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2421,"column":24,"offset":47999},"end":{"line":2421,"column":26,"offset":48001},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2421,"column":26,"offset":48001},"end":{"line":2421,"column":30,"offset":48005},"indent":[]}}],"position":{"start":{"line":2421,"column":1,"offset":47976},"end":{"line":2421,"column":30,"offset":48005},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('usr').joinpath('bin').joinpath('spam'))","position":{"start":{"line":2423,"column":1,"offset":48007},"end":{"line":2427,"column":4,"offset":48098},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2429,"column":1,"offset":48100},"end":{"line":2429,"column":10,"offset":48109},"indent":[]}},{"type":"text","value":" also provides a shortcut to joinpath using the ","position":{"start":{"line":2429,"column":10,"offset":48109},"end":{"line":2429,"column":58,"offset":48157},"indent":[]}},{"type":"inlineCode","value":"/","position":{"start":{"line":2429,"column":58,"offset":48157},"end":{"line":2429,"column":61,"offset":48160},"indent":[]}},{"type":"text","value":" operator:","position":{"start":{"line":2429,"column":61,"offset":48160},"end":{"line":2429,"column":71,"offset":48170},"indent":[]}}],"position":{"start":{"line":2429,"column":1,"offset":48100},"end":{"line":2429,"column":71,"offset":48170},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('usr') / 'bin' / 'spam')","position":{"start":{"line":2431,"column":1,"offset":48172},"end":{"line":2435,"column":4,"offset":48247},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice the path separator is different between Windows and Unix based operating\nsystem, that's why you want to use one of the above methods instead of\nadding strings together to join paths together.","position":{"start":{"line":2437,"column":1,"offset":48249},"end":{"line":2439,"column":48,"offset":48447},"indent":[1,1]}}],"position":{"start":{"line":2437,"column":1,"offset":48249},"end":{"line":2439,"column":48,"offset":48447},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Joining paths is helpful if you need to create different file paths under\nthe same directory.","position":{"start":{"line":2441,"column":1,"offset":48449},"end":{"line":2442,"column":20,"offset":48542},"indent":[1]}}],"position":{"start":{"line":2441,"column":1,"offset":48449},"end":{"line":2442,"column":20,"offset":48542},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2444,"column":1,"offset":48544},"end":{"line":2444,"column":7,"offset":48550},"indent":[]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2444,"column":7,"offset":48550},"end":{"line":2444,"column":21,"offset":48564},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2444,"column":21,"offset":48564},"end":{"line":2444,"column":33,"offset":48576},"indent":[]}}],"position":{"start":{"line":2444,"column":1,"offset":48544},"end":{"line":2444,"column":33,"offset":48576},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"my_files = ['accounts.txt', 'details.csv', 'invite.docx']\n\nfor filename in my_files:\n    print(os.path.join('C:\\\\Users\\\\asweigart', filename))","position":{"start":{"line":2446,"column":1,"offset":48578},"end":{"line":2451,"column":4,"offset":48734},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2453,"column":1,"offset":48736},"end":{"line":2453,"column":7,"offset":48742},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2453,"column":7,"offset":48742},"end":{"line":2453,"column":16,"offset":48751},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2453,"column":16,"offset":48751},"end":{"line":2453,"column":20,"offset":48755},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2453,"column":20,"offset":48755},"end":{"line":2453,"column":22,"offset":48757},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2453,"column":22,"offset":48757},"end":{"line":2453,"column":26,"offset":48761},"indent":[]}}],"position":{"start":{"line":2453,"column":1,"offset":48736},"end":{"line":2453,"column":26,"offset":48761},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"my_files = ['accounts.txt', 'details.csv', 'invite.docx']\nhome = Path.home()\nfor filename in my_files:\n    print(home / filename)","position":{"start":{"line":2455,"column":1,"offset":48763},"end":{"line":2460,"column":4,"offset":48906},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Current Working Directory","position":{"start":{"line":2462,"column":5,"offset":48912},"end":{"line":2462,"column":34,"offset":48941},"indent":[]}}],"position":{"start":{"line":2462,"column":1,"offset":48908},"end":{"line":2462,"column":34,"offset":48941},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2464,"column":1,"offset":48943},"end":{"line":2464,"column":7,"offset":48949},"indent":[]}},{"type":"inlineCode","value":"os","position":{"start":{"line":2464,"column":7,"offset":48949},"end":{"line":2464,"column":11,"offset":48953},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2464,"column":11,"offset":48953},"end":{"line":2464,"column":23,"offset":48965},"indent":[]}}],"position":{"start":{"line":2464,"column":1,"offset":48943},"end":{"line":2464,"column":23,"offset":48965},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.getcwd()","position":{"start":{"line":2466,"column":1,"offset":48967},"end":{"line":2470,"column":4,"offset":49003},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.chdir('C:\\\\Windows\\\\System32')\nos.getcwd()","position":{"start":{"line":2472,"column":1,"offset":49005},"end":{"line":2475,"column":4,"offset":49064},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2477,"column":1,"offset":49066},"end":{"line":2477,"column":7,"offset":49072},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2477,"column":7,"offset":49072},"end":{"line":2477,"column":16,"offset":49081},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2477,"column":16,"offset":49081},"end":{"line":2477,"column":20,"offset":49085},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2477,"column":20,"offset":49085},"end":{"line":2477,"column":22,"offset":49087},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2477,"column":22,"offset":49087},"end":{"line":2477,"column":26,"offset":49091},"indent":[]}}],"position":{"start":{"line":2477,"column":1,"offset":49066},"end":{"line":2477,"column":26,"offset":49091},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nfrom os import chdir\n\nprint(Path.cwd())","position":{"start":{"line":2479,"column":1,"offset":49093},"end":{"line":2484,"column":4,"offset":49171},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"chdir('/usr/lib/python3.6')\nprint(Path.cwd())","position":{"start":{"line":2486,"column":1,"offset":49173},"end":{"line":2489,"column":4,"offset":49232},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating New Folders","position":{"start":{"line":2491,"column":5,"offset":49238},"end":{"line":2491,"column":25,"offset":49258},"indent":[]}}],"position":{"start":{"line":2491,"column":1,"offset":49234},"end":{"line":2491,"column":25,"offset":49258},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2493,"column":1,"offset":49260},"end":{"line":2493,"column":7,"offset":49266},"indent":[]}},{"type":"inlineCode","value":"os","position":{"start":{"line":2493,"column":7,"offset":49266},"end":{"line":2493,"column":11,"offset":49270},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2493,"column":11,"offset":49270},"end":{"line":2493,"column":23,"offset":49282},"indent":[]}}],"position":{"start":{"line":2493,"column":1,"offset":49260},"end":{"line":2493,"column":23,"offset":49282},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.makedirs('C:\\\\delicious\\\\walnut\\\\waffles')","position":{"start":{"line":2495,"column":1,"offset":49284},"end":{"line":2499,"column":4,"offset":49354},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2501,"column":1,"offset":49356},"end":{"line":2501,"column":7,"offset":49362},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2501,"column":7,"offset":49362},"end":{"line":2501,"column":16,"offset":49371},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2501,"column":16,"offset":49371},"end":{"line":2501,"column":20,"offset":49375},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2501,"column":20,"offset":49375},"end":{"line":2501,"column":22,"offset":49377},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2501,"column":22,"offset":49377},"end":{"line":2501,"column":26,"offset":49381},"indent":[]}}],"position":{"start":{"line":2501,"column":1,"offset":49356},"end":{"line":2501,"column":26,"offset":49381},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ncwd = Path.cwd()\n(cwd / 'delicious' / 'walnut' / 'waffles').mkdir()","position":{"start":{"line":2503,"column":1,"offset":49383},"end":{"line":2507,"column":4,"offset":49489},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Oh no, we got a nasty error! The reason is that the 'delicious' directory does\nnot exist, so we cannot make the 'walnut' and the 'waffles' directories under\nit. To fix this, do:","position":{"start":{"line":2509,"column":1,"offset":49491},"end":{"line":2511,"column":21,"offset":49668},"indent":[1,1]}}],"position":{"start":{"line":2509,"column":1,"offset":49491},"end":{"line":2511,"column":21,"offset":49668},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ncwd = Path.cwd()\n(cwd / 'delicious' / 'walnut' / 'waffles').mkdir(parents=True)","position":{"start":{"line":2513,"column":1,"offset":49670},"end":{"line":2517,"column":4,"offset":49788},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And all is good :)","position":{"start":{"line":2519,"column":1,"offset":49790},"end":{"line":2519,"column":19,"offset":49808},"indent":[]}}],"position":{"start":{"line":2519,"column":1,"offset":49790},"end":{"line":2519,"column":19,"offset":49808},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Absolute vs. Relative Paths","position":{"start":{"line":2521,"column":5,"offset":49814},"end":{"line":2521,"column":32,"offset":49841},"indent":[]}}],"position":{"start":{"line":2521,"column":1,"offset":49810},"end":{"line":2521,"column":32,"offset":49841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to specify a file path.","position":{"start":{"line":2523,"column":1,"offset":49843},"end":{"line":2523,"column":43,"offset":49885},"indent":[]}}],"position":{"start":{"line":2523,"column":1,"offset":49843},"end":{"line":2523,"column":43,"offset":49885},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An absolute path, which always begins with the root folder","position":{"start":{"line":2525,"column":5,"offset":49891},"end":{"line":2525,"column":63,"offset":49949},"indent":[]}}],"position":{"start":{"line":2525,"column":5,"offset":49891},"end":{"line":2525,"column":63,"offset":49949},"indent":[]}}],"position":{"start":{"line":2525,"column":1,"offset":49887},"end":{"line":2525,"column":63,"offset":49949},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A relative path, which is relative to the program's current working directory","position":{"start":{"line":2526,"column":5,"offset":49954},"end":{"line":2526,"column":82,"offset":50031},"indent":[]}}],"position":{"start":{"line":2526,"column":5,"offset":49954},"end":{"line":2526,"column":82,"offset":50031},"indent":[]}}],"position":{"start":{"line":2526,"column":1,"offset":49950},"end":{"line":2526,"column":82,"offset":50031},"indent":[]}}],"position":{"start":{"line":2525,"column":1,"offset":49887},"end":{"line":2526,"column":82,"offset":50031},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There are also the dot (.) and dot-dot (..) folders. These are not real folders but special names that can be used in a path. A single period (\"dot\") for a folder name is shorthand for \"this directory.\" Two periods (\"dot-dot\") means \"the parent folder.\"","position":{"start":{"line":2528,"column":1,"offset":50033},"end":{"line":2528,"column":254,"offset":50286},"indent":[]}}],"position":{"start":{"line":2528,"column":1,"offset":50033},"end":{"line":2528,"column":254,"offset":50286},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Handling Absolute and Relative Paths","position":{"start":{"line":2530,"column":5,"offset":50292},"end":{"line":2530,"column":41,"offset":50328},"indent":[]}}],"position":{"start":{"line":2530,"column":1,"offset":50288},"end":{"line":2530,"column":41,"offset":50328},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To see if a path is an absolute path:","position":{"start":{"line":2532,"column":1,"offset":50330},"end":{"line":2532,"column":38,"offset":50367},"indent":[]}}],"position":{"start":{"line":2532,"column":1,"offset":50330},"end":{"line":2532,"column":38,"offset":50367},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2534,"column":1,"offset":50369},"end":{"line":2534,"column":7,"offset":50375},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2534,"column":7,"offset":50375},"end":{"line":2534,"column":16,"offset":50384},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2534,"column":16,"offset":50384},"end":{"line":2534,"column":20,"offset":50388},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2534,"column":20,"offset":50388},"end":{"line":2534,"column":22,"offset":50390},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2534,"column":22,"offset":50390},"end":{"line":2534,"column":26,"offset":50394},"indent":[]}}],"position":{"start":{"line":2534,"column":1,"offset":50369},"end":{"line":2534,"column":26,"offset":50394},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.isabs('/')","position":{"start":{"line":2536,"column":1,"offset":50396},"end":{"line":2540,"column":4,"offset":50439},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isabs('..')","position":{"start":{"line":2542,"column":1,"offset":50441},"end":{"line":2544,"column":4,"offset":50474},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2546,"column":1,"offset":50476},"end":{"line":2546,"column":7,"offset":50482},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2546,"column":7,"offset":50482},"end":{"line":2546,"column":16,"offset":50491},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2546,"column":16,"offset":50491},"end":{"line":2546,"column":20,"offset":50495},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2546,"column":20,"offset":50495},"end":{"line":2546,"column":22,"offset":50497},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2546,"column":22,"offset":50497},"end":{"line":2546,"column":26,"offset":50501},"indent":[]}}],"position":{"start":{"line":2546,"column":1,"offset":50476},"end":{"line":2546,"column":26,"offset":50501},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nPath('/').is_absolute()","position":{"start":{"line":2548,"column":1,"offset":50503},"end":{"line":2551,"column":4,"offset":50565},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('..').is_absolute()","position":{"start":{"line":2553,"column":1,"offset":50567},"end":{"line":2555,"column":4,"offset":50605},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can extract an absolute path with both ","position":{"start":{"line":2557,"column":1,"offset":50607},"end":{"line":2557,"column":44,"offset":50650},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2557,"column":44,"offset":50650},"end":{"line":2557,"column":53,"offset":50659},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2557,"column":53,"offset":50659},"end":{"line":2557,"column":58,"offset":50664},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2557,"column":58,"offset":50664},"end":{"line":2557,"column":67,"offset":50673},"indent":[]}}],"position":{"start":{"line":2557,"column":1,"offset":50607},"end":{"line":2557,"column":67,"offset":50673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2559,"column":1,"offset":50675},"end":{"line":2559,"column":7,"offset":50681},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2559,"column":7,"offset":50681},"end":{"line":2559,"column":16,"offset":50690},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2559,"column":16,"offset":50690},"end":{"line":2559,"column":20,"offset":50694},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2559,"column":20,"offset":50694},"end":{"line":2559,"column":22,"offset":50696},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2559,"column":22,"offset":50696},"end":{"line":2559,"column":26,"offset":50700},"indent":[]}}],"position":{"start":{"line":2559,"column":1,"offset":50675},"end":{"line":2559,"column":26,"offset":50700},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.getcwd()","position":{"start":{"line":2561,"column":1,"offset":50702},"end":{"line":2565,"column":4,"offset":50738},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.abspath('..')","position":{"start":{"line":2567,"column":1,"offset":50740},"end":{"line":2569,"column":4,"offset":50775},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2571,"column":1,"offset":50777},"end":{"line":2571,"column":7,"offset":50783},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2571,"column":7,"offset":50783},"end":{"line":2571,"column":16,"offset":50792},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2571,"column":16,"offset":50792},"end":{"line":2571,"column":20,"offset":50796},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2571,"column":20,"offset":50796},"end":{"line":2571,"column":22,"offset":50798},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2571,"column":22,"offset":50798},"end":{"line":2571,"column":26,"offset":50802},"indent":[]}}],"position":{"start":{"line":2571,"column":1,"offset":50777},"end":{"line":2571,"column":26,"offset":50802},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path.cwd())","position":{"start":{"line":2573,"column":1,"offset":50804},"end":{"line":2577,"column":4,"offset":50861},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(Path('..').resolve())","position":{"start":{"line":2579,"column":1,"offset":50863},"end":{"line":2581,"column":4,"offset":50904},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can get a relative path from a starting path to another path.","position":{"start":{"line":2583,"column":1,"offset":50906},"end":{"line":2583,"column":66,"offset":50971},"indent":[]}}],"position":{"start":{"line":2583,"column":1,"offset":50906},"end":{"line":2583,"column":66,"offset":50971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2585,"column":1,"offset":50973},"end":{"line":2585,"column":7,"offset":50979},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2585,"column":7,"offset":50979},"end":{"line":2585,"column":16,"offset":50988},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2585,"column":16,"offset":50988},"end":{"line":2585,"column":20,"offset":50992},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2585,"column":20,"offset":50992},"end":{"line":2585,"column":22,"offset":50994},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2585,"column":22,"offset":50994},"end":{"line":2585,"column":26,"offset":50998},"indent":[]}}],"position":{"start":{"line":2585,"column":1,"offset":50973},"end":{"line":2585,"column":26,"offset":50998},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.relpath('/etc/passwd', '/')","position":{"start":{"line":2587,"column":1,"offset":51000},"end":{"line":2591,"column":4,"offset":51060},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2593,"column":1,"offset":51062},"end":{"line":2593,"column":7,"offset":51068},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2593,"column":7,"offset":51068},"end":{"line":2593,"column":16,"offset":51077},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2593,"column":16,"offset":51077},"end":{"line":2593,"column":20,"offset":51081},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2593,"column":20,"offset":51081},"end":{"line":2593,"column":22,"offset":51083},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2593,"column":22,"offset":51083},"end":{"line":2593,"column":26,"offset":51087},"indent":[]}}],"position":{"start":{"line":2593,"column":1,"offset":51062},"end":{"line":2593,"column":26,"offset":51087},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('/etc/passwd').relative_to('/'))","position":{"start":{"line":2595,"column":1,"offset":51089},"end":{"line":2599,"column":4,"offset":51172},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Checking Path Validity","position":{"start":{"line":2601,"column":5,"offset":51178},"end":{"line":2601,"column":27,"offset":51200},"indent":[]}}],"position":{"start":{"line":2601,"column":1,"offset":51174},"end":{"line":2601,"column":27,"offset":51200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a file/directory exists:","position":{"start":{"line":2603,"column":1,"offset":51202},"end":{"line":2603,"column":37,"offset":51238},"indent":[]}}],"position":{"start":{"line":2603,"column":1,"offset":51202},"end":{"line":2603,"column":37,"offset":51238},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2605,"column":1,"offset":51240},"end":{"line":2605,"column":7,"offset":51246},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2605,"column":7,"offset":51246},"end":{"line":2605,"column":16,"offset":51255},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2605,"column":16,"offset":51255},"end":{"line":2605,"column":20,"offset":51259},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2605,"column":20,"offset":51259},"end":{"line":2605,"column":22,"offset":51261},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2605,"column":22,"offset":51261},"end":{"line":2605,"column":26,"offset":51265},"indent":[]}}],"position":{"start":{"line":2605,"column":1,"offset":51240},"end":{"line":2605,"column":26,"offset":51265},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.exists('.')","position":{"start":{"line":2607,"column":1,"offset":51267},"end":{"line":2610,"column":4,"offset":51310},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('setup.py')","position":{"start":{"line":2612,"column":1,"offset":51312},"end":{"line":2614,"column":4,"offset":51352},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('/etc')","position":{"start":{"line":2616,"column":1,"offset":51354},"end":{"line":2618,"column":4,"offset":51390},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('nonexistentfile')","position":{"start":{"line":2620,"column":1,"offset":51392},"end":{"line":2622,"column":4,"offset":51439},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2624,"column":1,"offset":51441},"end":{"line":2624,"column":7,"offset":51447},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2624,"column":7,"offset":51447},"end":{"line":2624,"column":16,"offset":51456},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2624,"column":16,"offset":51456},"end":{"line":2624,"column":20,"offset":51460},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2624,"column":20,"offset":51460},"end":{"line":2624,"column":22,"offset":51462},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2624,"column":22,"offset":51462},"end":{"line":2624,"column":26,"offset":51466},"indent":[]}}],"position":{"start":{"line":2624,"column":1,"offset":51441},"end":{"line":2624,"column":26,"offset":51466},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nPath('.').exists()","position":{"start":{"line":2626,"column":1,"offset":51468},"end":{"line":2629,"column":4,"offset":51525},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('setup.py').exists()","position":{"start":{"line":2631,"column":1,"offset":51527},"end":{"line":2633,"column":4,"offset":51566},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/etc').exists()","position":{"start":{"line":2635,"column":1,"offset":51568},"end":{"line":2637,"column":4,"offset":51603},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('nonexistentfile').exists()","position":{"start":{"line":2639,"column":1,"offset":51605},"end":{"line":2641,"column":4,"offset":51651},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a path is a file:","position":{"start":{"line":2643,"column":1,"offset":51653},"end":{"line":2643,"column":30,"offset":51682},"indent":[]}}],"position":{"start":{"line":2643,"column":1,"offset":51653},"end":{"line":2643,"column":30,"offset":51682},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2645,"column":1,"offset":51684},"end":{"line":2645,"column":7,"offset":51690},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2645,"column":7,"offset":51690},"end":{"line":2645,"column":16,"offset":51699},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2645,"column":16,"offset":51699},"end":{"line":2645,"column":20,"offset":51703},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2645,"column":20,"offset":51703},"end":{"line":2645,"column":22,"offset":51705},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2645,"column":22,"offset":51705},"end":{"line":2645,"column":26,"offset":51709},"indent":[]}}],"position":{"start":{"line":2645,"column":1,"offset":51684},"end":{"line":2645,"column":26,"offset":51709},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.isfile('setup.py')","position":{"start":{"line":2647,"column":1,"offset":51711},"end":{"line":2650,"column":4,"offset":51761},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isfile('/home')","position":{"start":{"line":2652,"column":1,"offset":51763},"end":{"line":2654,"column":4,"offset":51800},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isfile('nonexistentfile')","position":{"start":{"line":2656,"column":1,"offset":51802},"end":{"line":2658,"column":4,"offset":51849},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2660,"column":1,"offset":51851},"end":{"line":2660,"column":7,"offset":51857},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2660,"column":7,"offset":51857},"end":{"line":2660,"column":16,"offset":51866},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2660,"column":16,"offset":51866},"end":{"line":2660,"column":20,"offset":51870},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2660,"column":20,"offset":51870},"end":{"line":2660,"column":22,"offset":51872},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2660,"column":22,"offset":51872},"end":{"line":2660,"column":26,"offset":51876},"indent":[]}}],"position":{"start":{"line":2660,"column":1,"offset":51851},"end":{"line":2660,"column":26,"offset":51876},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nPath('setup.py').is_file()","position":{"start":{"line":2662,"column":1,"offset":51878},"end":{"line":2666,"column":4,"offset":51944},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/home').is_file()","position":{"start":{"line":2668,"column":1,"offset":51946},"end":{"line":2670,"column":4,"offset":51983},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('nonexistentfile').is_file()","position":{"start":{"line":2672,"column":1,"offset":51985},"end":{"line":2674,"column":4,"offset":52032},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a path is a directory:","position":{"start":{"line":2676,"column":1,"offset":52034},"end":{"line":2676,"column":35,"offset":52068},"indent":[]}}],"position":{"start":{"line":2676,"column":1,"offset":52034},"end":{"line":2676,"column":35,"offset":52068},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2678,"column":1,"offset":52070},"end":{"line":2678,"column":7,"offset":52076},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2678,"column":7,"offset":52076},"end":{"line":2678,"column":16,"offset":52085},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2678,"column":16,"offset":52085},"end":{"line":2678,"column":20,"offset":52089},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2678,"column":20,"offset":52089},"end":{"line":2678,"column":22,"offset":52091},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2678,"column":22,"offset":52091},"end":{"line":2678,"column":26,"offset":52095},"indent":[]}}],"position":{"start":{"line":2678,"column":1,"offset":52070},"end":{"line":2678,"column":26,"offset":52095},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.isdir('/')","position":{"start":{"line":2680,"column":1,"offset":52097},"end":{"line":2683,"column":4,"offset":52139},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isdir('setup.py')","position":{"start":{"line":2685,"column":1,"offset":52141},"end":{"line":2687,"column":4,"offset":52180},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isdir('/spam')","position":{"start":{"line":2689,"column":1,"offset":52182},"end":{"line":2691,"column":4,"offset":52218},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2693,"column":1,"offset":52220},"end":{"line":2693,"column":7,"offset":52226},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2693,"column":7,"offset":52226},"end":{"line":2693,"column":16,"offset":52235},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2693,"column":16,"offset":52235},"end":{"line":2693,"column":20,"offset":52239},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2693,"column":20,"offset":52239},"end":{"line":2693,"column":22,"offset":52241},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2693,"column":22,"offset":52241},"end":{"line":2693,"column":26,"offset":52245},"indent":[]}}],"position":{"start":{"line":2693,"column":1,"offset":52220},"end":{"line":2693,"column":26,"offset":52245},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nPath('/').is_dir()","position":{"start":{"line":2695,"column":1,"offset":52247},"end":{"line":2699,"column":4,"offset":52305},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('setup.py').is_dir()","position":{"start":{"line":2701,"column":1,"offset":52307},"end":{"line":2703,"column":4,"offset":52346},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/spam').is_dir()","position":{"start":{"line":2705,"column":1,"offset":52348},"end":{"line":2707,"column":4,"offset":52384},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Finding File Sizes and Folder Contents","position":{"start":{"line":2709,"column":5,"offset":52390},"end":{"line":2709,"column":43,"offset":52428},"indent":[]}}],"position":{"start":{"line":2709,"column":1,"offset":52386},"end":{"line":2709,"column":43,"offset":52428},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Getting a file's size in bytes:","position":{"start":{"line":2711,"column":1,"offset":52430},"end":{"line":2711,"column":32,"offset":52461},"indent":[]}}],"position":{"start":{"line":2711,"column":1,"offset":52430},"end":{"line":2711,"column":32,"offset":52461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2713,"column":1,"offset":52463},"end":{"line":2713,"column":7,"offset":52469},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2713,"column":7,"offset":52469},"end":{"line":2713,"column":16,"offset":52478},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2713,"column":16,"offset":52478},"end":{"line":2713,"column":28,"offset":52490},"indent":[]}}],"position":{"start":{"line":2713,"column":1,"offset":52463},"end":{"line":2713,"column":28,"offset":52490},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.getsize('C:\\\\Windows\\\\System32\\\\calc.exe')","position":{"start":{"line":2715,"column":1,"offset":52492},"end":{"line":2718,"column":4,"offset":52566},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2720,"column":1,"offset":52568},"end":{"line":2720,"column":7,"offset":52574},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2720,"column":7,"offset":52574},"end":{"line":2720,"column":16,"offset":52583},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2720,"column":16,"offset":52583},"end":{"line":2720,"column":20,"offset":52587},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2720,"column":20,"offset":52587},"end":{"line":2720,"column":22,"offset":52589},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2720,"column":22,"offset":52589},"end":{"line":2720,"column":26,"offset":52593},"indent":[]}}],"position":{"start":{"line":2720,"column":1,"offset":52568},"end":{"line":2720,"column":26,"offset":52593},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nstat = Path('/bin/python3.6').stat()\nprint(stat) # stat contains some other information about the file as well","position":{"start":{"line":2722,"column":1,"offset":52595},"end":{"line":2727,"column":4,"offset":52745},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(stat.st_size) # size in bytes","position":{"start":{"line":2729,"column":1,"offset":52747},"end":{"line":2731,"column":4,"offset":52796},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2733,"column":1,"offset":52798},"end":{"line":2733,"column":34,"offset":52831},"indent":[]}},{"type":"inlineCode","value":"os.listdir","position":{"start":{"line":2733,"column":34,"offset":52831},"end":{"line":2733,"column":46,"offset":52843},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2733,"column":46,"offset":52843},"end":{"line":2733,"column":58,"offset":52855},"indent":[]}}],"position":{"start":{"line":2733,"column":1,"offset":52798},"end":{"line":2733,"column":58,"offset":52855},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.listdir('C:\\\\Windows\\\\System32')","position":{"start":{"line":2735,"column":1,"offset":52857},"end":{"line":2738,"column":4,"offset":52916},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2740,"column":1,"offset":52918},"end":{"line":2740,"column":34,"offset":52951},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2740,"column":34,"offset":52951},"end":{"line":2740,"column":43,"offset":52960},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2740,"column":43,"offset":52960},"end":{"line":2740,"column":47,"offset":52964},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2740,"column":47,"offset":52964},"end":{"line":2740,"column":49,"offset":52966},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2740,"column":49,"offset":52966},"end":{"line":2740,"column":53,"offset":52970},"indent":[]}}],"position":{"start":{"line":2740,"column":1,"offset":52918},"end":{"line":2740,"column":53,"offset":52970},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nfor f in Path('/usr/bin').iterdir():\n    print(f)","position":{"start":{"line":2742,"column":1,"offset":52972},"end":{"line":2747,"column":4,"offset":53061},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To find the total size of all the files in this directory:","position":{"start":{"line":2749,"column":1,"offset":53063},"end":{"line":2749,"column":59,"offset":53121},"indent":[]}}],"position":{"start":{"line":2749,"column":1,"offset":53063},"end":{"line":2749,"column":59,"offset":53121},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"WARNING","position":{"start":{"line":2751,"column":3,"offset":53125},"end":{"line":2751,"column":10,"offset":53132},"indent":[]}}],"position":{"start":{"line":2751,"column":1,"offset":53123},"end":{"line":2751,"column":12,"offset":53134},"indent":[]}},{"type":"text","value":": Directories themselves also have a size! So you might want to\ncheck for whether a path is a file or directory using the methods in the methods discussed in the above section!","position":{"start":{"line":2751,"column":12,"offset":53134},"end":{"line":2752,"column":113,"offset":53310},"indent":[1]}}],"position":{"start":{"line":2751,"column":1,"offset":53123},"end":{"line":2752,"column":113,"offset":53310},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2754,"column":1,"offset":53312},"end":{"line":2754,"column":7,"offset":53318},"indent":[]}},{"type":"inlineCode","value":"os.path.getsize()","position":{"start":{"line":2754,"column":7,"offset":53318},"end":{"line":2754,"column":26,"offset":53337},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2754,"column":26,"offset":53337},"end":{"line":2754,"column":31,"offset":53342},"indent":[]}},{"type":"inlineCode","value":"os.listdir()","position":{"start":{"line":2754,"column":31,"offset":53342},"end":{"line":2754,"column":45,"offset":53356},"indent":[]}},{"type":"text","value":" together on Windows:","position":{"start":{"line":2754,"column":45,"offset":53356},"end":{"line":2754,"column":66,"offset":53377},"indent":[]}}],"position":{"start":{"line":2754,"column":1,"offset":53312},"end":{"line":2754,"column":66,"offset":53377},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\ntotal_size = 0\n\nfor filename in os.listdir('C:\\\\Windows\\\\System32'):\n      total_size = total_size + os.path.getsize(os.path.join('C:\\\\Windows\\\\System32', filename))\n\nprint(total_size)","position":{"start":{"line":2756,"column":1,"offset":53379},"end":{"line":2765,"column":4,"offset":53588},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2767,"column":1,"offset":53590},"end":{"line":2767,"column":7,"offset":53596},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2767,"column":7,"offset":53596},"end":{"line":2767,"column":16,"offset":53605},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2767,"column":16,"offset":53605},"end":{"line":2767,"column":20,"offset":53609},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2767,"column":20,"offset":53609},"end":{"line":2767,"column":22,"offset":53611},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2767,"column":22,"offset":53611},"end":{"line":2767,"column":26,"offset":53615},"indent":[]}}],"position":{"start":{"line":2767,"column":1,"offset":53590},"end":{"line":2767,"column":26,"offset":53615},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ntotal_size = 0\n\nfor sub_path in Path('/usr/bin').iterdir():\n    total_size += sub_path.stat().st_size\n\nprint(total_size)","position":{"start":{"line":2769,"column":1,"offset":53617},"end":{"line":2777,"column":4,"offset":53776},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copying Files and Folders","position":{"start":{"line":2779,"column":5,"offset":53782},"end":{"line":2779,"column":30,"offset":53807},"indent":[]}}],"position":{"start":{"line":2779,"column":1,"offset":53778},"end":{"line":2779,"column":30,"offset":53807},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The shutil module provides functions for copying files, as well as entire folders.","position":{"start":{"line":2781,"column":1,"offset":53809},"end":{"line":2781,"column":83,"offset":53891},"indent":[]}}],"position":{"start":{"line":2781,"column":1,"offset":53809},"end":{"line":2781,"column":83,"offset":53891},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil, os\n\nos.chdir('C:\\\\')\n\nshutil.copy('C:\\\\spam.txt', 'C:\\\\delicious')","position":{"start":{"line":2783,"column":1,"offset":53893},"end":{"line":2789,"column":4,"offset":53988},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"shutil.copy('eggs.txt', 'C:\\\\delicious\\\\eggs2.txt')\n   'C:\\\\delicious\\\\eggs2.txt'","position":{"start":{"line":2791,"column":1,"offset":53990},"end":{"line":2794,"column":4,"offset":54085},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"While shutil.copy() will copy a single file, shutil.copytree() will copy an entire folder and every folder and file contained in it:","position":{"start":{"line":2796,"column":1,"offset":54087},"end":{"line":2796,"column":133,"offset":54219},"indent":[]}}],"position":{"start":{"line":2796,"column":1,"offset":54087},"end":{"line":2796,"column":133,"offset":54219},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil, os\n\nos.chdir('C:\\\\')\nshutil.copytree('C:\\\\bacon', 'C:\\\\bacon_backup')","position":{"start":{"line":2798,"column":1,"offset":54221},"end":{"line":2803,"column":4,"offset":54319},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Moving and Renaming Files and Folders","position":{"start":{"line":2805,"column":5,"offset":54325},"end":{"line":2805,"column":42,"offset":54362},"indent":[]}}],"position":{"start":{"line":2805,"column":1,"offset":54321},"end":{"line":2805,"column":42,"offset":54362},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil\n\nshutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')","position":{"start":{"line":2807,"column":1,"offset":54364},"end":{"line":2811,"column":4,"offset":54433},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The destination path can also specify a filename. In the following example, the source file is moved and renamed:","position":{"start":{"line":2813,"column":1,"offset":54435},"end":{"line":2813,"column":114,"offset":54548},"indent":[]}}],"position":{"start":{"line":2813,"column":1,"offset":54435},"end":{"line":2813,"column":114,"offset":54548},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs\\\\new_bacon.txt')","position":{"start":{"line":2815,"column":1,"offset":54550},"end":{"line":2817,"column":4,"offset":54619},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If there is no eggs folder, then move() will rename bacon.txt to a file named eggs.","position":{"start":{"line":2819,"column":1,"offset":54621},"end":{"line":2819,"column":84,"offset":54704},"indent":[]}}],"position":{"start":{"line":2819,"column":1,"offset":54621},"end":{"line":2819,"column":84,"offset":54704},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')","position":{"start":{"line":2821,"column":1,"offset":54706},"end":{"line":2823,"column":4,"offset":54760},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Permanently Deleting Files and Folders","position":{"start":{"line":2825,"column":5,"offset":54766},"end":{"line":2825,"column":43,"offset":54804},"indent":[]}}],"position":{"start":{"line":2825,"column":1,"offset":54762},"end":{"line":2825,"column":43,"offset":54804},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling os.unlink(path) or Path.unlink() will delete the file at path.","position":{"start":{"line":2827,"column":5,"offset":54810},"end":{"line":2827,"column":75,"offset":54880},"indent":[]}}],"position":{"start":{"line":2827,"column":5,"offset":54810},"end":{"line":2827,"column":75,"offset":54880},"indent":[]}}],"position":{"start":{"line":2827,"column":1,"offset":54806},"end":{"line":2827,"column":75,"offset":54880},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2828,"column":1,"offset":54881},"end":{"line":2828,"column":2,"offset":54882},"indent":[]}}],"position":{"start":{"line":2828,"column":1,"offset":54881},"end":{"line":2828,"column":2,"offset":54882},"indent":[]}}],"position":{"start":{"line":2828,"column":1,"offset":54881},"end":{"line":2828,"column":2,"offset":54882},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling os.rmdir(path) or Path.rmdir() will delete the folder at path. This folder must be empty of any files or folders.","position":{"start":{"line":2829,"column":5,"offset":54887},"end":{"line":2829,"column":126,"offset":55008},"indent":[]}}],"position":{"start":{"line":2829,"column":5,"offset":54887},"end":{"line":2829,"column":126,"offset":55008},"indent":[]}}],"position":{"start":{"line":2829,"column":1,"offset":54883},"end":{"line":2830,"column":1,"offset":55009},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling shutil.rmtree(path) will remove the folder at path, and all files and folders it contains will also be deleted.","position":{"start":{"line":2831,"column":5,"offset":55014},"end":{"line":2831,"column":124,"offset":55133},"indent":[]}}],"position":{"start":{"line":2831,"column":5,"offset":55014},"end":{"line":2831,"column":124,"offset":55133},"indent":[]}}],"position":{"start":{"line":2831,"column":1,"offset":55010},"end":{"line":2831,"column":124,"offset":55133},"indent":[]}}],"position":{"start":{"line":2827,"column":1,"offset":54806},"end":{"line":2831,"column":124,"offset":55133},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Safe Deletes with the send2trash Module","position":{"start":{"line":2833,"column":5,"offset":55139},"end":{"line":2833,"column":44,"offset":55178},"indent":[]}}],"position":{"start":{"line":2833,"column":1,"offset":55135},"end":{"line":2833,"column":44,"offset":55178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can install this module by running pip install send2trash from a Terminal window.","position":{"start":{"line":2835,"column":1,"offset":55180},"end":{"line":2835,"column":86,"offset":55265},"indent":[]}}],"position":{"start":{"line":2835,"column":1,"offset":55180},"end":{"line":2835,"column":86,"offset":55265},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import send2trash\n\nwith open('bacon.txt', 'a') as bacon_file: # creates the file\n    bacon_file.write('Bacon is not a vegetable.')\n\nsend2trash.send2trash('bacon.txt')","position":{"start":{"line":2837,"column":1,"offset":55267},"end":{"line":2844,"column":4,"offset":55447},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Walking a Directory Tree","position":{"start":{"line":2846,"column":5,"offset":55453},"end":{"line":2846,"column":29,"offset":55477},"indent":[]}}],"position":{"start":{"line":2846,"column":1,"offset":55449},"end":{"line":2846,"column":29,"offset":55477},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nfor folder_name, subfolders, filenames in os.walk('C:\\\\delicious'):\n    print('The current folder is {}'.format(folder_name))\n\n    for subfolder in subfolders:\n        print('SUBFOLDER OF {}: {}'.format(folder_name, subfolder))\n    for filename in filenames:\n        print('FILE INSIDE {}: {}'.format(folder_name, filename))\n\n    print('')","position":{"start":{"line":2848,"column":1,"offset":55479},"end":{"line":2860,"column":4,"offset":55843},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2862,"column":1,"offset":55845},"end":{"line":2862,"column":10,"offset":55854},"indent":[]}},{"type":"text","value":" provides a lot more functionality than the ones listed above,\nlike getting file name, getting file extension, reading/writing a file without\nmanually opening it, etc. Check out the\n","position":{"start":{"line":2862,"column":10,"offset":55854},"end":{"line":2865,"column":1,"offset":56036},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/pathlib.html","children":[{"type":"text","value":"official documentation","position":{"start":{"line":2865,"column":2,"offset":56037},"end":{"line":2865,"column":24,"offset":56059},"indent":[]}}],"position":{"start":{"line":2865,"column":1,"offset":56036},"end":{"line":2865,"column":73,"offset":56108},"indent":[]}},{"type":"text","value":"\nif you want to know more!","position":{"start":{"line":2865,"column":73,"offset":56108},"end":{"line":2866,"column":26,"offset":56134},"indent":[1]}}],"position":{"start":{"line":2862,"column":1,"offset":55845},"end":{"line":2866,"column":26,"offset":56134},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Reading and Writing Files","position":{"start":{"line":2868,"column":4,"offset":56139},"end":{"line":2868,"column":29,"offset":56164},"indent":[]}}],"position":{"start":{"line":2868,"column":1,"offset":56136},"end":{"line":2868,"column":29,"offset":56164},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The File Reading/Writing Process","position":{"start":{"line":2870,"column":5,"offset":56170},"end":{"line":2870,"column":37,"offset":56202},"indent":[]}}],"position":{"start":{"line":2870,"column":1,"offset":56166},"end":{"line":2870,"column":37,"offset":56202},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To read/write to a file in Python, you will want to use the ","position":{"start":{"line":2872,"column":1,"offset":56204},"end":{"line":2872,"column":61,"offset":56264},"indent":[]}},{"type":"inlineCode","value":"with","position":{"start":{"line":2872,"column":61,"offset":56264},"end":{"line":2872,"column":67,"offset":56270},"indent":[]}},{"type":"text","value":"\nstatement, which will close the file for you after you are done.","position":{"start":{"line":2872,"column":67,"offset":56270},"end":{"line":2873,"column":65,"offset":56335},"indent":[1]}}],"position":{"start":{"line":2872,"column":1,"offset":56204},"end":{"line":2873,"column":65,"offset":56335},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Opening and reading files with the open function","position":{"start":{"line":2875,"column":5,"offset":56341},"end":{"line":2875,"column":53,"offset":56389},"indent":[]}}],"position":{"start":{"line":2875,"column":1,"offset":56337},"end":{"line":2875,"column":53,"offset":56389},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('C:\\\\Users\\\\your_home_folder\\\\hello.txt') as hello_file:\n    hello_content = hello_file.read()\n\nhello_content","position":{"start":{"line":2877,"column":1,"offset":56391},"end":{"line":2882,"column":4,"offset":56524},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can use the ","position":{"start":{"line":2884,"column":1,"offset":56526},"end":{"line":2884,"column":32,"offset":56557},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"readlines()","position":{"start":{"line":2884,"column":33,"offset":56558},"end":{"line":2884,"column":44,"offset":56569},"indent":[]}}],"position":{"start":{"line":2884,"column":32,"offset":56557},"end":{"line":2884,"column":45,"offset":56570},"indent":[]}},{"type":"text","value":" method to get a list of string values from the file, one string for each line of text:","position":{"start":{"line":2884,"column":45,"offset":56570},"end":{"line":2884,"column":132,"offset":56657},"indent":[]}}],"position":{"start":{"line":2884,"column":1,"offset":56526},"end":{"line":2884,"column":132,"offset":56657},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('sonnet29.txt') as sonnet_file:\n    sonnet_file.readlines()","position":{"start":{"line":2886,"column":1,"offset":56659},"end":{"line":2889,"column":4,"offset":56742},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also iterate through the file line by line:","position":{"start":{"line":2891,"column":1,"offset":56744},"end":{"line":2891,"column":52,"offset":56795},"indent":[]}}],"position":{"start":{"line":2891,"column":1,"offset":56744},"end":{"line":2891,"column":52,"offset":56795},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('sonnet29.txt') as sonnet_file:\n    for line in sonnet_file: # note the new line character will be included in the line\n        print(line, end='')","position":{"start":{"line":2893,"column":1,"offset":56797},"end":{"line":2897,"column":4,"offset":56968},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Writing to Files","position":{"start":{"line":2899,"column":5,"offset":56974},"end":{"line":2899,"column":21,"offset":56990},"indent":[]}}],"position":{"start":{"line":2899,"column":1,"offset":56970},"end":{"line":2899,"column":21,"offset":56990},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt', 'w') as bacon_file:\n    bacon_file.write('Hello world!\\n')","position":{"start":{"line":2901,"column":1,"offset":56992},"end":{"line":2904,"column":4,"offset":57087},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt', 'a') as bacon_file:\n    bacon_file.write('Bacon is not a vegetable.')","position":{"start":{"line":2906,"column":1,"offset":57089},"end":{"line":2909,"column":4,"offset":57195},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt') as bacon_file:\n    content = bacon_file.read()\n\nprint(content)","position":{"start":{"line":2911,"column":1,"offset":57197},"end":{"line":2916,"column":4,"offset":57296},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Saving Variables with the shelve Module","position":{"start":{"line":2918,"column":5,"offset":57302},"end":{"line":2918,"column":44,"offset":57341},"indent":[]}}],"position":{"start":{"line":2918,"column":1,"offset":57298},"end":{"line":2918,"column":44,"offset":57341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To save variables:","position":{"start":{"line":2920,"column":1,"offset":57343},"end":{"line":2920,"column":19,"offset":57361},"indent":[]}}],"position":{"start":{"line":2920,"column":1,"offset":57343},"end":{"line":2920,"column":19,"offset":57361},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shelve\n\ncats = ['Zophie', 'Pooka', 'Simon']\nwith shelve.open('mydata') as shelf_file:\n    shelf_file['cats'] = cats","position":{"start":{"line":2922,"column":1,"offset":57363},"end":{"line":2928,"column":4,"offset":57499},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To open and read variables:","position":{"start":{"line":2930,"column":1,"offset":57501},"end":{"line":2930,"column":28,"offset":57528},"indent":[]}}],"position":{"start":{"line":2930,"column":1,"offset":57501},"end":{"line":2930,"column":28,"offset":57528},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with shelve.open('mydata') as shelf_file:\n    print(type(shelf_file))\n    print(shelf_file['cats'])","position":{"start":{"line":2932,"column":1,"offset":57530},"end":{"line":2936,"column":4,"offset":57643},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Just like dictionaries, shelf values have keys() and values() methods that will return list-like values of the keys and values in the shelf. Since these methods return list-like values instead of true lists, you should pass them to the list() function to get them in list form.","position":{"start":{"line":2938,"column":1,"offset":57645},"end":{"line":2938,"column":278,"offset":57922},"indent":[]}}],"position":{"start":{"line":2938,"column":1,"offset":57645},"end":{"line":2938,"column":278,"offset":57922},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with shelve.open('mydata') as shelf_file:\n    print(list(shelf_file.keys()))\n    print(list(shelf_file.values()))","position":{"start":{"line":2940,"column":1,"offset":57924},"end":{"line":2944,"column":4,"offset":58051},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Saving Variables with pprint.pformat","position":{"start":{"line":2946,"column":5,"offset":58057},"end":{"line":2946,"column":41,"offset":58093},"indent":[]}}],"position":{"start":{"line":2946,"column":1,"offset":58053},"end":{"line":2946,"column":41,"offset":58093},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import pprint\n\ncats = [{'name': 'Zophie', 'desc': 'chubby'}, {'name': 'Pooka', 'desc': 'fluffy'}]\npprint.pformat(cats)","position":{"start":{"line":2948,"column":1,"offset":58095},"end":{"line":2953,"column":4,"offset":58227},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('myCats.py', 'w') as file_obj:\n    file_obj.write('cats = {}\\n'.format(pprint.pformat(cats)))","position":{"start":{"line":2955,"column":1,"offset":58229},"end":{"line":2958,"column":4,"offset":58346},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Reading ZIP Files","position":{"start":{"line":2960,"column":5,"offset":58352},"end":{"line":2960,"column":22,"offset":58369},"indent":[]}}],"position":{"start":{"line":2960,"column":1,"offset":58348},"end":{"line":2960,"column":22,"offset":58369},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile, os\n\nos.chdir('C:\\\\')    # move to the folder with example.zip\nwith zipfile.ZipFile('example.zip') as example_zip:\n    print(example_zip.namelist())\n    spam_info = example_zip.getinfo('spam.txt')\n    print(spam_info.file_size)\n    print(spam_info.compress_size)\n    print('Compressed file is %sx smaller!' % (round(spam_info.file_size / spam_info.compress_size, 2)))","position":{"start":{"line":2962,"column":1,"offset":58371},"end":{"line":2972,"column":4,"offset":58767},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Extracting from ZIP Files","position":{"start":{"line":2974,"column":5,"offset":58773},"end":{"line":2974,"column":30,"offset":58798},"indent":[]}}],"position":{"start":{"line":2974,"column":1,"offset":58769},"end":{"line":2974,"column":30,"offset":58798},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The extractall() method for ZipFile objects extracts all the files and folders from a ZIP file into the current working directory.","position":{"start":{"line":2976,"column":1,"offset":58800},"end":{"line":2976,"column":131,"offset":58930},"indent":[]}}],"position":{"start":{"line":2976,"column":1,"offset":58800},"end":{"line":2976,"column":131,"offset":58930},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile, os\n\nos.chdir('C:\\\\')    # move to the folder with example.zip\n\nwith zipfile.ZipFile('example.zip') as example_zip:\n    example_zip.extractall()","position":{"start":{"line":2978,"column":1,"offset":58932},"end":{"line":2985,"column":4,"offset":59105},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The extract() method for ZipFile objects will extract a single file from the ZIP file. Continue the interactive shell example:","position":{"start":{"line":2987,"column":1,"offset":59107},"end":{"line":2987,"column":127,"offset":59233},"indent":[]}}],"position":{"start":{"line":2987,"column":1,"offset":59107},"end":{"line":2987,"column":127,"offset":59233},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with zipfile.ZipFile('example.zip') as example_zip:\n    print(example_zip.extract('spam.txt'))\n    print(example_zip.extract('spam.txt', 'C:\\\\some\\\\new\\\\folders'))","position":{"start":{"line":2989,"column":1,"offset":59235},"end":{"line":2993,"column":4,"offset":59412},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating and Adding to ZIP Files","position":{"start":{"line":2995,"column":5,"offset":59418},"end":{"line":2995,"column":37,"offset":59450},"indent":[]}}],"position":{"start":{"line":2995,"column":1,"offset":59414},"end":{"line":2995,"column":37,"offset":59450},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile\n\nwith zipfile.ZipFile('new.zip', 'w') as new_zip:\n    new_zip.write('spam.txt', compress_type=zipfile.ZIP_DEFLATED)","position":{"start":{"line":2997,"column":1,"offset":59452},"end":{"line":3002,"column":4,"offset":59596},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This code will create a new ZIP file named new.zip that has the compressed contents of spam.txt.","position":{"start":{"line":3004,"column":1,"offset":59598},"end":{"line":3004,"column":97,"offset":59694},"indent":[]}}],"position":{"start":{"line":3004,"column":1,"offset":59598},"end":{"line":3004,"column":97,"offset":59694},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSON, YAML and configuration files","position":{"start":{"line":3006,"column":4,"offset":59699},"end":{"line":3006,"column":38,"offset":59733},"indent":[]}}],"position":{"start":{"line":3006,"column":1,"offset":59696},"end":{"line":3006,"column":38,"offset":59733},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"JSON","position":{"start":{"line":3008,"column":5,"offset":59739},"end":{"line":3008,"column":9,"offset":59743},"indent":[]}}],"position":{"start":{"line":3008,"column":1,"offset":59735},"end":{"line":3008,"column":9,"offset":59743},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open a JSON file with:","position":{"start":{"line":3010,"column":1,"offset":59745},"end":{"line":3010,"column":23,"offset":59767},"indent":[]}}],"position":{"start":{"line":3010,"column":1,"offset":59745},"end":{"line":3010,"column":23,"offset":59767},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import json\nwith open(\"filename.json\", \"r\") as f:\n    content = json.loads(f.read())","position":{"start":{"line":3012,"column":1,"offset":59769},"end":{"line":3016,"column":4,"offset":59867},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Write a JSON file with:","position":{"start":{"line":3018,"column":1,"offset":59869},"end":{"line":3018,"column":24,"offset":59892},"indent":[]}}],"position":{"start":{"line":3018,"column":1,"offset":59869},"end":{"line":3018,"column":24,"offset":59892},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import json\n\ncontent = {\"name\": \"Joe\", \"age\": 20}\nwith open(\"filename.json\", \"w\") as f:\n    f.write(json.dumps(content, indent=2))","position":{"start":{"line":3020,"column":1,"offset":59894},"end":{"line":3026,"column":4,"offset":60038},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"YAML","position":{"start":{"line":3028,"column":5,"offset":60044},"end":{"line":3028,"column":9,"offset":60048},"indent":[]}}],"position":{"start":{"line":3028,"column":1,"offset":60040},"end":{"line":3028,"column":9,"offset":60048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compared to JSON, YAML allows a much better humain maintainance and gives ability to add comments.\nIt is a convinient choice for configuration files where human will have to edit.","position":{"start":{"line":3030,"column":1,"offset":60050},"end":{"line":3031,"column":81,"offset":60229},"indent":[1]}}],"position":{"start":{"line":3030,"column":1,"offset":60050},"end":{"line":3031,"column":81,"offset":60229},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two main librairies allowing to access to YAML files:","position":{"start":{"line":3033,"column":1,"offset":60231},"end":{"line":3033,"column":64,"offset":60294},"indent":[]}}],"position":{"start":{"line":3033,"column":1,"offset":60231},"end":{"line":3033,"column":64,"offset":60294},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/PyYAML","children":[{"type":"text","value":"PyYaml","position":{"start":{"line":3035,"column":6,"offset":60301},"end":{"line":3035,"column":12,"offset":60307},"indent":[]}}],"position":{"start":{"line":3035,"column":5,"offset":60300},"end":{"line":3035,"column":50,"offset":60345},"indent":[]}}],"position":{"start":{"line":3035,"column":5,"offset":60300},"end":{"line":3035,"column":50,"offset":60345},"indent":[]}}],"position":{"start":{"line":3035,"column":1,"offset":60296},"end":{"line":3035,"column":50,"offset":60345},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/ruamel.yaml","children":[{"type":"text","value":"Ruamel.yaml","position":{"start":{"line":3036,"column":6,"offset":60351},"end":{"line":3036,"column":17,"offset":60362},"indent":[]}}],"position":{"start":{"line":3036,"column":5,"offset":60350},"end":{"line":3036,"column":60,"offset":60405},"indent":[]}}],"position":{"start":{"line":3036,"column":5,"offset":60350},"end":{"line":3036,"column":60,"offset":60405},"indent":[]}}],"position":{"start":{"line":3036,"column":1,"offset":60346},"end":{"line":3036,"column":60,"offset":60405},"indent":[]}}],"position":{"start":{"line":3035,"column":1,"offset":60296},"end":{"line":3036,"column":60,"offset":60405},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Install them using ","position":{"start":{"line":3038,"column":1,"offset":60407},"end":{"line":3038,"column":20,"offset":60426},"indent":[]}},{"type":"inlineCode","value":"pip install","position":{"start":{"line":3038,"column":20,"offset":60426},"end":{"line":3038,"column":33,"offset":60439},"indent":[]}},{"type":"text","value":" in your virtual environment.","position":{"start":{"line":3038,"column":33,"offset":60439},"end":{"line":3038,"column":62,"offset":60468},"indent":[]}}],"position":{"start":{"line":3038,"column":1,"offset":60407},"end":{"line":3038,"column":62,"offset":60468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first one it easier to use but the second one, Ruamel, implements much better the YAML\nspecification, and allow for example to modify a YAML content without altering comments.","position":{"start":{"line":3040,"column":1,"offset":60470},"end":{"line":3041,"column":89,"offset":60649},"indent":[1]}}],"position":{"start":{"line":3040,"column":1,"offset":60470},"end":{"line":3041,"column":89,"offset":60649},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Open a YAML file with:","position":{"start":{"line":3043,"column":1,"offset":60651},"end":{"line":3043,"column":23,"offset":60673},"indent":[]}}],"position":{"start":{"line":3043,"column":1,"offset":60651},"end":{"line":3043,"column":23,"offset":60673},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from ruamel.yaml import YAML\n\nwith open(\"filename.yaml\") as f:\n    yaml=YAML()\n    yaml.load(f)","position":{"start":{"line":3045,"column":1,"offset":60675},"end":{"line":3051,"column":4,"offset":60784},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3053,"column":5,"offset":60790},"end":{"line":3053,"column":14,"offset":60799},"indent":[]}}],"position":{"start":{"line":3053,"column":1,"offset":60786},"end":{"line":3053,"column":14,"offset":60799},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/anyconfig","children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3055,"column":2,"offset":60802},"end":{"line":3055,"column":11,"offset":60811},"indent":[]}}],"position":{"start":{"line":3055,"column":1,"offset":60801},"end":{"line":3055,"column":52,"offset":60852},"indent":[]}},{"type":"text","value":" is a very handy package allowing to abstract completly the underlying configuration file format. It allows to load a Python dictionary from JSON, YAML, TOML, and so on.","position":{"start":{"line":3055,"column":52,"offset":60852},"end":{"line":3055,"column":221,"offset":61021},"indent":[]}}],"position":{"start":{"line":3055,"column":1,"offset":60801},"end":{"line":3055,"column":221,"offset":61021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Install it with:","position":{"start":{"line":3057,"column":1,"offset":61023},"end":{"line":3057,"column":17,"offset":61039},"indent":[]}}],"position":{"start":{"line":3057,"column":1,"offset":61023},"end":{"line":3057,"column":17,"offset":61039},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"pip install anyconfig","position":{"start":{"line":3059,"column":1,"offset":61041},"end":{"line":3061,"column":4,"offset":61074},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Usage:","position":{"start":{"line":3063,"column":1,"offset":61076},"end":{"line":3063,"column":7,"offset":61082},"indent":[]}}],"position":{"start":{"line":3063,"column":1,"offset":61076},"end":{"line":3063,"column":7,"offset":61082},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import anyconfig\n\nconf1 = anyconfig.load(\"/path/to/foo/conf.d/a.yml\")","position":{"start":{"line":3065,"column":1,"offset":61084},"end":{"line":3069,"column":4,"offset":61167},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Debugging","position":{"start":{"line":3071,"column":4,"offset":61172},"end":{"line":3071,"column":13,"offset":61181},"indent":[]}}],"position":{"start":{"line":3071,"column":1,"offset":61169},"end":{"line":3071,"column":13,"offset":61181},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Raising Exceptions","position":{"start":{"line":3073,"column":5,"offset":61187},"end":{"line":3073,"column":23,"offset":61205},"indent":[]}}],"position":{"start":{"line":3073,"column":1,"offset":61183},"end":{"line":3073,"column":23,"offset":61205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exceptions are raised with a raise statement. In code, a raise statement consists of the following:","position":{"start":{"line":3075,"column":1,"offset":61207},"end":{"line":3075,"column":100,"offset":61306},"indent":[]}}],"position":{"start":{"line":3075,"column":1,"offset":61207},"end":{"line":3075,"column":100,"offset":61306},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The raise keyword","position":{"start":{"line":3077,"column":5,"offset":61312},"end":{"line":3077,"column":22,"offset":61329},"indent":[]}}],"position":{"start":{"line":3077,"column":5,"offset":61312},"end":{"line":3077,"column":22,"offset":61329},"indent":[]}}],"position":{"start":{"line":3077,"column":1,"offset":61308},"end":{"line":3077,"column":22,"offset":61329},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A call to the Exception() function","position":{"start":{"line":3078,"column":5,"offset":61334},"end":{"line":3078,"column":39,"offset":61368},"indent":[]}}],"position":{"start":{"line":3078,"column":5,"offset":61334},"end":{"line":3078,"column":39,"offset":61368},"indent":[]}}],"position":{"start":{"line":3078,"column":1,"offset":61330},"end":{"line":3078,"column":39,"offset":61368},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A string with a helpful error message passed to the Exception() function","position":{"start":{"line":3079,"column":5,"offset":61373},"end":{"line":3079,"column":77,"offset":61445},"indent":[]}}],"position":{"start":{"line":3079,"column":5,"offset":61373},"end":{"line":3079,"column":77,"offset":61445},"indent":[]}}],"position":{"start":{"line":3079,"column":1,"offset":61369},"end":{"line":3079,"column":77,"offset":61445},"indent":[]}}],"position":{"start":{"line":3077,"column":1,"offset":61308},"end":{"line":3079,"column":77,"offset":61445},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"raise Exception('This is the error message.')\nTraceback (most recent call last):\n  File \"<pyshell#191>\", line 1, in <module>\n    raise Exception('This is the error message.')\nException: This is the error message.","position":{"start":{"line":3081,"column":1,"offset":61447},"end":{"line":3087,"column":4,"offset":61673},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Often it's the code that calls the function, not the function itself, that knows how to handle an expection. So you will commonly see a raise statement inside a function and the try and except statements in the code calling the function.","position":{"start":{"line":3089,"column":1,"offset":61675},"end":{"line":3089,"column":238,"offset":61912},"indent":[]}}],"position":{"start":{"line":3089,"column":1,"offset":61675},"end":{"line":3089,"column":238,"offset":61912},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def box_print(symbol, width, height):\n    if len(symbol) != 1:\n      raise Exception('Symbol must be a single character string.')\n    if width <= 2:\n      raise Exception('Width must be greater than 2.')\n    if height <= 2:\n      raise Exception('Height must be greater than 2.')\n    print(symbol * width)\n    for i in range(height - 2):\n        print(symbol + (' ' * (width - 2)) + symbol)\n    print(symbol * width)\nfor sym, w, h in (('*', 4, 4), ('O', 20, 5), ('x', 1, 3), ('ZZ', 3, 3)):\n    try:\n        box_print(sym, w, h)\n    except Exception as err:\n        print('An exception happened: ' + str(err))","position":{"start":{"line":3091,"column":1,"offset":61914},"end":{"line":3108,"column":4,"offset":62536},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting the Traceback as a String","position":{"start":{"line":3110,"column":5,"offset":62542},"end":{"line":3110,"column":38,"offset":62575},"indent":[]}}],"position":{"start":{"line":3110,"column":1,"offset":62538},"end":{"line":3110,"column":38,"offset":62575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traceback is displayed by Python whenever a raised exception goes unhandled. But can also obtain it as a string by calling traceback.format_exc(). This function is useful if you want the information from an exception's traceback but also want an except statement to gracefully handle the exception. You will need to import Python's traceback module before calling this function.","position":{"start":{"line":3112,"column":1,"offset":62577},"end":{"line":3112,"column":383,"offset":62959},"indent":[]}}],"position":{"start":{"line":3112,"column":1,"offset":62577},"end":{"line":3112,"column":383,"offset":62959},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import traceback\n\ntry:\n     raise Exception('This is the error message.')\nexcept:\n     with open('errorInfo.txt', 'w') as error_file:\n         error_file.write(traceback.format_exc())\n     print('The traceback info was written to errorInfo.txt.')","position":{"start":{"line":3114,"column":1,"offset":62961},"end":{"line":3123,"column":4,"offset":63221},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The 116 is the return value from the write() method, since 116 characters were written to the file. The traceback text was written to errorInfo.txt.","position":{"start":{"line":3125,"column":1,"offset":63223},"end":{"line":3125,"column":149,"offset":63371},"indent":[]}}],"position":{"start":{"line":3125,"column":1,"offset":63223},"end":{"line":3125,"column":149,"offset":63371},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Traceback (most recent call last):\n  File \"<pyshell#28>\", line 2, in <module>\nException: This is the error message.","position":{"start":{"line":3127,"column":1,"offset":63373},"end":{"line":3129,"column":42,"offset":63500},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Assertions","position":{"start":{"line":3131,"column":5,"offset":63506},"end":{"line":3131,"column":15,"offset":63516},"indent":[]}}],"position":{"start":{"line":3131,"column":1,"offset":63502},"end":{"line":3131,"column":15,"offset":63516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An assertion is a sanity check to make sure your code isn't doing something obviously wrong. These sanity checks are performed by assert statements. If the sanity check fails, then an AssertionError exception is raised. In code, an assert statement consists of the following:","position":{"start":{"line":3133,"column":1,"offset":63518},"end":{"line":3133,"column":276,"offset":63793},"indent":[]}}],"position":{"start":{"line":3133,"column":1,"offset":63518},"end":{"line":3133,"column":276,"offset":63793},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The assert keyword","position":{"start":{"line":3135,"column":5,"offset":63799},"end":{"line":3135,"column":23,"offset":63817},"indent":[]}}],"position":{"start":{"line":3135,"column":5,"offset":63799},"end":{"line":3135,"column":23,"offset":63817},"indent":[]}}],"position":{"start":{"line":3135,"column":1,"offset":63795},"end":{"line":3135,"column":23,"offset":63817},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A condition (that is, an expression that evaluates to True or False)","position":{"start":{"line":3136,"column":5,"offset":63822},"end":{"line":3136,"column":73,"offset":63890},"indent":[]}}],"position":{"start":{"line":3136,"column":5,"offset":63822},"end":{"line":3136,"column":73,"offset":63890},"indent":[]}}],"position":{"start":{"line":3136,"column":1,"offset":63818},"end":{"line":3136,"column":73,"offset":63890},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A comma","position":{"start":{"line":3137,"column":5,"offset":63895},"end":{"line":3137,"column":12,"offset":63902},"indent":[]}}],"position":{"start":{"line":3137,"column":5,"offset":63895},"end":{"line":3137,"column":12,"offset":63902},"indent":[]}}],"position":{"start":{"line":3137,"column":1,"offset":63891},"end":{"line":3137,"column":12,"offset":63902},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A string to display when the condition is False","position":{"start":{"line":3138,"column":5,"offset":63907},"end":{"line":3138,"column":52,"offset":63954},"indent":[]}}],"position":{"start":{"line":3138,"column":5,"offset":63907},"end":{"line":3138,"column":52,"offset":63954},"indent":[]}}],"position":{"start":{"line":3138,"column":1,"offset":63903},"end":{"line":3138,"column":52,"offset":63954},"indent":[]}}],"position":{"start":{"line":3135,"column":1,"offset":63795},"end":{"line":3138,"column":52,"offset":63954},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"pod_bay_door_status = 'open'\n\nassert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'\n\npod_bay_door_status = 'I\\'m sorry, Dave. I\\'m afraid I can\\'t do that.'\n\nassert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'","position":{"start":{"line":3140,"column":1,"offset":63956},"end":{"line":3148,"column":4,"offset":64227},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In plain English, an assert statement says, \"I assert that this condition holds true, and if not, there is a bug somewhere in the program.\" Unlike exceptions, your code should not handle assert statements with try and except; if an assert fails, your program should crash. By failing fast like this, you shorten the time between the original cause of the bug and when you first notice the bug. This will reduce the amount of code you will have to check before finding the code that's causing the bug.","position":{"start":{"line":3150,"column":1,"offset":64229},"end":{"line":3150,"column":501,"offset":64729},"indent":[]}}],"position":{"start":{"line":3150,"column":1,"offset":64229},"end":{"line":3150,"column":501,"offset":64729},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Disabling Assertions","position":{"start":{"line":3152,"column":1,"offset":64731},"end":{"line":3152,"column":21,"offset":64751},"indent":[]}}],"position":{"start":{"line":3152,"column":1,"offset":64731},"end":{"line":3152,"column":21,"offset":64751},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Assertions can be disabled by passing the -O option when running Python.","position":{"start":{"line":3154,"column":1,"offset":64753},"end":{"line":3154,"column":73,"offset":64825},"indent":[]}}],"position":{"start":{"line":3154,"column":1,"offset":64753},"end":{"line":3154,"column":73,"offset":64825},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging","position":{"start":{"line":3156,"column":5,"offset":64831},"end":{"line":3156,"column":12,"offset":64838},"indent":[]}}],"position":{"start":{"line":3156,"column":1,"offset":64827},"end":{"line":3156,"column":12,"offset":64838},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To enable the logging module to display log messages on your screen as your program runs, copy the following to the top of your program (but under the #! python shebang line):","position":{"start":{"line":3158,"column":1,"offset":64840},"end":{"line":3158,"column":176,"offset":65015},"indent":[]}}],"position":{"start":{"line":3158,"column":1,"offset":64840},"end":{"line":3158,"column":176,"offset":65015},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')","position":{"start":{"line":3160,"column":1,"offset":65017},"end":{"line":3164,"column":4,"offset":65139},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Say you wrote a function to calculate the factorial of a number. In mathematics, factorial 4 is 1 × 2 × 3 × 4, or 24. Factorial 7 is 1 × 2 × 3 × 4 × 5 × 6 × 7, or 5,040. Open a new file editor window and enter the following code. It has a bug in it, but you will also enter several log messages to help yourself figure out what is going wrong. Save the program as factorialLog.py.","position":{"start":{"line":3166,"column":1,"offset":65141},"end":{"line":3166,"column":381,"offset":65521},"indent":[]}}],"position":{"start":{"line":3166,"column":1,"offset":65141},"end":{"line":3166,"column":381,"offset":65521},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')\n\nlogging.debug('Start of program')\n\ndef factorial(n):\n\n    logging.debug('Start of factorial(%s)' % (n))\n    total = 1\n\n    for i in range(1, n + 1):\n        total *= i\n        logging.debug('i is ' + str(i) + ', total is ' + str(total))\n\n    logging.debug('End of factorial(%s)' % (n))\n\n    return total\n\nprint(factorial(5))\nlogging.debug('End of program')","position":{"start":{"line":3168,"column":1,"offset":65523},"end":{"line":3190,"column":4,"offset":66003},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging Levels","position":{"start":{"line":3192,"column":5,"offset":66009},"end":{"line":3192,"column":19,"offset":66023},"indent":[]}}],"position":{"start":{"line":3192,"column":1,"offset":66005},"end":{"line":3192,"column":19,"offset":66023},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Logging levels provide a way to categorize your log messages by importance. There are five logging levels, described in Table 10-1 from least to most important. Messages can be logged at each level using a different logging function.","position":{"start":{"line":3194,"column":1,"offset":66025},"end":{"line":3194,"column":234,"offset":66258},"indent":[]}}],"position":{"start":{"line":3194,"column":1,"offset":66025},"end":{"line":3194,"column":234,"offset":66258},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Level","position":{"start":{"line":3196,"column":3,"offset":66262},"end":{"line":3196,"column":8,"offset":66267},"indent":[]}}],"position":{"start":{"line":3196,"column":3,"offset":66262},"end":{"line":3196,"column":13,"offset":66272},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Logging Function","position":{"start":{"line":3196,"column":16,"offset":66275},"end":{"line":3196,"column":32,"offset":66291},"indent":[]}}],"position":{"start":{"line":3196,"column":16,"offset":66275},"end":{"line":3196,"column":36,"offset":66295},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":3196,"column":39,"offset":66298},"end":{"line":3196,"column":50,"offset":66309},"indent":[]}}],"position":{"start":{"line":3196,"column":39,"offset":66298},"end":{"line":3196,"column":165,"offset":66424},"indent":[]}}],"position":{"start":{"line":3196,"column":1,"offset":66260},"end":{"line":3196,"column":167,"offset":66426},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"DEBUG","position":{"start":{"line":3198,"column":3,"offset":66596},"end":{"line":3198,"column":10,"offset":66603},"indent":[]}}],"position":{"start":{"line":3198,"column":3,"offset":66596},"end":{"line":3198,"column":13,"offset":66606},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.debug()","position":{"start":{"line":3198,"column":16,"offset":66609},"end":{"line":3198,"column":33,"offset":66626},"indent":[]}}],"position":{"start":{"line":3198,"column":16,"offset":66609},"end":{"line":3198,"column":36,"offset":66629},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The lowest level. Used for small details. Usually you care about these messages only when diagnosing problems.","position":{"start":{"line":3198,"column":39,"offset":66632},"end":{"line":3198,"column":149,"offset":66742},"indent":[]}}],"position":{"start":{"line":3198,"column":39,"offset":66632},"end":{"line":3198,"column":165,"offset":66758},"indent":[]}}],"position":{"start":{"line":3198,"column":1,"offset":66594},"end":{"line":3198,"column":167,"offset":66760},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"INFO","position":{"start":{"line":3199,"column":3,"offset":66763},"end":{"line":3199,"column":9,"offset":66769},"indent":[]}}],"position":{"start":{"line":3199,"column":3,"offset":66763},"end":{"line":3199,"column":13,"offset":66773},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.info()","position":{"start":{"line":3199,"column":16,"offset":66776},"end":{"line":3199,"column":32,"offset":66792},"indent":[]}}],"position":{"start":{"line":3199,"column":16,"offset":66776},"end":{"line":3199,"column":36,"offset":66796},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to record information on general events in your program or confirm that things are working at their point in the program.","position":{"start":{"line":3199,"column":39,"offset":66799},"end":{"line":3199,"column":165,"offset":66925},"indent":[]}}],"position":{"start":{"line":3199,"column":39,"offset":66799},"end":{"line":3199,"column":165,"offset":66925},"indent":[]}}],"position":{"start":{"line":3199,"column":1,"offset":66761},"end":{"line":3199,"column":167,"offset":66927},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"WARNING","position":{"start":{"line":3200,"column":3,"offset":66930},"end":{"line":3200,"column":12,"offset":66939},"indent":[]}}],"position":{"start":{"line":3200,"column":3,"offset":66930},"end":{"line":3200,"column":13,"offset":66940},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.warning()","position":{"start":{"line":3200,"column":16,"offset":66943},"end":{"line":3200,"column":35,"offset":66962},"indent":[]}}],"position":{"start":{"line":3200,"column":16,"offset":66943},"end":{"line":3200,"column":36,"offset":66963},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to indicate a potential problem that doesn't prevent the program from working but might do so in the future.","position":{"start":{"line":3200,"column":39,"offset":66966},"end":{"line":3200,"column":152,"offset":67079},"indent":[]}}],"position":{"start":{"line":3200,"column":39,"offset":66966},"end":{"line":3200,"column":165,"offset":67092},"indent":[]}}],"position":{"start":{"line":3200,"column":1,"offset":66928},"end":{"line":3200,"column":167,"offset":67094},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"ERROR","position":{"start":{"line":3201,"column":3,"offset":67097},"end":{"line":3201,"column":10,"offset":67104},"indent":[]}}],"position":{"start":{"line":3201,"column":3,"offset":67097},"end":{"line":3201,"column":13,"offset":67107},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.error()","position":{"start":{"line":3201,"column":16,"offset":67110},"end":{"line":3201,"column":33,"offset":67127},"indent":[]}}],"position":{"start":{"line":3201,"column":16,"offset":67110},"end":{"line":3201,"column":36,"offset":67130},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to record an error that caused the program to fail to do something.","position":{"start":{"line":3201,"column":39,"offset":67133},"end":{"line":3201,"column":111,"offset":67205},"indent":[]}}],"position":{"start":{"line":3201,"column":39,"offset":67133},"end":{"line":3201,"column":165,"offset":67259},"indent":[]}}],"position":{"start":{"line":3201,"column":1,"offset":67095},"end":{"line":3201,"column":167,"offset":67261},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CRITICAL","position":{"start":{"line":3202,"column":3,"offset":67264},"end":{"line":3202,"column":13,"offset":67274},"indent":[]}}],"position":{"start":{"line":3202,"column":3,"offset":67264},"end":{"line":3202,"column":13,"offset":67274},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.critical()","position":{"start":{"line":3202,"column":16,"offset":67277},"end":{"line":3202,"column":36,"offset":67297},"indent":[]}}],"position":{"start":{"line":3202,"column":16,"offset":67277},"end":{"line":3202,"column":36,"offset":67297},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The highest level. Used to indicate a fatal error that has caused or is about to cause the program to stop running entirely.","position":{"start":{"line":3202,"column":39,"offset":67300},"end":{"line":3202,"column":163,"offset":67424},"indent":[]}}],"position":{"start":{"line":3202,"column":39,"offset":67300},"end":{"line":3202,"column":165,"offset":67426},"indent":[]}}],"position":{"start":{"line":3202,"column":1,"offset":67262},"end":{"line":3202,"column":167,"offset":67428},"indent":[]}}],"position":{"start":{"line":3196,"column":1,"offset":66260},"end":{"line":3202,"column":167,"offset":67428},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Disabling Logging","position":{"start":{"line":3204,"column":5,"offset":67434},"end":{"line":3204,"column":22,"offset":67451},"indent":[]}}],"position":{"start":{"line":3204,"column":1,"offset":67430},"end":{"line":3204,"column":22,"offset":67451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After you've debugged your program, you probably don't want all these log messages cluttering the screen. The logging.disable() function disables these so that you don't have to go into your program and remove all the logging calls by hand.","position":{"start":{"line":3206,"column":1,"offset":67453},"end":{"line":3206,"column":241,"offset":67693},"indent":[]}}],"position":{"start":{"line":3206,"column":1,"offset":67453},"end":{"line":3206,"column":241,"offset":67693},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.INFO, format=' %(asctime)s -%(levelname)s - %(message)s')\nlogging.critical('Critical error! Critical error!')\nlogging.disable(logging.CRITICAL)\nlogging.critical('Critical error! Critical error!')\nlogging.error('Error! Error!')","position":{"start":{"line":3208,"column":1,"offset":67695},"end":{"line":3216,"column":4,"offset":67985},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging to a File","position":{"start":{"line":3218,"column":5,"offset":67991},"end":{"line":3218,"column":22,"offset":68008},"indent":[]}}],"position":{"start":{"line":3218,"column":1,"offset":67987},"end":{"line":3218,"column":22,"offset":68008},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of displaying the log messages to the screen, you can write them to a text file. The logging.basicConfig() function takes a filename keyword argument, like so:","position":{"start":{"line":3220,"column":1,"offset":68010},"end":{"line":3220,"column":168,"offset":68177},"indent":[]}}],"position":{"start":{"line":3220,"column":1,"offset":68010},"end":{"line":3220,"column":168,"offset":68177},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(filename='myProgramLog.txt', level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')","position":{"start":{"line":3222,"column":1,"offset":68179},"end":{"line":3226,"column":4,"offset":68330},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":3228,"column":4,"offset":68335},"end":{"line":3228,"column":20,"offset":68351},"indent":[]}}],"position":{"start":{"line":3228,"column":1,"offset":68332},"end":{"line":3228,"column":20,"offset":68351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function:","position":{"start":{"line":3230,"column":1,"offset":68353},"end":{"line":3230,"column":15,"offset":68367},"indent":[]}}],"position":{"start":{"line":3230,"column":1,"offset":68353},"end":{"line":3230,"column":15,"offset":68367},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def add(x, y):\n        return x + y\n\nadd(5, 3)","position":{"start":{"line":3232,"column":1,"offset":68369},"end":{"line":3237,"column":4,"offset":68429},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Is equivalent to the ","position":{"start":{"line":3239,"column":1,"offset":68431},"end":{"line":3239,"column":22,"offset":68452},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"lambda","position":{"start":{"line":3239,"column":23,"offset":68453},"end":{"line":3239,"column":29,"offset":68459},"indent":[]}}],"position":{"start":{"line":3239,"column":22,"offset":68452},"end":{"line":3239,"column":30,"offset":68460},"indent":[]}},{"type":"text","value":" function:","position":{"start":{"line":3239,"column":30,"offset":68460},"end":{"line":3239,"column":40,"offset":68470},"indent":[]}}],"position":{"start":{"line":3239,"column":1,"offset":68431},"end":{"line":3239,"column":40,"offset":68470},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"add = lambda x, y: x + y\nadd(5, 3)","position":{"start":{"line":3241,"column":1,"offset":68472},"end":{"line":3244,"column":4,"offset":68520},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not even need to bind it to a name like add before:","position":{"start":{"line":3246,"column":1,"offset":68522},"end":{"line":3246,"column":57,"offset":68578},"indent":[]}}],"position":{"start":{"line":3246,"column":1,"offset":68522},"end":{"line":3246,"column":57,"offset":68578},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"(lambda x, y: x + y)(5, 3)","position":{"start":{"line":3248,"column":1,"offset":68580},"end":{"line":3250,"column":4,"offset":68620},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Like regular nested functions, lambdas also work as lexical closures:","position":{"start":{"line":3252,"column":1,"offset":68622},"end":{"line":3252,"column":70,"offset":68691},"indent":[]}}],"position":{"start":{"line":3252,"column":1,"offset":68622},"end":{"line":3252,"column":70,"offset":68691},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def make_adder(n):\n        return lambda x: x + n\n\nplus_3 = make_adder(3)\nplus_5(4)","position":{"start":{"line":3254,"column":1,"offset":68693},"end":{"line":3260,"column":4,"offset":68790},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: lambda can only evaluate an expression, like a single line of code.","position":{"start":{"line":3262,"column":1,"offset":68792},"end":{"line":3262,"column":74,"offset":68865},"indent":[]}}],"position":{"start":{"line":3262,"column":1,"offset":68792},"end":{"line":3262,"column":74,"offset":68865},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ternary Conditional Operator","position":{"start":{"line":3264,"column":4,"offset":68870},"end":{"line":3264,"column":32,"offset":68898},"indent":[]}}],"position":{"start":{"line":3264,"column":1,"offset":68867},"end":{"line":3264,"column":32,"offset":68898},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many programming languages have a ternary operator, which define a conditional expression. The most common usage is to make a terse simple conditional assignment statement. In other words, it offers one-line code to evaluate the first expression if the condition is true, otherwise it evaluates the second expression.","position":{"start":{"line":3266,"column":1,"offset":68900},"end":{"line":3266,"column":318,"offset":69217},"indent":[]}}],"position":{"start":{"line":3266,"column":1,"offset":68900},"end":{"line":3266,"column":318,"offset":69217},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<expression1> if <condition> else <expression2>","position":{"start":{"line":3268,"column":1,"offset":69219},"end":{"line":3268,"column":52,"offset":69270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":3270,"column":1,"offset":69272},"end":{"line":3270,"column":9,"offset":69280},"indent":[]}}],"position":{"start":{"line":3270,"column":1,"offset":69272},"end":{"line":3270,"column":9,"offset":69280},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"age = 15\n\nprint('kid' if age < 18 else 'adult')","position":{"start":{"line":3272,"column":1,"offset":69282},"end":{"line":3276,"column":4,"offset":69343},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ternary operators can be changed:","position":{"start":{"line":3278,"column":1,"offset":69345},"end":{"line":3278,"column":34,"offset":69378},"indent":[]}}],"position":{"start":{"line":3278,"column":1,"offset":69345},"end":{"line":3278,"column":34,"offset":69378},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"age = 15\nprint('kid' if age < 13 else 'teenager' if age < 18 else 'adult')","position":{"start":{"line":3280,"column":1,"offset":69380},"end":{"line":3283,"column":4,"offset":69468},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The code above is equivalent to:","position":{"start":{"line":3285,"column":1,"offset":69470},"end":{"line":3285,"column":33,"offset":69502},"indent":[]}}],"position":{"start":{"line":3285,"column":1,"offset":69470},"end":{"line":3285,"column":33,"offset":69502},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if age < 18:\n    if age < 12:\n        print('kid')\n    else:\n        print('teenager')\nelse:\n    print('adult')","position":{"start":{"line":3287,"column":1,"offset":69504},"end":{"line":3295,"column":4,"offset":69629},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"args and kwargs","position":{"start":{"line":3297,"column":4,"offset":69634},"end":{"line":3297,"column":19,"offset":69649},"indent":[]}}],"position":{"start":{"line":3297,"column":1,"offset":69631},"end":{"line":3297,"column":19,"offset":69649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The names ","position":{"start":{"line":3299,"column":1,"offset":69651},"end":{"line":3299,"column":11,"offset":69661},"indent":[]}},{"type":"inlineCode","value":"args and kwargs","position":{"start":{"line":3299,"column":11,"offset":69661},"end":{"line":3299,"column":28,"offset":69678},"indent":[]}},{"type":"text","value":" are arbitrary - the important thing are the ","position":{"start":{"line":3299,"column":28,"offset":69678},"end":{"line":3299,"column":73,"offset":69723},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3299,"column":73,"offset":69723},"end":{"line":3299,"column":76,"offset":69726},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":3299,"column":76,"offset":69726},"end":{"line":3299,"column":81,"offset":69731},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3299,"column":81,"offset":69731},"end":{"line":3299,"column":85,"offset":69735},"indent":[]}},{"type":"text","value":" operators. They can mean:","position":{"start":{"line":3299,"column":85,"offset":69735},"end":{"line":3299,"column":111,"offset":69761},"indent":[]}}],"position":{"start":{"line":3299,"column":1,"offset":69651},"end":{"line":3299,"column":111,"offset":69761},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In a function declaration, ","position":{"start":{"line":3301,"column":4,"offset":69766},"end":{"line":3301,"column":31,"offset":69793},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3301,"column":31,"offset":69793},"end":{"line":3301,"column":34,"offset":69796},"indent":[]}},{"type":"text","value":" means \"pack all remaining positional arguments into a tuple named ","position":{"start":{"line":3301,"column":34,"offset":69796},"end":{"line":3301,"column":101,"offset":69863},"indent":[]}},{"type":"inlineCode","value":"<name>","position":{"start":{"line":3301,"column":101,"offset":69863},"end":{"line":3301,"column":109,"offset":69871},"indent":[]}},{"type":"text","value":"\", while ","position":{"start":{"line":3301,"column":109,"offset":69871},"end":{"line":3301,"column":118,"offset":69880},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3301,"column":118,"offset":69880},"end":{"line":3301,"column":122,"offset":69884},"indent":[]}},{"type":"text","value":" is the same for keyword arguments (except it uses a dictionary, not a tuple).","position":{"start":{"line":3301,"column":122,"offset":69884},"end":{"line":3301,"column":200,"offset":69962},"indent":[]}}],"position":{"start":{"line":3301,"column":4,"offset":69766},"end":{"line":3301,"column":200,"offset":69962},"indent":[]}}],"position":{"start":{"line":3301,"column":1,"offset":69763},"end":{"line":3302,"column":1,"offset":69963},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In a function call, ","position":{"start":{"line":3303,"column":4,"offset":69967},"end":{"line":3303,"column":24,"offset":69987},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3303,"column":24,"offset":69987},"end":{"line":3303,"column":27,"offset":69990},"indent":[]}},{"type":"text","value":" means \"unpack tuple or list named ","position":{"start":{"line":3303,"column":27,"offset":69990},"end":{"line":3303,"column":62,"offset":70025},"indent":[]}},{"type":"inlineCode","value":"<name>","position":{"start":{"line":3303,"column":62,"offset":70025},"end":{"line":3303,"column":70,"offset":70033},"indent":[]}},{"type":"text","value":" to positional arguments at this position\", while ","position":{"start":{"line":3303,"column":70,"offset":70033},"end":{"line":3303,"column":120,"offset":70083},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3303,"column":120,"offset":70083},"end":{"line":3303,"column":124,"offset":70087},"indent":[]}},{"type":"text","value":" is the same for keyword arguments.","position":{"start":{"line":3303,"column":124,"offset":70087},"end":{"line":3303,"column":159,"offset":70122},"indent":[]}}],"position":{"start":{"line":3303,"column":4,"offset":69967},"end":{"line":3303,"column":159,"offset":70122},"indent":[]}}],"position":{"start":{"line":3303,"column":1,"offset":69964},"end":{"line":3303,"column":159,"offset":70122},"indent":[]}}],"position":{"start":{"line":3301,"column":1,"offset":69763},"end":{"line":3303,"column":159,"offset":70122},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For example you can make a function that you can use to call any other function, no matter what parameters it has:","position":{"start":{"line":3305,"column":1,"offset":70124},"end":{"line":3305,"column":115,"offset":70238},"indent":[]}}],"position":{"start":{"line":3305,"column":1,"offset":70124},"end":{"line":3305,"column":115,"offset":70238},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def forward(f, *args, **kwargs):\n    return f(*args, **kwargs)","position":{"start":{"line":3307,"column":1,"offset":70240},"end":{"line":3310,"column":4,"offset":70316},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Inside forward, args is a tuple (of all positional arguments except the first one, because we specified it - the f), kwargs is a dict. Then we call f and unpack them so they become normal arguments to f.","position":{"start":{"line":3312,"column":1,"offset":70318},"end":{"line":3312,"column":204,"offset":70521},"indent":[]}}],"position":{"start":{"line":3312,"column":1,"offset":70318},"end":{"line":3312,"column":204,"offset":70521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You use ","position":{"start":{"line":3314,"column":1,"offset":70523},"end":{"line":3314,"column":9,"offset":70531},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3314,"column":9,"offset":70531},"end":{"line":3314,"column":16,"offset":70538},"indent":[]}},{"type":"text","value":" when you have an indefinite amount of positional arguments.","position":{"start":{"line":3314,"column":16,"offset":70538},"end":{"line":3314,"column":76,"offset":70598},"indent":[]}}],"position":{"start":{"line":3314,"column":1,"offset":70523},"end":{"line":3314,"column":76,"offset":70598},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def fruits(*args):\n   for fruit in args:\n      print(fruit)\n\nfruits(\"apples\", \"bananas\", \"grapes\")","position":{"start":{"line":3316,"column":1,"offset":70600},"end":{"line":3322,"column":4,"offset":70712},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Similarly, you use ","position":{"start":{"line":3324,"column":1,"offset":70714},"end":{"line":3324,"column":20,"offset":70733},"indent":[]}},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":3324,"column":20,"offset":70733},"end":{"line":3324,"column":30,"offset":70743},"indent":[]}},{"type":"text","value":" when you have an indefinite number of keyword arguments.","position":{"start":{"line":3324,"column":30,"offset":70743},"end":{"line":3324,"column":87,"offset":70800},"indent":[]}}],"position":{"start":{"line":3324,"column":1,"offset":70714},"end":{"line":3324,"column":87,"offset":70800},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def fruit(**kwargs):\n   for key, value in kwargs.items():\n       print(\"{0}: {1}\".format(key, value))\n\nfruit(name = \"apple\", color = \"red\")","position":{"start":{"line":3326,"column":1,"offset":70802},"end":{"line":3332,"column":4,"offset":70955},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"def show(arg1, arg2, *args, kwarg1=None, kwarg2=None, **kwargs):\n  print(arg1)\n  print(arg2)\n  print(args)\n  print(kwarg1)\n  print(kwarg2)\n  print(kwargs)\n\ndata1 = [1,2,3]\ndata2 = [4,5,6]\ndata3 = {'a':7,'b':8,'c':9}\n\nshow(*data1,*data2, kwarg1=\"python\",kwarg2=\"cheatsheet\",**data3)","position":{"start":{"line":3334,"column":1,"offset":70957},"end":{"line":3348,"column":4,"offset":71252},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"show(*data1, *data2, **data3)","position":{"start":{"line":3350,"column":1,"offset":71254},"end":{"line":3352,"column":4,"offset":71297},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you do not specify ","position":{"start":{"line":3354,"column":1,"offset":71299},"end":{"line":3354,"column":23,"offset":71321},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3354,"column":23,"offset":71321},"end":{"line":3354,"column":25,"offset":71323},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3354,"column":25,"offset":71323},"end":{"line":3354,"column":27,"offset":71325},"indent":[]}},{"type":"text","value":" for kwargs","position":{"start":{"line":3354,"column":27,"offset":71325},"end":{"line":3354,"column":38,"offset":71336},"indent":[]}}],"position":{"start":{"line":3354,"column":1,"offset":71299},"end":{"line":3354,"column":38,"offset":71336},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"show(*data1, *data2, *data3)","position":{"start":{"line":3356,"column":1,"offset":71338},"end":{"line":3358,"column":4,"offset":71380},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Thinks to Remember(args)","position":{"start":{"line":3360,"column":5,"offset":71386},"end":{"line":3360,"column":29,"offset":71410},"indent":[]}}],"position":{"start":{"line":3360,"column":1,"offset":71382},"end":{"line":3360,"column":29,"offset":71410},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Functions can accept a variable number of positional arguments by using ","position":{"start":{"line":3362,"column":4,"offset":71415},"end":{"line":3362,"column":76,"offset":71487},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3362,"column":76,"offset":71487},"end":{"line":3362,"column":83,"offset":71494},"indent":[]}},{"type":"text","value":" in the def statement.","position":{"start":{"line":3362,"column":83,"offset":71494},"end":{"line":3362,"column":105,"offset":71516},"indent":[]}}],"position":{"start":{"line":3362,"column":4,"offset":71415},"end":{"line":3362,"column":105,"offset":71516},"indent":[]}}],"position":{"start":{"line":3362,"column":1,"offset":71412},"end":{"line":3362,"column":105,"offset":71516},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can use the items from a sequence as the positional arguments for a function with the ","position":{"start":{"line":3363,"column":4,"offset":71520},"end":{"line":3363,"column":94,"offset":71610},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3363,"column":94,"offset":71610},"end":{"line":3363,"column":97,"offset":71613},"indent":[]}},{"type":"text","value":" operator.","position":{"start":{"line":3363,"column":97,"offset":71613},"end":{"line":3363,"column":107,"offset":71623},"indent":[]}}],"position":{"start":{"line":3363,"column":4,"offset":71520},"end":{"line":3363,"column":107,"offset":71623},"indent":[]}}],"position":{"start":{"line":3363,"column":1,"offset":71517},"end":{"line":3363,"column":107,"offset":71623},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using the ","position":{"start":{"line":3364,"column":4,"offset":71627},"end":{"line":3364,"column":14,"offset":71637},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3364,"column":14,"offset":71637},"end":{"line":3364,"column":17,"offset":71640},"indent":[]}},{"type":"text","value":" operator with a generator may cause your program to run out of memory and crash.","position":{"start":{"line":3364,"column":17,"offset":71640},"end":{"line":3364,"column":98,"offset":71721},"indent":[]}}],"position":{"start":{"line":3364,"column":4,"offset":71627},"end":{"line":3364,"column":98,"offset":71721},"indent":[]}}],"position":{"start":{"line":3364,"column":1,"offset":71624},"end":{"line":3364,"column":98,"offset":71721},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Adding new positional parameters to functions that accept ","position":{"start":{"line":3365,"column":4,"offset":71725},"end":{"line":3365,"column":62,"offset":71783},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3365,"column":62,"offset":71783},"end":{"line":3365,"column":69,"offset":71790},"indent":[]}},{"type":"text","value":" can introduce hard-to-find bugs.","position":{"start":{"line":3365,"column":69,"offset":71790},"end":{"line":3365,"column":102,"offset":71823},"indent":[]}}],"position":{"start":{"line":3365,"column":4,"offset":71725},"end":{"line":3365,"column":102,"offset":71823},"indent":[]}}],"position":{"start":{"line":3365,"column":1,"offset":71722},"end":{"line":3365,"column":102,"offset":71823},"indent":[]}}],"position":{"start":{"line":3362,"column":1,"offset":71412},"end":{"line":3365,"column":102,"offset":71823},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Thinks to remember(kwargs)","position":{"start":{"line":3367,"column":5,"offset":71829},"end":{"line":3367,"column":31,"offset":71855},"indent":[]}}],"position":{"start":{"line":3367,"column":1,"offset":71825},"end":{"line":3367,"column":31,"offset":71855},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function arguments can be specified by position or by keyword.","position":{"start":{"line":3369,"column":4,"offset":71860},"end":{"line":3369,"column":66,"offset":71922},"indent":[]}}],"position":{"start":{"line":3369,"column":4,"offset":71860},"end":{"line":3369,"column":66,"offset":71922},"indent":[]}}],"position":{"start":{"line":3369,"column":1,"offset":71857},"end":{"line":3369,"column":66,"offset":71922},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keywords make it clear what the purpose of each argument is when it would be confusing with only positional arguments.","position":{"start":{"line":3370,"column":4,"offset":71926},"end":{"line":3370,"column":122,"offset":72044},"indent":[]}}],"position":{"start":{"line":3370,"column":4,"offset":71926},"end":{"line":3370,"column":122,"offset":72044},"indent":[]}}],"position":{"start":{"line":3370,"column":1,"offset":71923},"end":{"line":3370,"column":122,"offset":72044},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keyword arguments with default values make it easy to add new behaviors to a function, especially when the function has existing callers.","position":{"start":{"line":3371,"column":4,"offset":72048},"end":{"line":3371,"column":141,"offset":72185},"indent":[]}}],"position":{"start":{"line":3371,"column":4,"offset":72048},"end":{"line":3371,"column":141,"offset":72185},"indent":[]}}],"position":{"start":{"line":3371,"column":1,"offset":72045},"end":{"line":3371,"column":141,"offset":72185},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Optional keyword arguments should always be passed by keyword instead of by position.","position":{"start":{"line":3372,"column":4,"offset":72189},"end":{"line":3372,"column":89,"offset":72274},"indent":[]}}],"position":{"start":{"line":3372,"column":4,"offset":72189},"end":{"line":3372,"column":89,"offset":72274},"indent":[]}}],"position":{"start":{"line":3372,"column":1,"offset":72186},"end":{"line":3372,"column":89,"offset":72274},"indent":[]}}],"position":{"start":{"line":3369,"column":1,"offset":71857},"end":{"line":3372,"column":89,"offset":72274},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Context Manager","position":{"start":{"line":3374,"column":4,"offset":72279},"end":{"line":3374,"column":19,"offset":72294},"indent":[]}}],"position":{"start":{"line":3374,"column":1,"offset":72276},"end":{"line":3374,"column":19,"offset":72294},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While Python's context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes.","position":{"start":{"line":3376,"column":1,"offset":72296},"end":{"line":3376,"column":311,"offset":72606},"indent":[]}}],"position":{"start":{"line":3376,"column":1,"offset":72296},"end":{"line":3376,"column":311,"offset":72606},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"with statement","position":{"start":{"line":3378,"column":5,"offset":72612},"end":{"line":3378,"column":19,"offset":72626},"indent":[]}}],"position":{"start":{"line":3378,"column":1,"offset":72608},"end":{"line":3378,"column":19,"offset":72626},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A context manager is an object that is notified when a context (a block of code) starts and ends. You commonly use one with the with statement. It takes care of the notifying.","position":{"start":{"line":3380,"column":1,"offset":72628},"end":{"line":3380,"column":176,"offset":72803},"indent":[]}}],"position":{"start":{"line":3380,"column":1,"offset":72628},"end":{"line":3380,"column":176,"offset":72803},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, file objects are context managers. When a context ends, the file object is closed automatically:","position":{"start":{"line":3382,"column":1,"offset":72805},"end":{"line":3382,"column":110,"offset":72914},"indent":[]}}],"position":{"start":{"line":3382,"column":1,"offset":72805},"end":{"line":3382,"column":110,"offset":72914},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open(filename) as f:\n    file_contents = f.read()\n\n# the open_file object has automatically been closed.","position":{"start":{"line":3384,"column":1,"offset":72916},"end":{"line":3389,"column":4,"offset":73039},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Anything that ends execution of the block causes the context manager's exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit from an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager you can ensure that precautions are always taken to prevent damage or loss in this way.","position":{"start":{"line":3391,"column":1,"offset":73041},"end":{"line":3391,"column":453,"offset":73493},"indent":[]}}],"position":{"start":{"line":3391,"column":1,"offset":73041},"end":{"line":3391,"column":453,"offset":73493},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Writing your own contextmanager using generator syntax","position":{"start":{"line":3393,"column":5,"offset":73499},"end":{"line":3393,"column":59,"offset":73553},"indent":[]}}],"position":{"start":{"line":3393,"column":1,"offset":73495},"end":{"line":3393,"column":59,"offset":73553},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is also possible to write a context manager using generator syntax thanks to the ","position":{"start":{"line":3395,"column":1,"offset":73555},"end":{"line":3395,"column":85,"offset":73639},"indent":[]}},{"type":"inlineCode","value":"contextlib.contextmanager","position":{"start":{"line":3395,"column":85,"offset":73639},"end":{"line":3395,"column":112,"offset":73666},"indent":[]}},{"type":"text","value":" decorator:","position":{"start":{"line":3395,"column":112,"offset":73666},"end":{"line":3395,"column":123,"offset":73677},"indent":[]}}],"position":{"start":{"line":3395,"column":1,"offset":73555},"end":{"line":3395,"column":123,"offset":73677},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import contextlib\n\n@contextlib.contextmanager\ndef context_manager(num):\n    print('Enter')\n    yield num + 1\n    print('Exit')\nwith context_manager(2) as cm:\n    # the following instructions are run when the 'yield' point of the context\n    # manager is reached.\n    # 'cm' will have the value that was yielded\n    print('Right in the middle with cm = {}'.format(cm))","position":{"start":{"line":3397,"column":1,"offset":73679},"end":{"line":3410,"column":4,"offset":74060},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"__main__","position":{"start":{"line":3412,"column":4,"offset":74065},"end":{"line":3412,"column":14,"offset":74075},"indent":[]}},{"type":"text","value":" Top-level script environment","position":{"start":{"line":3412,"column":14,"offset":74075},"end":{"line":3412,"column":43,"offset":74104},"indent":[]}}],"position":{"start":{"line":3412,"column":1,"offset":74062},"end":{"line":3412,"column":43,"offset":74104},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"__main__","position":{"start":{"line":3414,"column":1,"offset":74106},"end":{"line":3414,"column":11,"offset":74116},"indent":[]}},{"type":"text","value":" is the name of the scope in which top-level code executes.\nA module's ","position":{"start":{"line":3414,"column":11,"offset":74116},"end":{"line":3415,"column":12,"offset":74187},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":3415,"column":14,"offset":74189},"end":{"line":3415,"column":18,"offset":74193},"indent":[]}}],"position":{"start":{"line":3415,"column":12,"offset":74187},"end":{"line":3415,"column":20,"offset":74195},"indent":[]}},{"type":"text","value":" is set equal to ","position":{"start":{"line":3415,"column":20,"offset":74195},"end":{"line":3415,"column":37,"offset":74212},"indent":[]}},{"type":"inlineCode","value":"__main__","position":{"start":{"line":3415,"column":37,"offset":74212},"end":{"line":3415,"column":47,"offset":74222},"indent":[]}},{"type":"text","value":" when read from standard input, a script, or from an interactive prompt.","position":{"start":{"line":3415,"column":47,"offset":74222},"end":{"line":3415,"column":119,"offset":74294},"indent":[]}}],"position":{"start":{"line":3414,"column":1,"offset":74106},"end":{"line":3415,"column":119,"offset":74294},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"A module can discover whether or not it is running in the main scope by checking its own ","position":{"start":{"line":3417,"column":1,"offset":74296},"end":{"line":3417,"column":90,"offset":74385},"indent":[]}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":3417,"column":90,"offset":74385},"end":{"line":3417,"column":100,"offset":74395},"indent":[]}},{"type":"text","value":", which allows a common idiom for conditionally executing code in a module when it is run as a script or with ","position":{"start":{"line":3417,"column":100,"offset":74395},"end":{"line":3417,"column":210,"offset":74505},"indent":[]}},{"type":"inlineCode","value":"python -m","position":{"start":{"line":3417,"column":210,"offset":74505},"end":{"line":3417,"column":221,"offset":74516},"indent":[]}},{"type":"text","value":" but not when it is imported:","position":{"start":{"line":3417,"column":221,"offset":74516},"end":{"line":3417,"column":250,"offset":74545},"indent":[]}}],"position":{"start":{"line":3417,"column":1,"offset":74296},"end":{"line":3417,"column":250,"offset":74545},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if __name__ == \"__main__\":\n    # execute only if run as a script\n    main()","position":{"start":{"line":3419,"column":1,"offset":74547},"end":{"line":3423,"column":4,"offset":74636},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For a package, the same effect can be achieved by including a ","position":{"start":{"line":3425,"column":1,"offset":74638},"end":{"line":3425,"column":63,"offset":74700},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":3425,"column":65,"offset":74702},"end":{"line":3425,"column":69,"offset":74706},"indent":[]}}],"position":{"start":{"line":3425,"column":63,"offset":74700},"end":{"line":3425,"column":71,"offset":74708},"indent":[]}},{"type":"text","value":".py module, the contents of which will be executed when the module is run with -m.","position":{"start":{"line":3425,"column":71,"offset":74708},"end":{"line":3425,"column":153,"offset":74790},"indent":[]}}],"position":{"start":{"line":3425,"column":1,"offset":74638},"end":{"line":3425,"column":153,"offset":74790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example we are developing script which is designed to be used as module, we should do:","position":{"start":{"line":3427,"column":1,"offset":74792},"end":{"line":3427,"column":91,"offset":74882},"indent":[]}}],"position":{"start":{"line":3427,"column":1,"offset":74792},"end":{"line":3427,"column":91,"offset":74882},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# Python program to execute function directly\ndef add(a, b):\n    return a+b\n\nadd(10, 20) # we can test it by calling the function save it as calculate.py","position":{"start":{"line":3429,"column":1,"offset":74884},"end":{"line":3435,"column":4,"offset":75051},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"# Now if we want to use that module by importing we have to comment out our call,\n# Instead we can write like this in calculate.py\nif __name__ == \"__main__\":\n    add(3, 5)","position":{"start":{"line":3437,"column":1,"offset":75053},"end":{"line":3442,"column":4,"offset":75238},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"import calculate\n\ncalculate.add(3, 5)","position":{"start":{"line":3444,"column":1,"offset":75240},"end":{"line":3448,"column":4,"offset":75291},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Advantages","position":{"start":{"line":3450,"column":5,"offset":75297},"end":{"line":3450,"column":15,"offset":75307},"indent":[]}}],"position":{"start":{"line":3450,"column":1,"offset":75293},"end":{"line":3450,"column":15,"offset":75307},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Every Python module has it's ","position":{"start":{"line":3452,"column":4,"offset":75312},"end":{"line":3452,"column":33,"offset":75341},"indent":[]}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":3452,"column":33,"offset":75341},"end":{"line":3452,"column":43,"offset":75351},"indent":[]}},{"type":"text","value":" defined and if this is ","position":{"start":{"line":3452,"column":43,"offset":75351},"end":{"line":3452,"column":67,"offset":75375},"indent":[]}},{"type":"inlineCode","value":"__main__","position":{"start":{"line":3452,"column":67,"offset":75375},"end":{"line":3452,"column":77,"offset":75385},"indent":[]}},{"type":"text","value":", it implies that the module is being run standalone by the user and we can do corresponding appropriate actions.","position":{"start":{"line":3452,"column":77,"offset":75385},"end":{"line":3452,"column":190,"offset":75498},"indent":[]}}],"position":{"start":{"line":3452,"column":4,"offset":75312},"end":{"line":3452,"column":190,"offset":75498},"indent":[]}}],"position":{"start":{"line":3452,"column":1,"offset":75309},"end":{"line":3452,"column":190,"offset":75498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you import this script as a module in another script, the ","position":{"start":{"line":3453,"column":4,"offset":75502},"end":{"line":3453,"column":65,"offset":75563},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":3453,"column":67,"offset":75565},"end":{"line":3453,"column":71,"offset":75569},"indent":[]}}],"position":{"start":{"line":3453,"column":65,"offset":75563},"end":{"line":3453,"column":73,"offset":75571},"indent":[]}},{"type":"text","value":" is set to the name of the script/module.","position":{"start":{"line":3453,"column":73,"offset":75571},"end":{"line":3453,"column":114,"offset":75612},"indent":[]}}],"position":{"start":{"line":3453,"column":4,"offset":75502},"end":{"line":3453,"column":114,"offset":75612},"indent":[]}}],"position":{"start":{"line":3453,"column":1,"offset":75499},"end":{"line":3453,"column":114,"offset":75612},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Python files can act as either reusable modules, or as standalone programs.","position":{"start":{"line":3454,"column":4,"offset":75616},"end":{"line":3454,"column":79,"offset":75691},"indent":[]}}],"position":{"start":{"line":3454,"column":4,"offset":75616},"end":{"line":3454,"column":79,"offset":75691},"indent":[]}}],"position":{"start":{"line":3454,"column":1,"offset":75613},"end":{"line":3454,"column":79,"offset":75691},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":3455,"column":4,"offset":75695},"end":{"line":3455,"column":7,"offset":75698},"indent":[]}},{"type":"inlineCode","value":"__name__ == \"main\":","position":{"start":{"line":3455,"column":7,"offset":75698},"end":{"line":3455,"column":28,"offset":75719},"indent":[]}},{"type":"text","value":" is used to execute some code only if the file was run directly, and not imported.","position":{"start":{"line":3455,"column":28,"offset":75719},"end":{"line":3455,"column":110,"offset":75801},"indent":[]}}],"position":{"start":{"line":3455,"column":4,"offset":75695},"end":{"line":3455,"column":110,"offset":75801},"indent":[]}}],"position":{"start":{"line":3455,"column":1,"offset":75692},"end":{"line":3455,"column":110,"offset":75801},"indent":[]}}],"position":{"start":{"line":3452,"column":1,"offset":75309},"end":{"line":3455,"column":110,"offset":75801},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"setup.py","position":{"start":{"line":3457,"column":4,"offset":75806},"end":{"line":3457,"column":12,"offset":75814},"indent":[]}}],"position":{"start":{"line":3457,"column":1,"offset":75803},"end":{"line":3457,"column":12,"offset":75814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The setup script is the centre of all activity in building, distributing, and installing modules using the Distutils. The main purpose of the setup script is to describe your module distribution to the Distutils, so that the various commands that operate on your modules do the right thing.","position":{"start":{"line":3459,"column":1,"offset":75816},"end":{"line":3459,"column":291,"offset":76106},"indent":[]}}],"position":{"start":{"line":3459,"column":1,"offset":75816},"end":{"line":3459,"column":291,"offset":76106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":3461,"column":1,"offset":76108},"end":{"line":3461,"column":5,"offset":76112},"indent":[]}},{"type":"inlineCode","value":"setup.py","position":{"start":{"line":3461,"column":5,"offset":76112},"end":{"line":3461,"column":15,"offset":76122},"indent":[]}},{"type":"text","value":" file is at the heart of a Python project. It describes all of the metadata about your project. There a quite a few fields you can add to a project to give it a rich set of metadata describing the project. However, there are only three required fields: name, version, and packages. The name field must be unique if you wish to publish your package on the Python Package Index (PyPI). The version field keeps track of different releases of the project. The packages field describes where you've put the Python source code within your project.","position":{"start":{"line":3461,"column":15,"offset":76122},"end":{"line":3461,"column":556,"offset":76663},"indent":[]}}],"position":{"start":{"line":3461,"column":1,"offset":76108},"end":{"line":3461,"column":556,"offset":76663},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This allows you to easily install Python packages. Often it's enough to write:","position":{"start":{"line":3463,"column":1,"offset":76665},"end":{"line":3463,"column":79,"offset":76743},"indent":[]}}],"position":{"start":{"line":3463,"column":1,"offset":76665},"end":{"line":3463,"column":79,"offset":76743},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"python setup.py install","position":{"start":{"line":3465,"column":1,"offset":76745},"end":{"line":3467,"column":4,"offset":76780},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and module will install itself.","position":{"start":{"line":3469,"column":1,"offset":76782},"end":{"line":3469,"column":32,"offset":76813},"indent":[]}}],"position":{"start":{"line":3469,"column":1,"offset":76782},"end":{"line":3469,"column":32,"offset":76813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our initial setup.py will also include information about the license and will re-use the README.txt file for the long_description field. This will look like:","position":{"start":{"line":3471,"column":1,"offset":76815},"end":{"line":3471,"column":158,"offset":76972},"indent":[]}}],"position":{"start":{"line":3471,"column":1,"offset":76815},"end":{"line":3471,"column":158,"offset":76972},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from distutils.core import setup\nsetup(\n   name='pythonCheatsheet',\n   version='0.1',\n   packages=['pipenv',],\n   license='MIT',\n   long_description=open('README.txt').read(),\n)","position":{"start":{"line":3473,"column":1,"offset":76974},"end":{"line":3482,"column":4,"offset":77165},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Find more information visit ","position":{"start":{"line":3484,"column":1,"offset":77167},"end":{"line":3484,"column":29,"offset":77195},"indent":[]}},{"type":"link","title":null,"url":"http://docs.python.org/install/index.html","children":[{"type":"text","value":"http://docs.python.org/install/index.html","position":{"start":{"line":3484,"column":30,"offset":77196},"end":{"line":3484,"column":71,"offset":77237},"indent":[]}}],"position":{"start":{"line":3484,"column":29,"offset":77195},"end":{"line":3484,"column":115,"offset":77281},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3484,"column":115,"offset":77281},"end":{"line":3484,"column":116,"offset":77282},"indent":[]}}],"position":{"start":{"line":3484,"column":1,"offset":77167},"end":{"line":3484,"column":116,"offset":77282},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dataclasses","position":{"start":{"line":3486,"column":4,"offset":77287},"end":{"line":3486,"column":15,"offset":77298},"indent":[]}}],"position":{"start":{"line":3486,"column":1,"offset":77284},"end":{"line":3486,"column":15,"offset":77298},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Dataclasses","position":{"start":{"line":3488,"column":1,"offset":77300},"end":{"line":3488,"column":14,"offset":77313},"indent":[]}},{"type":"text","value":" are python classes but are suited for storing data objects.\nThis module provides a decorator and functions for automatically adding generated special methods such as ","position":{"start":{"line":3488,"column":14,"offset":77313},"end":{"line":3489,"column":107,"offset":77480},"indent":[1]}},{"type":"inlineCode","value":"__init__()","position":{"start":{"line":3489,"column":107,"offset":77480},"end":{"line":3489,"column":119,"offset":77492},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":3489,"column":119,"offset":77492},"end":{"line":3489,"column":124,"offset":77497},"indent":[]}},{"type":"inlineCode","value":"__repr__()","position":{"start":{"line":3489,"column":124,"offset":77497},"end":{"line":3489,"column":136,"offset":77509},"indent":[]}},{"type":"text","value":" to user-defined classes.","position":{"start":{"line":3489,"column":136,"offset":77509},"end":{"line":3489,"column":161,"offset":77534},"indent":[]}}],"position":{"start":{"line":3488,"column":1,"offset":77300},"end":{"line":3489,"column":161,"offset":77534},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Features","position":{"start":{"line":3491,"column":5,"offset":77540},"end":{"line":3491,"column":13,"offset":77548},"indent":[]}}],"position":{"start":{"line":3491,"column":1,"offset":77536},"end":{"line":3491,"column":13,"offset":77548},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They store data and represent a certain data type. Ex: A number. For people familiar with ORMs, a model instance is a data object. It represents a specific kind of entity. It holds attributes that define or represent the entity.","position":{"start":{"line":3493,"column":4,"offset":77553},"end":{"line":3493,"column":232,"offset":77781},"indent":[]}}],"position":{"start":{"line":3493,"column":4,"offset":77553},"end":{"line":3493,"column":232,"offset":77781},"indent":[]}}],"position":{"start":{"line":3493,"column":1,"offset":77550},"end":{"line":3494,"column":1,"offset":77782},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They can be compared to other objects of the same type. Ex: A number can be greater than, less than, or equal to another number.","position":{"start":{"line":3495,"column":4,"offset":77786},"end":{"line":3495,"column":132,"offset":77914},"indent":[]}}],"position":{"start":{"line":3495,"column":4,"offset":77786},"end":{"line":3495,"column":132,"offset":77914},"indent":[]}}],"position":{"start":{"line":3495,"column":1,"offset":77783},"end":{"line":3495,"column":132,"offset":77914},"indent":[]}}],"position":{"start":{"line":3493,"column":1,"offset":77550},"end":{"line":3495,"column":132,"offset":77914},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3.7 provides a decorator dataclass that is used to convert a class into a dataclass.","position":{"start":{"line":3497,"column":1,"offset":77916},"end":{"line":3497,"column":92,"offset":78007},"indent":[]}}],"position":{"start":{"line":3497,"column":1,"offset":77916},"end":{"line":3497,"column":92,"offset":78007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"python 2.7","position":{"start":{"line":3499,"column":1,"offset":78009},"end":{"line":3499,"column":11,"offset":78019},"indent":[]}}],"position":{"start":{"line":3499,"column":1,"offset":78009},"end":{"line":3499,"column":11,"offset":78019},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"class Number:\n    def __init__(self, val):\n        self.val = val\n\nobj = Number(2)\nobj.val","position":{"start":{"line":3501,"column":1,"offset":78021},"end":{"line":3508,"column":4,"offset":78125},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"with dataclass","position":{"start":{"line":3510,"column":1,"offset":78127},"end":{"line":3510,"column":15,"offset":78141},"indent":[]}}],"position":{"start":{"line":3510,"column":1,"offset":78127},"end":{"line":3510,"column":15,"offset":78141},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\n\n@dataclass\nclass Number:\n    val: int\n\nobj = Number(2)\nobj.val","position":{"start":{"line":3512,"column":1,"offset":78143},"end":{"line":3521,"column":4,"offset":78254},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Default values","position":{"start":{"line":3523,"column":5,"offset":78260},"end":{"line":3523,"column":19,"offset":78274},"indent":[]}}],"position":{"start":{"line":3523,"column":1,"offset":78256},"end":{"line":3523,"column":19,"offset":78274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is easy to add default values to the fields of your data class.","position":{"start":{"line":3525,"column":1,"offset":78276},"end":{"line":3525,"column":67,"offset":78342},"indent":[]}}],"position":{"start":{"line":3525,"column":1,"offset":78276},"end":{"line":3525,"column":67,"offset":78342},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\n\n@dataclass\nclass Product:\n    name: str\n    count: int = 0\n    price: float = 0.0\n\nobj = Product(\"Python\")\nobj.name","position":{"start":{"line":3527,"column":1,"offset":78344},"end":{"line":3538,"column":4,"offset":78508},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"obj.count","position":{"start":{"line":3540,"column":1,"offset":78510},"end":{"line":3542,"column":4,"offset":78533},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"obj.price","position":{"start":{"line":3544,"column":1,"offset":78535},"end":{"line":3546,"column":4,"offset":78558},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Type hints","position":{"start":{"line":3548,"column":5,"offset":78564},"end":{"line":3548,"column":15,"offset":78574},"indent":[]}}],"position":{"start":{"line":3548,"column":1,"offset":78560},"end":{"line":3548,"column":15,"offset":78574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is mandatory to define the data type in dataclass. However, If you don't want specify the datatype then, use ","position":{"start":{"line":3550,"column":1,"offset":78576},"end":{"line":3550,"column":113,"offset":78688},"indent":[]}},{"type":"inlineCode","value":"typing.Any","position":{"start":{"line":3550,"column":113,"offset":78688},"end":{"line":3550,"column":125,"offset":78700},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3550,"column":125,"offset":78700},"end":{"line":3550,"column":126,"offset":78701},"indent":[]}}],"position":{"start":{"line":3550,"column":1,"offset":78576},"end":{"line":3550,"column":126,"offset":78701},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\nfrom typing import Any\n\n@dataclass\nclass WithoutExplicitTypes:\n   name: Any\n   value: Any = 42","position":{"start":{"line":3552,"column":1,"offset":78703},"end":{"line":3560,"column":4,"offset":78845},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":3562,"column":1,"offset":78847},"end":{"line":3562,"column":4,"offset":78850},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3564,"column":1,"offset":78852},"end":{"line":3564,"column":4,"offset":78855},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3566,"column":1,"offset":78857},"end":{"line":3566,"column":4,"offset":78860},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3568,"column":1,"offset":78862},"end":{"line":3568,"column":4,"offset":78865},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PART 2:","position":{"start":{"line":3570,"column":3,"offset":78869},"end":{"line":3570,"column":10,"offset":78876},"indent":[]}}],"position":{"start":{"line":3570,"column":1,"offset":78867},"end":{"line":3570,"column":10,"offset":78876},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Single line comments start with a number symbol.","position":{"start":{"line":3572,"column":3,"offset":78880},"end":{"line":3572,"column":51,"offset":78928},"indent":[]}}],"position":{"start":{"line":3572,"column":1,"offset":78878},"end":{"line":3572,"column":51,"offset":78928},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\" Multiline strings can be written\nusing three \"s, and are often used\nas documentation.\n\"\"\"","position":{"start":{"line":3574,"column":1,"offset":78930},"end":{"line":3577,"column":4,"offset":79023},"indent":[1,1,1]}}],"position":{"start":{"line":3574,"column":1,"offset":78930},"end":{"line":3577,"column":4,"offset":79023},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3579,"column":1,"offset":79025},"end":{"line":3579,"column":53,"offset":79077},"indent":[]}}],"position":{"start":{"line":3579,"column":1,"offset":79025},"end":{"line":3579,"column":53,"offset":79077},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"1. Primitive Datatypes and Operators","position":{"start":{"line":3581,"column":4,"offset":79082},"end":{"line":3581,"column":40,"offset":79118},"indent":[]}}],"position":{"start":{"line":3581,"column":1,"offset":79079},"end":{"line":3581,"column":40,"offset":79118},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3583,"column":1,"offset":79120},"end":{"line":3583,"column":53,"offset":79172},"indent":[]}}],"position":{"start":{"line":3583,"column":1,"offset":79120},"end":{"line":3583,"column":53,"offset":79172},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You have numbers","position":{"start":{"line":3585,"column":3,"offset":79176},"end":{"line":3585,"column":19,"offset":79192},"indent":[]}}],"position":{"start":{"line":3585,"column":1,"offset":79174},"end":{"line":3585,"column":19,"offset":79192},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"3 # => 3","position":{"start":{"line":3587,"column":1,"offset":79194},"end":{"line":3587,"column":9,"offset":79202},"indent":[]}}],"position":{"start":{"line":3587,"column":1,"offset":79194},"end":{"line":3587,"column":9,"offset":79202},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Math is what you would expect","position":{"start":{"line":3589,"column":3,"offset":79206},"end":{"line":3589,"column":32,"offset":79235},"indent":[]}}],"position":{"start":{"line":3589,"column":1,"offset":79204},"end":{"line":3589,"column":32,"offset":79235},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 + 1 # => 2\n8 - 1 # => 7\n10 ","position":{"start":{"line":3591,"column":1,"offset":79237},"end":{"line":3593,"column":4,"offset":79266},"indent":[1,1]}},{"type":"text","value":"*","position":{"start":{"line":3593,"column":4,"offset":79266},"end":{"line":3593,"column":6,"offset":79268},"indent":[]}},{"type":"text","value":" 2 # => 20\n35 / 5 # => 7.0","position":{"start":{"line":3593,"column":6,"offset":79268},"end":{"line":3594,"column":16,"offset":79294},"indent":[1]}}],"position":{"start":{"line":3591,"column":1,"offset":79237},"end":{"line":3594,"column":16,"offset":79294},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Integer division rounds down for both positive and negative numbers.","position":{"start":{"line":3596,"column":3,"offset":79298},"end":{"line":3596,"column":71,"offset":79366},"indent":[]}}],"position":{"start":{"line":3596,"column":1,"offset":79296},"end":{"line":3596,"column":71,"offset":79366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"5 // 3 # => 1\n-5 // 3 # => -2\n5.0 // 3.0 # => 1.0 # works on floats too\n-5.0 // 3.0 # => -2.0","position":{"start":{"line":3598,"column":1,"offset":79368},"end":{"line":3601,"column":22,"offset":79461},"indent":[1,1,1]}}],"position":{"start":{"line":3598,"column":1,"offset":79368},"end":{"line":3601,"column":22,"offset":79461},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The result of division is always a float","position":{"start":{"line":3603,"column":3,"offset":79465},"end":{"line":3603,"column":43,"offset":79505},"indent":[]}}],"position":{"start":{"line":3603,"column":1,"offset":79463},"end":{"line":3603,"column":43,"offset":79505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"10.0 / 3 # => 3.3333333333333335","position":{"start":{"line":3605,"column":1,"offset":79507},"end":{"line":3605,"column":33,"offset":79539},"indent":[]}}],"position":{"start":{"line":3605,"column":1,"offset":79507},"end":{"line":3605,"column":33,"offset":79539},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Modulo operation","position":{"start":{"line":3607,"column":3,"offset":79543},"end":{"line":3607,"column":19,"offset":79559},"indent":[]}}],"position":{"start":{"line":3607,"column":1,"offset":79541},"end":{"line":3607,"column":19,"offset":79559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"7 % 3 # => 1","position":{"start":{"line":3609,"column":1,"offset":79561},"end":{"line":3609,"column":13,"offset":79573},"indent":[]}}],"position":{"start":{"line":3609,"column":1,"offset":79561},"end":{"line":3609,"column":13,"offset":79573},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Exponentiation (x","position":{"start":{"line":3611,"column":3,"offset":79577},"end":{"line":3611,"column":20,"offset":79594},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3611,"column":20,"offset":79594},"end":{"line":3611,"column":22,"offset":79596},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3611,"column":22,"offset":79596},"end":{"line":3611,"column":24,"offset":79598},"indent":[]}},{"type":"text","value":"y, x to the yth power)","position":{"start":{"line":3611,"column":24,"offset":79598},"end":{"line":3611,"column":46,"offset":79620},"indent":[]}}],"position":{"start":{"line":3611,"column":1,"offset":79575},"end":{"line":3611,"column":46,"offset":79620},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2","position":{"start":{"line":3613,"column":1,"offset":79622},"end":{"line":3613,"column":2,"offset":79623},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3613,"column":2,"offset":79623},"end":{"line":3613,"column":4,"offset":79625},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3613,"column":4,"offset":79625},"end":{"line":3613,"column":6,"offset":79627},"indent":[]}},{"type":"text","value":"3 # => 8","position":{"start":{"line":3613,"column":6,"offset":79627},"end":{"line":3613,"column":14,"offset":79635},"indent":[]}}],"position":{"start":{"line":3613,"column":1,"offset":79622},"end":{"line":3613,"column":14,"offset":79635},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Enforce precedence with parentheses","position":{"start":{"line":3615,"column":3,"offset":79639},"end":{"line":3615,"column":38,"offset":79674},"indent":[]}}],"position":{"start":{"line":3615,"column":1,"offset":79637},"end":{"line":3615,"column":38,"offset":79674},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(1 + 3) ","position":{"start":{"line":3617,"column":1,"offset":79676},"end":{"line":3617,"column":9,"offset":79684},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3617,"column":9,"offset":79684},"end":{"line":3617,"column":11,"offset":79686},"indent":[]}},{"type":"text","value":" 2 # => 8","position":{"start":{"line":3617,"column":11,"offset":79686},"end":{"line":3617,"column":20,"offset":79695},"indent":[]}}],"position":{"start":{"line":3617,"column":1,"offset":79676},"end":{"line":3617,"column":20,"offset":79695},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Boolean values are primitives (Note: the capitalization)","position":{"start":{"line":3619,"column":3,"offset":79699},"end":{"line":3619,"column":59,"offset":79755},"indent":[]}}],"position":{"start":{"line":3619,"column":1,"offset":79697},"end":{"line":3619,"column":59,"offset":79755},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True\nFalse","position":{"start":{"line":3621,"column":1,"offset":79757},"end":{"line":3622,"column":6,"offset":79767},"indent":[1]}}],"position":{"start":{"line":3621,"column":1,"offset":79757},"end":{"line":3622,"column":6,"offset":79767},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"negate with not","position":{"start":{"line":3624,"column":3,"offset":79771},"end":{"line":3624,"column":18,"offset":79786},"indent":[]}}],"position":{"start":{"line":3624,"column":1,"offset":79769},"end":{"line":3624,"column":18,"offset":79786},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"not True # => False\nnot False # => True","position":{"start":{"line":3626,"column":1,"offset":79788},"end":{"line":3627,"column":20,"offset":79827},"indent":[1]}}],"position":{"start":{"line":3626,"column":1,"offset":79788},"end":{"line":3627,"column":20,"offset":79827},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":3629,"column":3,"offset":79831},"end":{"line":3629,"column":20,"offset":79848},"indent":[]}}],"position":{"start":{"line":3629,"column":1,"offset":79829},"end":{"line":3629,"column":20,"offset":79848},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note \"and\" and \"or\" are case-sensitive","position":{"start":{"line":3631,"column":3,"offset":79852},"end":{"line":3631,"column":41,"offset":79890},"indent":[]}}],"position":{"start":{"line":3631,"column":1,"offset":79850},"end":{"line":3631,"column":41,"offset":79890},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True and False # => False\nFalse or True # => True","position":{"start":{"line":3633,"column":1,"offset":79892},"end":{"line":3634,"column":24,"offset":79941},"indent":[1]}}],"position":{"start":{"line":3633,"column":1,"offset":79892},"end":{"line":3634,"column":24,"offset":79941},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"True and False are actually 1 and 0 but with different keywords","position":{"start":{"line":3636,"column":3,"offset":79945},"end":{"line":3636,"column":66,"offset":80008},"indent":[]}}],"position":{"start":{"line":3636,"column":1,"offset":79943},"end":{"line":3636,"column":66,"offset":80008},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True + True # => 2\nTrue ","position":{"start":{"line":3638,"column":1,"offset":80010},"end":{"line":3639,"column":6,"offset":80034},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":3639,"column":6,"offset":80034},"end":{"line":3639,"column":8,"offset":80036},"indent":[]}},{"type":"text","value":" 8 # => 8\nFalse - 5 # => -5","position":{"start":{"line":3639,"column":8,"offset":80036},"end":{"line":3640,"column":18,"offset":80063},"indent":[1]}}],"position":{"start":{"line":3638,"column":1,"offset":80010},"end":{"line":3640,"column":18,"offset":80063},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Comparison operators look at the numerical value of True and False","position":{"start":{"line":3642,"column":3,"offset":80067},"end":{"line":3642,"column":69,"offset":80133},"indent":[]}}],"position":{"start":{"line":3642,"column":1,"offset":80065},"end":{"line":3642,"column":69,"offset":80133},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0 == False # => True\n1 == True # => True\n2 == True # => False\n-5 != False # => True","position":{"start":{"line":3644,"column":1,"offset":80135},"end":{"line":3647,"column":22,"offset":80218},"indent":[1,1,1]}}],"position":{"start":{"line":3644,"column":1,"offset":80135},"end":{"line":3647,"column":22,"offset":80218},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using boolean logical operators on ints casts them to booleans for evaluation, but their non-cast value is returned","position":{"start":{"line":3649,"column":3,"offset":80222},"end":{"line":3649,"column":118,"offset":80337},"indent":[]}}],"position":{"start":{"line":3649,"column":1,"offset":80220},"end":{"line":3649,"column":118,"offset":80337},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Don't mix up with bool(ints) and bitwise and/or (&,|)","position":{"start":{"line":3651,"column":3,"offset":80341},"end":{"line":3651,"column":56,"offset":80394},"indent":[]}}],"position":{"start":{"line":3651,"column":1,"offset":80339},"end":{"line":3651,"column":56,"offset":80394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"bool(0) # => False\nbool(4) # => True\nbool(-6) # => True\n0 and 2 # => 0\n-5 or 0 # => -5","position":{"start":{"line":3653,"column":1,"offset":80396},"end":{"line":3657,"column":16,"offset":80482},"indent":[1,1,1,1]}}],"position":{"start":{"line":3653,"column":1,"offset":80396},"end":{"line":3657,"column":16,"offset":80482},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Equality is ==","position":{"start":{"line":3659,"column":3,"offset":80486},"end":{"line":3659,"column":17,"offset":80500},"indent":[]}}],"position":{"start":{"line":3659,"column":1,"offset":80484},"end":{"line":3659,"column":17,"offset":80500},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 == 1 # => True\n2 == 1 # => False","position":{"start":{"line":3661,"column":1,"offset":80502},"end":{"line":3662,"column":18,"offset":80536},"indent":[1]}}],"position":{"start":{"line":3661,"column":1,"offset":80502},"end":{"line":3662,"column":18,"offset":80536},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Inequality is !=","position":{"start":{"line":3664,"column":3,"offset":80540},"end":{"line":3664,"column":19,"offset":80556},"indent":[]}}],"position":{"start":{"line":3664,"column":1,"offset":80538},"end":{"line":3664,"column":19,"offset":80556},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 != 1 # => False\n2 != 1 # => True","position":{"start":{"line":3666,"column":1,"offset":80558},"end":{"line":3667,"column":17,"offset":80592},"indent":[1]}}],"position":{"start":{"line":3666,"column":1,"offset":80558},"end":{"line":3667,"column":17,"offset":80592},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"More comparisons","position":{"start":{"line":3669,"column":3,"offset":80596},"end":{"line":3669,"column":19,"offset":80612},"indent":[]}}],"position":{"start":{"line":3669,"column":1,"offset":80594},"end":{"line":3669,"column":19,"offset":80612},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 10 # => True\n1 > 10 # => False\n2 <= 2 # => True\n2 >= 2 # => True","position":{"start":{"line":3671,"column":1,"offset":80614},"end":{"line":3674,"column":17,"offset":80682},"indent":[1,1,1]}}],"position":{"start":{"line":3671,"column":1,"offset":80614},"end":{"line":3674,"column":17,"offset":80682},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Seeing whether a value is in a range","position":{"start":{"line":3676,"column":3,"offset":80686},"end":{"line":3676,"column":39,"offset":80722},"indent":[]}}],"position":{"start":{"line":3676,"column":1,"offset":80684},"end":{"line":3676,"column":39,"offset":80722},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 2 and 2 < 3 # => True\n2 < 3 and 3 < 2 # => False","position":{"start":{"line":3678,"column":1,"offset":80724},"end":{"line":3679,"column":27,"offset":80776},"indent":[1]}}],"position":{"start":{"line":3678,"column":1,"offset":80724},"end":{"line":3679,"column":27,"offset":80776},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Chaining makes this look nicer","position":{"start":{"line":3681,"column":3,"offset":80780},"end":{"line":3681,"column":33,"offset":80810},"indent":[]}}],"position":{"start":{"line":3681,"column":1,"offset":80778},"end":{"line":3681,"column":33,"offset":80810},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 2 < 3 # => True\n2 < 3 < 2 # => False","position":{"start":{"line":3683,"column":1,"offset":80812},"end":{"line":3684,"column":21,"offset":80852},"indent":[1]}}],"position":{"start":{"line":3683,"column":1,"offset":80812},"end":{"line":3684,"column":21,"offset":80852},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(is vs. ==) is checks if two variables refer to the same object, but == checks","position":{"start":{"line":3686,"column":3,"offset":80856},"end":{"line":3686,"column":81,"offset":80934},"indent":[]}}],"position":{"start":{"line":3686,"column":1,"offset":80854},"end":{"line":3686,"column":81,"offset":80934},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"if the objects pointed to have the same values.","position":{"start":{"line":3688,"column":3,"offset":80938},"end":{"line":3688,"column":50,"offset":80985},"indent":[]}}],"position":{"start":{"line":3688,"column":1,"offset":80936},"end":{"line":3688,"column":50,"offset":80985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a = ","position":{"start":{"line":3690,"column":1,"offset":80987},"end":{"line":3690,"column":5,"offset":80991},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3690,"column":6,"offset":80992},"end":{"line":3690,"column":16,"offset":81002},"indent":[]}}],"position":{"start":{"line":3690,"column":5,"offset":80991},"end":{"line":3690,"column":17,"offset":81003},"indent":[]}},{"type":"text","value":" # Point a at a new list, ","position":{"start":{"line":3690,"column":17,"offset":81003},"end":{"line":3690,"column":43,"offset":81029},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3690,"column":44,"offset":81030},"end":{"line":3690,"column":54,"offset":81040},"indent":[]}}],"position":{"start":{"line":3690,"column":43,"offset":81029},"end":{"line":3690,"column":55,"offset":81041},"indent":[]}},{"type":"text","value":"\nb = a # Point b at what a is pointing to\nb is a # => True, a and b refer to the same object\nb == a # => True, a's and b's objects are equal\nb = ","position":{"start":{"line":3690,"column":55,"offset":81041},"end":{"line":3694,"column":5,"offset":81186},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3694,"column":6,"offset":81187},"end":{"line":3694,"column":16,"offset":81197},"indent":[]}}],"position":{"start":{"line":3694,"column":5,"offset":81186},"end":{"line":3694,"column":17,"offset":81198},"indent":[]}},{"type":"text","value":" # Point b at a new list, ","position":{"start":{"line":3694,"column":17,"offset":81198},"end":{"line":3694,"column":43,"offset":81224},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3694,"column":44,"offset":81225},"end":{"line":3694,"column":54,"offset":81235},"indent":[]}}],"position":{"start":{"line":3694,"column":43,"offset":81224},"end":{"line":3694,"column":55,"offset":81236},"indent":[]}},{"type":"text","value":"\nb is a # => False, a and b do not refer to the same object\nb == a # => True, a's and b's objects are equal","position":{"start":{"line":3694,"column":55,"offset":81236},"end":{"line":3696,"column":48,"offset":81343},"indent":[1,1]}}],"position":{"start":{"line":3690,"column":1,"offset":80987},"end":{"line":3696,"column":48,"offset":81343},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Strings are created with \" or '","position":{"start":{"line":3698,"column":3,"offset":81347},"end":{"line":3698,"column":34,"offset":81378},"indent":[]}}],"position":{"start":{"line":3698,"column":1,"offset":81345},"end":{"line":3698,"column":34,"offset":81378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"This is a string.\"\n'This is also a string.'","position":{"start":{"line":3700,"column":1,"offset":81380},"end":{"line":3701,"column":25,"offset":81424},"indent":[1]}}],"position":{"start":{"line":3700,"column":1,"offset":81380},"end":{"line":3701,"column":25,"offset":81424},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Strings can be added too! But try not to do this.","position":{"start":{"line":3703,"column":3,"offset":81428},"end":{"line":3703,"column":52,"offset":81477},"indent":[]}}],"position":{"start":{"line":3703,"column":1,"offset":81426},"end":{"line":3703,"column":52,"offset":81477},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"Hello \" + \"world!\" # => \"Hello world!\"","position":{"start":{"line":3705,"column":1,"offset":81479},"end":{"line":3705,"column":40,"offset":81518},"indent":[]}}],"position":{"start":{"line":3705,"column":1,"offset":81479},"end":{"line":3705,"column":40,"offset":81518},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"String literals (but not variables) can be concatenated without using '+'","position":{"start":{"line":3707,"column":3,"offset":81522},"end":{"line":3707,"column":76,"offset":81595},"indent":[]}}],"position":{"start":{"line":3707,"column":1,"offset":81520},"end":{"line":3707,"column":76,"offset":81595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"Hello \" \"world!\" # => \"Hello world!\"","position":{"start":{"line":3709,"column":1,"offset":81597},"end":{"line":3709,"column":38,"offset":81634},"indent":[]}}],"position":{"start":{"line":3709,"column":1,"offset":81597},"end":{"line":3709,"column":38,"offset":81634},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"A string can be treated like a list of characters","position":{"start":{"line":3711,"column":3,"offset":81638},"end":{"line":3711,"column":52,"offset":81687},"indent":[]}}],"position":{"start":{"line":3711,"column":1,"offset":81636},"end":{"line":3711,"column":52,"offset":81687},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"This is a string\"","position":{"start":{"line":3713,"column":1,"offset":81689},"end":{"line":3713,"column":19,"offset":81707},"indent":[]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3713,"column":20,"offset":81708},"end":{"line":3713,"column":21,"offset":81709},"indent":[]}}],"position":{"start":{"line":3713,"column":19,"offset":81707},"end":{"line":3713,"column":22,"offset":81710},"indent":[]}},{"type":"text","value":" # => 'T'","position":{"start":{"line":3713,"column":22,"offset":81710},"end":{"line":3713,"column":31,"offset":81719},"indent":[]}}],"position":{"start":{"line":3713,"column":1,"offset":81689},"end":{"line":3713,"column":31,"offset":81719},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can find the length of a string","position":{"start":{"line":3715,"column":3,"offset":81723},"end":{"line":3715,"column":38,"offset":81758},"indent":[]}}],"position":{"start":{"line":3715,"column":1,"offset":81721},"end":{"line":3715,"column":38,"offset":81758},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(\"This is a string\") # => 16","position":{"start":{"line":3717,"column":1,"offset":81760},"end":{"line":3717,"column":32,"offset":81791},"indent":[]}}],"position":{"start":{"line":3717,"column":1,"offset":81760},"end":{"line":3717,"column":32,"offset":81791},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":".format can be used to format strings, like this:","position":{"start":{"line":3719,"column":3,"offset":81795},"end":{"line":3719,"column":52,"offset":81844},"indent":[]}}],"position":{"start":{"line":3719,"column":1,"offset":81793},"end":{"line":3719,"column":52,"offset":81844},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{} can be {}\".format(\"Strings\", \"interpolated\") # => \"Strings can be interpolated\"","position":{"start":{"line":3721,"column":1,"offset":81846},"end":{"line":3721,"column":84,"offset":81929},"indent":[]}}],"position":{"start":{"line":3721,"column":1,"offset":81846},"end":{"line":3721,"column":84,"offset":81929},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can repeat the formatting arguments to save some typing.","position":{"start":{"line":3723,"column":3,"offset":81933},"end":{"line":3723,"column":63,"offset":81993},"indent":[]}}],"position":{"start":{"line":3723,"column":1,"offset":81931},"end":{"line":3723,"column":63,"offset":81993},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{0} be nimble, {0} be quick, {0} jump over the {1}\".format(\"Jack\", \"candle stick\")","position":{"start":{"line":3725,"column":1,"offset":81995},"end":{"line":3725,"column":84,"offset":82078},"indent":[]}}],"position":{"start":{"line":3725,"column":1,"offset":81995},"end":{"line":3725,"column":84,"offset":82078},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"=> \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"","position":{"start":{"line":3727,"column":3,"offset":82082},"end":{"line":3727,"column":70,"offset":82149},"indent":[]}}],"position":{"start":{"line":3727,"column":1,"offset":82080},"end":{"line":3727,"column":70,"offset":82149},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can use keywords if you don't want to count.","position":{"start":{"line":3729,"column":3,"offset":82153},"end":{"line":3729,"column":51,"offset":82201},"indent":[]}}],"position":{"start":{"line":3729,"column":1,"offset":82151},"end":{"line":3729,"column":51,"offset":82201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{name} wants to eat {food}\".format(name=\"Bob\", food=\"lasagna\") # => \"Bob wants to eat lasagna\"","position":{"start":{"line":3731,"column":1,"offset":82203},"end":{"line":3731,"column":96,"offset":82298},"indent":[]}}],"position":{"start":{"line":3731,"column":1,"offset":82203},"end":{"line":3731,"column":96,"offset":82298},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"If your Python 3 code also needs to run on Python 2.5 and below, you can also","position":{"start":{"line":3733,"column":3,"offset":82302},"end":{"line":3733,"column":80,"offset":82379},"indent":[]}}],"position":{"start":{"line":3733,"column":1,"offset":82300},"end":{"line":3733,"column":80,"offset":82379},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"still use the old style of formatting:","position":{"start":{"line":3735,"column":3,"offset":82383},"end":{"line":3735,"column":41,"offset":82421},"indent":[]}}],"position":{"start":{"line":3735,"column":1,"offset":82381},"end":{"line":3735,"column":41,"offset":82421},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"%s can be %s the %s way\" % (\"Strings\", \"interpolated\", \"old\") # => \"Strings can be interpolated the old way\"","position":{"start":{"line":3737,"column":1,"offset":82423},"end":{"line":3737,"column":110,"offset":82532},"indent":[]}}],"position":{"start":{"line":3737,"column":1,"offset":82423},"end":{"line":3737,"column":110,"offset":82532},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also format using f-strings or formatted string literals (in Python 3.6+)","position":{"start":{"line":3739,"column":3,"offset":82536},"end":{"line":3739,"column":84,"offset":82617},"indent":[]}}],"position":{"start":{"line":3739,"column":1,"offset":82534},"end":{"line":3739,"column":84,"offset":82617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"name = \"Reiko\"\nf\"She said her name is {name}.\" # => \"She said her name is Reiko\"","position":{"start":{"line":3741,"column":1,"offset":82619},"end":{"line":3742,"column":66,"offset":82699},"indent":[1]}}],"position":{"start":{"line":3741,"column":1,"offset":82619},"end":{"line":3742,"column":66,"offset":82699},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can basically put any Python statement inside the braces and it will be output in the string.","position":{"start":{"line":3744,"column":3,"offset":82703},"end":{"line":3744,"column":100,"offset":82800},"indent":[]}}],"position":{"start":{"line":3744,"column":1,"offset":82701},"end":{"line":3744,"column":100,"offset":82800},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"f\"{name} is {len(name)} characters long.\" # => \"Reiko is 5 characters long.\"","position":{"start":{"line":3746,"column":1,"offset":82802},"end":{"line":3746,"column":77,"offset":82878},"indent":[]}}],"position":{"start":{"line":3746,"column":1,"offset":82802},"end":{"line":3746,"column":77,"offset":82878},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"None is an object","position":{"start":{"line":3748,"column":3,"offset":82882},"end":{"line":3748,"column":20,"offset":82899},"indent":[]}}],"position":{"start":{"line":3748,"column":1,"offset":82880},"end":{"line":3748,"column":20,"offset":82899},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"None # => None","position":{"start":{"line":3750,"column":1,"offset":82901},"end":{"line":3750,"column":15,"offset":82915},"indent":[]}}],"position":{"start":{"line":3750,"column":1,"offset":82901},"end":{"line":3750,"column":15,"offset":82915},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Don't use the equality \"==\" symbol to compare objects to None","position":{"start":{"line":3752,"column":3,"offset":82919},"end":{"line":3752,"column":64,"offset":82980},"indent":[]}}],"position":{"start":{"line":3752,"column":1,"offset":82917},"end":{"line":3752,"column":64,"offset":82980},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"is\" instead. This checks for equality of object identity.","position":{"start":{"line":3754,"column":3,"offset":82984},"end":{"line":3754,"column":65,"offset":83046},"indent":[]}}],"position":{"start":{"line":3754,"column":1,"offset":82982},"end":{"line":3754,"column":65,"offset":83046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"etc\" is None # => False\nNone is None # => True","position":{"start":{"line":3756,"column":1,"offset":83048},"end":{"line":3757,"column":23,"offset":83095},"indent":[1]}}],"position":{"start":{"line":3756,"column":1,"offset":83048},"end":{"line":3757,"column":23,"offset":83095},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"None, 0, and empty strings/lists/dicts/tuples all evaluate to False.","position":{"start":{"line":3759,"column":3,"offset":83099},"end":{"line":3759,"column":71,"offset":83167},"indent":[]}}],"position":{"start":{"line":3759,"column":1,"offset":83097},"end":{"line":3759,"column":71,"offset":83167},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"All other values are True","position":{"start":{"line":3761,"column":3,"offset":83171},"end":{"line":3761,"column":28,"offset":83196},"indent":[]}}],"position":{"start":{"line":3761,"column":1,"offset":83169},"end":{"line":3761,"column":28,"offset":83196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"bool(0) # => False\nbool(\"\") # => False\nbool([]) # => False\nbool({}) # => False\nbool(()) # => False","position":{"start":{"line":3763,"column":1,"offset":83198},"end":{"line":3767,"column":20,"offset":83296},"indent":[1,1,1,1]}}],"position":{"start":{"line":3763,"column":1,"offset":83198},"end":{"line":3767,"column":20,"offset":83296},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3769,"column":1,"offset":83298},"end":{"line":3769,"column":53,"offset":83350},"indent":[]}}],"position":{"start":{"line":3769,"column":1,"offset":83298},"end":{"line":3769,"column":53,"offset":83350},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2. Variables and Collections","position":{"start":{"line":3771,"column":4,"offset":83355},"end":{"line":3771,"column":32,"offset":83383},"indent":[]}}],"position":{"start":{"line":3771,"column":1,"offset":83352},"end":{"line":3771,"column":32,"offset":83383},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3773,"column":1,"offset":83385},"end":{"line":3773,"column":53,"offset":83437},"indent":[]}}],"position":{"start":{"line":3773,"column":1,"offset":83385},"end":{"line":3773,"column":53,"offset":83437},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python has a print function","position":{"start":{"line":3775,"column":3,"offset":83441},"end":{"line":3775,"column":30,"offset":83468},"indent":[]}}],"position":{"start":{"line":3775,"column":1,"offset":83439},"end":{"line":3775,"column":30,"offset":83468},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"I'm Python. Nice to meet you!\") # => I'm Python. Nice to meet you!","position":{"start":{"line":3777,"column":1,"offset":83470},"end":{"line":3777,"column":74,"offset":83543},"indent":[]}}],"position":{"start":{"line":3777,"column":1,"offset":83470},"end":{"line":3777,"column":74,"offset":83543},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"By default the print function also prints out a newline at the end.","position":{"start":{"line":3779,"column":3,"offset":83547},"end":{"line":3779,"column":70,"offset":83614},"indent":[]}}],"position":{"start":{"line":3779,"column":1,"offset":83545},"end":{"line":3779,"column":70,"offset":83614},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use the optional argument end to change the end string.","position":{"start":{"line":3781,"column":3,"offset":83618},"end":{"line":3781,"column":58,"offset":83673},"indent":[]}}],"position":{"start":{"line":3781,"column":1,"offset":83616},"end":{"line":3781,"column":58,"offset":83673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"Hello, World\", end=\"!\") # => Hello, World!","position":{"start":{"line":3783,"column":1,"offset":83675},"end":{"line":3783,"column":50,"offset":83724},"indent":[]}}],"position":{"start":{"line":3783,"column":1,"offset":83675},"end":{"line":3783,"column":50,"offset":83724},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Simple way to get input data from console","position":{"start":{"line":3785,"column":3,"offset":83728},"end":{"line":3785,"column":44,"offset":83769},"indent":[]}}],"position":{"start":{"line":3785,"column":1,"offset":83726},"end":{"line":3785,"column":44,"offset":83769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"input","position":{"start":{"line":3787,"column":1,"offset":83771},"end":{"line":3787,"column":6,"offset":83776},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"string","position":{"start":{"line":3787,"column":7,"offset":83777},"end":{"line":3787,"column":13,"offset":83783},"indent":[]}}],"position":{"start":{"line":3787,"column":6,"offset":83776},"end":{"line":3787,"column":14,"offset":83784},"indent":[]}},{"type":"text","value":"var = input(\"Enter some data: \") # Returns the data as a string","position":{"start":{"line":3787,"column":14,"offset":83784},"end":{"line":3787,"column":77,"offset":83847},"indent":[]}}],"position":{"start":{"line":3787,"column":1,"offset":83771},"end":{"line":3787,"column":77,"offset":83847},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note: In earlier versions of Python, input() method was named as raw_input()","position":{"start":{"line":3789,"column":3,"offset":83851},"end":{"line":3789,"column":79,"offset":83927},"indent":[]}}],"position":{"start":{"line":3789,"column":1,"offset":83849},"end":{"line":3789,"column":79,"offset":83927},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are no declarations, only assignments.","position":{"start":{"line":3791,"column":3,"offset":83931},"end":{"line":3791,"column":47,"offset":83975},"indent":[]}}],"position":{"start":{"line":3791,"column":1,"offset":83929},"end":{"line":3791,"column":47,"offset":83975},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Convention is to use lower","position":{"start":{"line":3793,"column":3,"offset":83979},"end":{"line":3793,"column":29,"offset":84005},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"case","position":{"start":{"line":3793,"column":30,"offset":84006},"end":{"line":3793,"column":34,"offset":84010},"indent":[]}}],"position":{"start":{"line":3793,"column":29,"offset":84005},"end":{"line":3793,"column":35,"offset":84011},"indent":[]}},{"type":"text","value":"with_underscores","position":{"start":{"line":3793,"column":35,"offset":84011},"end":{"line":3793,"column":51,"offset":84027},"indent":[]}}],"position":{"start":{"line":3793,"column":1,"offset":83977},"end":{"line":3793,"column":51,"offset":84027},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":3795,"column":1,"offset":84029},"end":{"line":3795,"column":5,"offset":84033},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"var = 5\nsome","position":{"start":{"line":3795,"column":6,"offset":84034},"end":{"line":3796,"column":5,"offset":84046},"indent":[1]}}],"position":{"start":{"line":3795,"column":5,"offset":84033},"end":{"line":3796,"column":6,"offset":84047},"indent":[1]}},{"type":"text","value":"var # => 5","position":{"start":{"line":3796,"column":6,"offset":84047},"end":{"line":3796,"column":16,"offset":84057},"indent":[]}}],"position":{"start":{"line":3795,"column":1,"offset":84029},"end":{"line":3796,"column":16,"offset":84057},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Accessing a previously unassigned variable is an exception.","position":{"start":{"line":3798,"column":3,"offset":84061},"end":{"line":3798,"column":62,"offset":84120},"indent":[]}}],"position":{"start":{"line":3798,"column":1,"offset":84059},"end":{"line":3798,"column":62,"offset":84120},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"See Control Flow to learn more about exception handling.","position":{"start":{"line":3800,"column":3,"offset":84124},"end":{"line":3800,"column":59,"offset":84180},"indent":[]}}],"position":{"start":{"line":3800,"column":1,"offset":84122},"end":{"line":3800,"column":59,"offset":84180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":3802,"column":1,"offset":84182},"end":{"line":3802,"column":5,"offset":84186},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"unknown","position":{"start":{"line":3802,"column":6,"offset":84187},"end":{"line":3802,"column":13,"offset":84194},"indent":[]}}],"position":{"start":{"line":3802,"column":5,"offset":84186},"end":{"line":3802,"column":14,"offset":84195},"indent":[]}},{"type":"text","value":"var # Raises a NameError","position":{"start":{"line":3802,"column":14,"offset":84195},"end":{"line":3802,"column":38,"offset":84219},"indent":[]}}],"position":{"start":{"line":3802,"column":1,"offset":84182},"end":{"line":3802,"column":38,"offset":84219},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"if can be used as an expression","position":{"start":{"line":3804,"column":3,"offset":84223},"end":{"line":3804,"column":34,"offset":84254},"indent":[]}}],"position":{"start":{"line":3804,"column":1,"offset":84221},"end":{"line":3804,"column":34,"offset":84254},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Equivalent of C's '?:' ternary operator","position":{"start":{"line":3806,"column":3,"offset":84258},"end":{"line":3806,"column":42,"offset":84297},"indent":[]}}],"position":{"start":{"line":3806,"column":1,"offset":84256},"end":{"line":3806,"column":42,"offset":84297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"yahoo!\" if 3 > 2 else 2 # => \"yahoo!\"","position":{"start":{"line":3808,"column":1,"offset":84299},"end":{"line":3808,"column":39,"offset":84337},"indent":[]}}],"position":{"start":{"line":3808,"column":1,"offset":84299},"end":{"line":3808,"column":39,"offset":84337},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Lists store sequences","position":{"start":{"line":3810,"column":3,"offset":84341},"end":{"line":3810,"column":24,"offset":84362},"indent":[]}}],"position":{"start":{"line":3810,"column":1,"offset":84339},"end":{"line":3810,"column":24,"offset":84362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li = []","position":{"start":{"line":3812,"column":1,"offset":84364},"end":{"line":3812,"column":8,"offset":84371},"indent":[]}}],"position":{"start":{"line":3812,"column":1,"offset":84364},"end":{"line":3812,"column":8,"offset":84371},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can start with a prefilled list","position":{"start":{"line":3814,"column":3,"offset":84375},"end":{"line":3814,"column":38,"offset":84410},"indent":[]}}],"position":{"start":{"line":3814,"column":1,"offset":84373},"end":{"line":3814,"column":38,"offset":84410},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"other_li = ","position":{"start":{"line":3816,"column":1,"offset":84412},"end":{"line":3816,"column":12,"offset":84423},"indent":[]}},{"type":"linkReference","identifier":"4, 5, 6","label":"4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"4, 5, 6","position":{"start":{"line":3816,"column":13,"offset":84424},"end":{"line":3816,"column":20,"offset":84431},"indent":[]}}],"position":{"start":{"line":3816,"column":12,"offset":84423},"end":{"line":3816,"column":21,"offset":84432},"indent":[]}}],"position":{"start":{"line":3816,"column":1,"offset":84412},"end":{"line":3816,"column":21,"offset":84432},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Add stuff to the end of a list with append","position":{"start":{"line":3818,"column":3,"offset":84436},"end":{"line":3818,"column":45,"offset":84478},"indent":[]}}],"position":{"start":{"line":3818,"column":1,"offset":84434},"end":{"line":3818,"column":45,"offset":84478},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.append(1) # li is now ","position":{"start":{"line":3820,"column":1,"offset":84480},"end":{"line":3820,"column":26,"offset":84505},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":3820,"column":27,"offset":84506},"end":{"line":3820,"column":28,"offset":84507},"indent":[]}}],"position":{"start":{"line":3820,"column":26,"offset":84505},"end":{"line":3820,"column":29,"offset":84508},"indent":[]}},{"type":"text","value":"\nli.append(2) # li is now ","position":{"start":{"line":3820,"column":29,"offset":84508},"end":{"line":3821,"column":26,"offset":84534},"indent":[1]}},{"type":"linkReference","identifier":"1, 2","label":"1, 2","referenceType":"shortcut","children":[{"type":"text","value":"1, 2","position":{"start":{"line":3821,"column":27,"offset":84535},"end":{"line":3821,"column":31,"offset":84539},"indent":[]}}],"position":{"start":{"line":3821,"column":26,"offset":84534},"end":{"line":3821,"column":32,"offset":84540},"indent":[]}},{"type":"text","value":"\nli.append(4) # li is now ","position":{"start":{"line":3821,"column":32,"offset":84540},"end":{"line":3822,"column":26,"offset":84566},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3822,"column":27,"offset":84567},"end":{"line":3822,"column":34,"offset":84574},"indent":[]}}],"position":{"start":{"line":3822,"column":26,"offset":84566},"end":{"line":3822,"column":35,"offset":84575},"indent":[]}},{"type":"text","value":"\nli.append(3) # li is now ","position":{"start":{"line":3822,"column":35,"offset":84575},"end":{"line":3823,"column":26,"offset":84601},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3823,"column":27,"offset":84602},"end":{"line":3823,"column":37,"offset":84612},"indent":[]}}],"position":{"start":{"line":3823,"column":26,"offset":84601},"end":{"line":3823,"column":38,"offset":84613},"indent":[]}}],"position":{"start":{"line":3820,"column":1,"offset":84480},"end":{"line":3823,"column":38,"offset":84613},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove from the end with pop","position":{"start":{"line":3825,"column":3,"offset":84617},"end":{"line":3825,"column":31,"offset":84645},"indent":[]}}],"position":{"start":{"line":3825,"column":1,"offset":84615},"end":{"line":3825,"column":31,"offset":84645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.pop() # => 3 and li is now ","position":{"start":{"line":3827,"column":1,"offset":84647},"end":{"line":3827,"column":31,"offset":84677},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3827,"column":32,"offset":84678},"end":{"line":3827,"column":39,"offset":84685},"indent":[]}}],"position":{"start":{"line":3827,"column":31,"offset":84677},"end":{"line":3827,"column":40,"offset":84686},"indent":[]}}],"position":{"start":{"line":3827,"column":1,"offset":84647},"end":{"line":3827,"column":40,"offset":84686},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's put it back","position":{"start":{"line":3829,"column":3,"offset":84690},"end":{"line":3829,"column":20,"offset":84707},"indent":[]}}],"position":{"start":{"line":3829,"column":1,"offset":84688},"end":{"line":3829,"column":20,"offset":84707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.append(3) # li is now ","position":{"start":{"line":3831,"column":1,"offset":84709},"end":{"line":3831,"column":26,"offset":84734},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3831,"column":27,"offset":84735},"end":{"line":3831,"column":37,"offset":84745},"indent":[]}}],"position":{"start":{"line":3831,"column":26,"offset":84734},"end":{"line":3831,"column":38,"offset":84746},"indent":[]}},{"type":"text","value":" again.","position":{"start":{"line":3831,"column":38,"offset":84746},"end":{"line":3831,"column":45,"offset":84753},"indent":[]}}],"position":{"start":{"line":3831,"column":1,"offset":84709},"end":{"line":3831,"column":45,"offset":84753},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Access a list like you would any array","position":{"start":{"line":3833,"column":3,"offset":84757},"end":{"line":3833,"column":41,"offset":84795},"indent":[]}}],"position":{"start":{"line":3833,"column":1,"offset":84755},"end":{"line":3833,"column":41,"offset":84795},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3835,"column":1,"offset":84797},"end":{"line":3835,"column":3,"offset":84799},"indent":[]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3835,"column":4,"offset":84800},"end":{"line":3835,"column":5,"offset":84801},"indent":[]}}],"position":{"start":{"line":3835,"column":3,"offset":84799},"end":{"line":3835,"column":6,"offset":84802},"indent":[]}},{"type":"text","value":" # => 1","position":{"start":{"line":3835,"column":6,"offset":84802},"end":{"line":3835,"column":13,"offset":84809},"indent":[]}}],"position":{"start":{"line":3835,"column":1,"offset":84797},"end":{"line":3835,"column":13,"offset":84809},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Look at the last element","position":{"start":{"line":3837,"column":3,"offset":84813},"end":{"line":3837,"column":27,"offset":84837},"indent":[]}}],"position":{"start":{"line":3837,"column":1,"offset":84811},"end":{"line":3837,"column":27,"offset":84837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3839,"column":1,"offset":84839},"end":{"line":3839,"column":3,"offset":84841},"indent":[]}},{"type":"linkReference","identifier":"-1","label":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":3839,"column":4,"offset":84842},"end":{"line":3839,"column":6,"offset":84844},"indent":[]}}],"position":{"start":{"line":3839,"column":3,"offset":84841},"end":{"line":3839,"column":7,"offset":84845},"indent":[]}},{"type":"text","value":" # => 3","position":{"start":{"line":3839,"column":7,"offset":84845},"end":{"line":3839,"column":14,"offset":84852},"indent":[]}}],"position":{"start":{"line":3839,"column":1,"offset":84839},"end":{"line":3839,"column":14,"offset":84852},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Looking out of bounds is an IndexError","position":{"start":{"line":3841,"column":3,"offset":84856},"end":{"line":3841,"column":41,"offset":84894},"indent":[]}}],"position":{"start":{"line":3841,"column":1,"offset":84854},"end":{"line":3841,"column":41,"offset":84894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3843,"column":1,"offset":84896},"end":{"line":3843,"column":3,"offset":84898},"indent":[]}},{"type":"linkReference","identifier":"4","label":"4","referenceType":"shortcut","children":[{"type":"text","value":"4","position":{"start":{"line":3843,"column":4,"offset":84899},"end":{"line":3843,"column":5,"offset":84900},"indent":[]}}],"position":{"start":{"line":3843,"column":3,"offset":84898},"end":{"line":3843,"column":6,"offset":84901},"indent":[]}},{"type":"text","value":" # Raises an IndexError","position":{"start":{"line":3843,"column":6,"offset":84901},"end":{"line":3843,"column":29,"offset":84924},"indent":[]}}],"position":{"start":{"line":3843,"column":1,"offset":84896},"end":{"line":3843,"column":29,"offset":84924},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can look at ranges with slice syntax.","position":{"start":{"line":3845,"column":3,"offset":84928},"end":{"line":3845,"column":44,"offset":84969},"indent":[]}}],"position":{"start":{"line":3845,"column":1,"offset":84926},"end":{"line":3845,"column":44,"offset":84969},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The start index is included, the end index is not","position":{"start":{"line":3847,"column":3,"offset":84973},"end":{"line":3847,"column":52,"offset":85022},"indent":[]}}],"position":{"start":{"line":3847,"column":1,"offset":84971},"end":{"line":3847,"column":52,"offset":85022},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(It's a closed/open range for you mathy types.)","position":{"start":{"line":3849,"column":3,"offset":85026},"end":{"line":3849,"column":50,"offset":85073},"indent":[]}}],"position":{"start":{"line":3849,"column":1,"offset":85024},"end":{"line":3849,"column":50,"offset":85073},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3851,"column":1,"offset":85075},"end":{"line":3851,"column":3,"offset":85077},"indent":[]}},{"type":"linkReference","identifier":"1:3","label":"1:3","referenceType":"shortcut","children":[{"type":"text","value":"1:3","position":{"start":{"line":3851,"column":4,"offset":85078},"end":{"line":3851,"column":7,"offset":85081},"indent":[]}}],"position":{"start":{"line":3851,"column":3,"offset":85077},"end":{"line":3851,"column":8,"offset":85082},"indent":[]}},{"type":"text","value":" # Return list from index 1 to 3 => ","position":{"start":{"line":3851,"column":8,"offset":85082},"end":{"line":3851,"column":44,"offset":85118},"indent":[]}},{"type":"linkReference","identifier":"2, 4","label":"2, 4","referenceType":"shortcut","children":[{"type":"text","value":"2, 4","position":{"start":{"line":3851,"column":45,"offset":85119},"end":{"line":3851,"column":49,"offset":85123},"indent":[]}}],"position":{"start":{"line":3851,"column":44,"offset":85118},"end":{"line":3851,"column":50,"offset":85124},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3851,"column":50,"offset":85124},"end":{"line":3852,"column":3,"offset":85127},"indent":[1]}},{"type":"linkReference","identifier":"2:","label":"2:","referenceType":"shortcut","children":[{"type":"text","value":"2:","position":{"start":{"line":3852,"column":4,"offset":85128},"end":{"line":3852,"column":6,"offset":85130},"indent":[]}}],"position":{"start":{"line":3852,"column":3,"offset":85127},"end":{"line":3852,"column":7,"offset":85131},"indent":[]}},{"type":"text","value":" # Return list starting from index 2 => ","position":{"start":{"line":3852,"column":7,"offset":85131},"end":{"line":3852,"column":47,"offset":85171},"indent":[]}},{"type":"linkReference","identifier":"4, 3","label":"4, 3","referenceType":"shortcut","children":[{"type":"text","value":"4, 3","position":{"start":{"line":3852,"column":48,"offset":85172},"end":{"line":3852,"column":52,"offset":85176},"indent":[]}}],"position":{"start":{"line":3852,"column":47,"offset":85171},"end":{"line":3852,"column":53,"offset":85177},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3852,"column":53,"offset":85177},"end":{"line":3853,"column":3,"offset":85180},"indent":[1]}},{"type":"linkReference","identifier":":3","label":":3","referenceType":"shortcut","children":[{"type":"text","value":":3","position":{"start":{"line":3853,"column":4,"offset":85181},"end":{"line":3853,"column":6,"offset":85183},"indent":[]}}],"position":{"start":{"line":3853,"column":3,"offset":85180},"end":{"line":3853,"column":7,"offset":85184},"indent":[]}},{"type":"text","value":" # Return list from beginning until index 3 => ","position":{"start":{"line":3853,"column":7,"offset":85184},"end":{"line":3853,"column":54,"offset":85231},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3853,"column":55,"offset":85232},"end":{"line":3853,"column":62,"offset":85239},"indent":[]}}],"position":{"start":{"line":3853,"column":54,"offset":85231},"end":{"line":3853,"column":63,"offset":85240},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3853,"column":63,"offset":85240},"end":{"line":3854,"column":3,"offset":85243},"indent":[1]}},{"type":"linkReference","identifier":"::2","label":"::2","referenceType":"shortcut","children":[{"type":"text","value":"::2","position":{"start":{"line":3854,"column":4,"offset":85244},"end":{"line":3854,"column":7,"offset":85247},"indent":[]}}],"position":{"start":{"line":3854,"column":3,"offset":85243},"end":{"line":3854,"column":8,"offset":85248},"indent":[]}},{"type":"text","value":" # Return list selecting every second entry => ","position":{"start":{"line":3854,"column":8,"offset":85248},"end":{"line":3854,"column":55,"offset":85295},"indent":[]}},{"type":"linkReference","identifier":"1, 4","label":"1, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 4","position":{"start":{"line":3854,"column":56,"offset":85296},"end":{"line":3854,"column":60,"offset":85300},"indent":[]}}],"position":{"start":{"line":3854,"column":55,"offset":85295},"end":{"line":3854,"column":61,"offset":85301},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3854,"column":61,"offset":85301},"end":{"line":3855,"column":3,"offset":85304},"indent":[1]}},{"type":"linkReference","identifier":"::-1","label":"::-1","referenceType":"shortcut","children":[{"type":"text","value":"::-1","position":{"start":{"line":3855,"column":4,"offset":85305},"end":{"line":3855,"column":8,"offset":85309},"indent":[]}}],"position":{"start":{"line":3855,"column":3,"offset":85304},"end":{"line":3855,"column":9,"offset":85310},"indent":[]}},{"type":"text","value":" # Return list in reverse order => ","position":{"start":{"line":3855,"column":9,"offset":85310},"end":{"line":3855,"column":44,"offset":85345},"indent":[]}},{"type":"linkReference","identifier":"3, 4, 2, 1","label":"3, 4, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 2, 1","position":{"start":{"line":3855,"column":45,"offset":85346},"end":{"line":3855,"column":55,"offset":85356},"indent":[]}}],"position":{"start":{"line":3855,"column":44,"offset":85345},"end":{"line":3855,"column":56,"offset":85357},"indent":[]}}],"position":{"start":{"line":3851,"column":1,"offset":85075},"end":{"line":3855,"column":56,"offset":85357},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use any combination of these to make advanced slices","position":{"start":{"line":3857,"column":3,"offset":85361},"end":{"line":3857,"column":55,"offset":85413},"indent":[]}}],"position":{"start":{"line":3857,"column":1,"offset":85359},"end":{"line":3857,"column":55,"offset":85413},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"li","position":{"start":{"line":3859,"column":3,"offset":85417},"end":{"line":3859,"column":5,"offset":85419},"indent":[]}},{"type":"linkReference","identifier":"start:end:step","label":"start:end:step","referenceType":"shortcut","children":[{"type":"text","value":"start:end:step","position":{"start":{"line":3859,"column":6,"offset":85420},"end":{"line":3859,"column":20,"offset":85434},"indent":[]}}],"position":{"start":{"line":3859,"column":5,"offset":85419},"end":{"line":3859,"column":21,"offset":85435},"indent":[]}}],"position":{"start":{"line":3859,"column":1,"offset":85415},"end":{"line":3859,"column":21,"offset":85435},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Make a one layer deep copy using slices","position":{"start":{"line":3861,"column":3,"offset":85439},"end":{"line":3861,"column":42,"offset":85478},"indent":[]}}],"position":{"start":{"line":3861,"column":1,"offset":85437},"end":{"line":3861,"column":42,"offset":85478},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li2 = li","position":{"start":{"line":3863,"column":1,"offset":85480},"end":{"line":3863,"column":9,"offset":85488},"indent":[]}},{"type":"linkReference","identifier":":","label":":","referenceType":"shortcut","children":[{"type":"text","value":":","position":{"start":{"line":3863,"column":10,"offset":85489},"end":{"line":3863,"column":11,"offset":85490},"indent":[]}}],"position":{"start":{"line":3863,"column":9,"offset":85488},"end":{"line":3863,"column":12,"offset":85491},"indent":[]}},{"type":"text","value":" # => li2 = ","position":{"start":{"line":3863,"column":12,"offset":85491},"end":{"line":3863,"column":24,"offset":85503},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3863,"column":25,"offset":85504},"end":{"line":3863,"column":35,"offset":85514},"indent":[]}}],"position":{"start":{"line":3863,"column":24,"offset":85503},"end":{"line":3863,"column":36,"offset":85515},"indent":[]}},{"type":"text","value":" but (li2 is li) will result in false.","position":{"start":{"line":3863,"column":36,"offset":85515},"end":{"line":3863,"column":74,"offset":85553},"indent":[]}}],"position":{"start":{"line":3863,"column":1,"offset":85480},"end":{"line":3863,"column":74,"offset":85553},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove arbitrary elements from a list with \"del\"","position":{"start":{"line":3865,"column":3,"offset":85557},"end":{"line":3865,"column":51,"offset":85605},"indent":[]}}],"position":{"start":{"line":3865,"column":1,"offset":85555},"end":{"line":3865,"column":51,"offset":85605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"del li","position":{"start":{"line":3867,"column":1,"offset":85607},"end":{"line":3867,"column":7,"offset":85613},"indent":[]}},{"type":"linkReference","identifier":"2","label":"2","referenceType":"shortcut","children":[{"type":"text","value":"2","position":{"start":{"line":3867,"column":8,"offset":85614},"end":{"line":3867,"column":9,"offset":85615},"indent":[]}}],"position":{"start":{"line":3867,"column":7,"offset":85613},"end":{"line":3867,"column":10,"offset":85616},"indent":[]}},{"type":"text","value":" # li is now ","position":{"start":{"line":3867,"column":10,"offset":85616},"end":{"line":3867,"column":23,"offset":85629},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3867,"column":24,"offset":85630},"end":{"line":3867,"column":31,"offset":85637},"indent":[]}}],"position":{"start":{"line":3867,"column":23,"offset":85629},"end":{"line":3867,"column":32,"offset":85638},"indent":[]}}],"position":{"start":{"line":3867,"column":1,"offset":85607},"end":{"line":3867,"column":32,"offset":85638},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove first occurrence of a value","position":{"start":{"line":3869,"column":3,"offset":85642},"end":{"line":3869,"column":37,"offset":85676},"indent":[]}}],"position":{"start":{"line":3869,"column":1,"offset":85640},"end":{"line":3869,"column":37,"offset":85676},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.remove(2) # li is now ","position":{"start":{"line":3871,"column":1,"offset":85678},"end":{"line":3871,"column":26,"offset":85703},"indent":[]}},{"type":"linkReference","identifier":"1, 3","label":"1, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 3","position":{"start":{"line":3871,"column":27,"offset":85704},"end":{"line":3871,"column":31,"offset":85708},"indent":[]}}],"position":{"start":{"line":3871,"column":26,"offset":85703},"end":{"line":3871,"column":32,"offset":85709},"indent":[]}},{"type":"text","value":"\nli.remove(2) # Raises a ValueError as 2 is not in the list","position":{"start":{"line":3871,"column":32,"offset":85709},"end":{"line":3872,"column":59,"offset":85768},"indent":[1]}}],"position":{"start":{"line":3871,"column":1,"offset":85678},"end":{"line":3872,"column":59,"offset":85768},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Insert an element at a specific index","position":{"start":{"line":3874,"column":3,"offset":85772},"end":{"line":3874,"column":40,"offset":85809},"indent":[]}}],"position":{"start":{"line":3874,"column":1,"offset":85770},"end":{"line":3874,"column":40,"offset":85809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.insert(1, 2) # li is now ","position":{"start":{"line":3876,"column":1,"offset":85811},"end":{"line":3876,"column":29,"offset":85839},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3876,"column":30,"offset":85840},"end":{"line":3876,"column":37,"offset":85847},"indent":[]}}],"position":{"start":{"line":3876,"column":29,"offset":85839},"end":{"line":3876,"column":38,"offset":85848},"indent":[]}},{"type":"text","value":" again","position":{"start":{"line":3876,"column":38,"offset":85848},"end":{"line":3876,"column":44,"offset":85854},"indent":[]}}],"position":{"start":{"line":3876,"column":1,"offset":85811},"end":{"line":3876,"column":44,"offset":85854},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get the index of the first item found matching the argument","position":{"start":{"line":3878,"column":3,"offset":85858},"end":{"line":3878,"column":62,"offset":85917},"indent":[]}}],"position":{"start":{"line":3878,"column":1,"offset":85856},"end":{"line":3878,"column":62,"offset":85917},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.index(2) # => 1\nli.index(4) # Raises a ValueError as 4 is not in the list","position":{"start":{"line":3880,"column":1,"offset":85919},"end":{"line":3881,"column":58,"offset":85995},"indent":[1]}}],"position":{"start":{"line":3880,"column":1,"offset":85919},"end":{"line":3881,"column":58,"offset":85995},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can add lists","position":{"start":{"line":3883,"column":3,"offset":85999},"end":{"line":3883,"column":20,"offset":86016},"indent":[]}}],"position":{"start":{"line":3883,"column":1,"offset":85997},"end":{"line":3883,"column":20,"offset":86016},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note: values for li and for other_li are not modified.","position":{"start":{"line":3885,"column":3,"offset":86020},"end":{"line":3885,"column":57,"offset":86074},"indent":[]}}],"position":{"start":{"line":3885,"column":1,"offset":86018},"end":{"line":3885,"column":57,"offset":86074},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li + other_li # => ","position":{"start":{"line":3887,"column":1,"offset":86076},"end":{"line":3887,"column":20,"offset":86095},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4, 5, 6","label":"1, 2, 3, 4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4, 5, 6","position":{"start":{"line":3887,"column":21,"offset":86096},"end":{"line":3887,"column":37,"offset":86112},"indent":[]}}],"position":{"start":{"line":3887,"column":20,"offset":86095},"end":{"line":3887,"column":38,"offset":86113},"indent":[]}}],"position":{"start":{"line":3887,"column":1,"offset":86076},"end":{"line":3887,"column":38,"offset":86113},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Concatenate lists with \"extend()\"","position":{"start":{"line":3889,"column":3,"offset":86117},"end":{"line":3889,"column":36,"offset":86150},"indent":[]}}],"position":{"start":{"line":3889,"column":1,"offset":86115},"end":{"line":3889,"column":36,"offset":86150},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.extend(other_li) # Now li is ","position":{"start":{"line":3891,"column":1,"offset":86152},"end":{"line":3891,"column":33,"offset":86184},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4, 5, 6","label":"1, 2, 3, 4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4, 5, 6","position":{"start":{"line":3891,"column":34,"offset":86185},"end":{"line":3891,"column":50,"offset":86201},"indent":[]}}],"position":{"start":{"line":3891,"column":33,"offset":86184},"end":{"line":3891,"column":51,"offset":86202},"indent":[]}}],"position":{"start":{"line":3891,"column":1,"offset":86152},"end":{"line":3891,"column":51,"offset":86202},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence in a list with \"in\"","position":{"start":{"line":3893,"column":3,"offset":86206},"end":{"line":3893,"column":42,"offset":86245},"indent":[]}}],"position":{"start":{"line":3893,"column":1,"offset":86204},"end":{"line":3893,"column":42,"offset":86245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 in li # => True","position":{"start":{"line":3895,"column":1,"offset":86247},"end":{"line":3895,"column":18,"offset":86264},"indent":[]}}],"position":{"start":{"line":3895,"column":1,"offset":86247},"end":{"line":3895,"column":18,"offset":86264},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Examine the length with \"len()\"","position":{"start":{"line":3897,"column":3,"offset":86268},"end":{"line":3897,"column":34,"offset":86299},"indent":[]}}],"position":{"start":{"line":3897,"column":1,"offset":86266},"end":{"line":3897,"column":34,"offset":86299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(li) # => 6","position":{"start":{"line":3899,"column":1,"offset":86301},"end":{"line":3899,"column":15,"offset":86315},"indent":[]}}],"position":{"start":{"line":3899,"column":1,"offset":86301},"end":{"line":3899,"column":15,"offset":86315},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tuples are like lists but are immutable.","position":{"start":{"line":3901,"column":3,"offset":86319},"end":{"line":3901,"column":43,"offset":86359},"indent":[]}}],"position":{"start":{"line":3901,"column":1,"offset":86317},"end":{"line":3901,"column":43,"offset":86359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tup = (1, 2, 3)\ntup","position":{"start":{"line":3903,"column":1,"offset":86361},"end":{"line":3904,"column":4,"offset":86380},"indent":[1]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3904,"column":5,"offset":86381},"end":{"line":3904,"column":6,"offset":86382},"indent":[]}}],"position":{"start":{"line":3904,"column":4,"offset":86380},"end":{"line":3904,"column":7,"offset":86383},"indent":[]}},{"type":"text","value":" # => 1\ntup","position":{"start":{"line":3904,"column":7,"offset":86383},"end":{"line":3905,"column":4,"offset":86394},"indent":[1]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3905,"column":5,"offset":86395},"end":{"line":3905,"column":6,"offset":86396},"indent":[]}}],"position":{"start":{"line":3905,"column":4,"offset":86394},"end":{"line":3905,"column":7,"offset":86397},"indent":[]}},{"type":"text","value":" = 3 # Raises a TypeError","position":{"start":{"line":3905,"column":7,"offset":86397},"end":{"line":3905,"column":32,"offset":86422},"indent":[]}}],"position":{"start":{"line":3903,"column":1,"offset":86361},"end":{"line":3905,"column":32,"offset":86422},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note that a tuple of length one has to have a comma after the last element but","position":{"start":{"line":3907,"column":3,"offset":86426},"end":{"line":3907,"column":81,"offset":86504},"indent":[]}}],"position":{"start":{"line":3907,"column":1,"offset":86424},"end":{"line":3907,"column":81,"offset":86504},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"tuples of other lengths, even zero, do not.","position":{"start":{"line":3909,"column":3,"offset":86508},"end":{"line":3909,"column":46,"offset":86551},"indent":[]}}],"position":{"start":{"line":3909,"column":1,"offset":86506},"end":{"line":3909,"column":46,"offset":86551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"type((1)) # => <class 'int'>\ntype((1,)) # => <class 'tuple'>\ntype(()) # => <class 'tuple'>","position":{"start":{"line":3911,"column":1,"offset":86553},"end":{"line":3913,"column":30,"offset":86643},"indent":[1,1]}}],"position":{"start":{"line":3911,"column":1,"offset":86553},"end":{"line":3913,"column":30,"offset":86643},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can do most of the list operations on tuples too","position":{"start":{"line":3915,"column":3,"offset":86647},"end":{"line":3915,"column":55,"offset":86699},"indent":[]}}],"position":{"start":{"line":3915,"column":1,"offset":86645},"end":{"line":3915,"column":55,"offset":86699},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(tup) # => 3\ntup + (4, 5, 6) # => (1, 2, 3, 4, 5, 6)\ntup","position":{"start":{"line":3917,"column":1,"offset":86701},"end":{"line":3919,"column":4,"offset":86760},"indent":[1,1]}},{"type":"linkReference","identifier":":2","label":":2","referenceType":"shortcut","children":[{"type":"text","value":":2","position":{"start":{"line":3919,"column":5,"offset":86761},"end":{"line":3919,"column":7,"offset":86763},"indent":[]}}],"position":{"start":{"line":3919,"column":4,"offset":86760},"end":{"line":3919,"column":8,"offset":86764},"indent":[]}},{"type":"text","value":" # => (1, 2)\n2 in tup # => True","position":{"start":{"line":3919,"column":8,"offset":86764},"end":{"line":3920,"column":19,"offset":86795},"indent":[1]}}],"position":{"start":{"line":3917,"column":1,"offset":86701},"end":{"line":3920,"column":19,"offset":86795},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can unpack tuples (or lists) into variables","position":{"start":{"line":3922,"column":3,"offset":86799},"end":{"line":3922,"column":50,"offset":86846},"indent":[]}}],"position":{"start":{"line":3922,"column":1,"offset":86797},"end":{"line":3922,"column":50,"offset":86846},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a, b, c = (1, 2, 3) # a is now 1, b is now 2 and c is now 3","position":{"start":{"line":3924,"column":1,"offset":86848},"end":{"line":3924,"column":60,"offset":86907},"indent":[]}}],"position":{"start":{"line":3924,"column":1,"offset":86848},"end":{"line":3924,"column":60,"offset":86907},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also do extended unpacking","position":{"start":{"line":3926,"column":3,"offset":86911},"end":{"line":3926,"column":37,"offset":86945},"indent":[]}}],"position":{"start":{"line":3926,"column":1,"offset":86909},"end":{"line":3926,"column":37,"offset":86945},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a, ","position":{"start":{"line":3928,"column":1,"offset":86947},"end":{"line":3928,"column":4,"offset":86950},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3928,"column":4,"offset":86950},"end":{"line":3928,"column":6,"offset":86952},"indent":[]}},{"type":"text","value":"b, c = (1, 2, 3, 4) # a is now 1, b is now ","position":{"start":{"line":3928,"column":6,"offset":86952},"end":{"line":3928,"column":49,"offset":86995},"indent":[]}},{"type":"linkReference","identifier":"2, 3","label":"2, 3","referenceType":"shortcut","children":[{"type":"text","value":"2, 3","position":{"start":{"line":3928,"column":50,"offset":86996},"end":{"line":3928,"column":54,"offset":87000},"indent":[]}}],"position":{"start":{"line":3928,"column":49,"offset":86995},"end":{"line":3928,"column":55,"offset":87001},"indent":[]}},{"type":"text","value":" and c is now 4","position":{"start":{"line":3928,"column":55,"offset":87001},"end":{"line":3928,"column":70,"offset":87016},"indent":[]}}],"position":{"start":{"line":3928,"column":1,"offset":86947},"end":{"line":3928,"column":70,"offset":87016},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tuples are created by default if you leave out the parentheses","position":{"start":{"line":3930,"column":3,"offset":87020},"end":{"line":3930,"column":65,"offset":87082},"indent":[]}}],"position":{"start":{"line":3930,"column":1,"offset":87018},"end":{"line":3930,"column":65,"offset":87082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"d, e, f = 4, 5, 6 # tuple 4, 5, 6 is unpacked into variables d, e and f","position":{"start":{"line":3932,"column":1,"offset":87084},"end":{"line":3932,"column":72,"offset":87155},"indent":[]}}],"position":{"start":{"line":3932,"column":1,"offset":87084},"end":{"line":3932,"column":72,"offset":87155},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"respectively such that d = 4, e = 5 and f = 6","position":{"start":{"line":3934,"column":3,"offset":87159},"end":{"line":3934,"column":48,"offset":87204},"indent":[]}}],"position":{"start":{"line":3934,"column":1,"offset":87157},"end":{"line":3934,"column":48,"offset":87204},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Now look how easy it is to swap two values","position":{"start":{"line":3936,"column":3,"offset":87208},"end":{"line":3936,"column":45,"offset":87250},"indent":[]}}],"position":{"start":{"line":3936,"column":1,"offset":87206},"end":{"line":3936,"column":45,"offset":87250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"e, d = d, e # d is now 5 and e is now 4","position":{"start":{"line":3938,"column":1,"offset":87252},"end":{"line":3938,"column":40,"offset":87291},"indent":[]}}],"position":{"start":{"line":3938,"column":1,"offset":87252},"end":{"line":3938,"column":40,"offset":87291},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Dictionaries store mappings from keys to values","position":{"start":{"line":3940,"column":3,"offset":87295},"end":{"line":3940,"column":50,"offset":87342},"indent":[]}}],"position":{"start":{"line":3940,"column":1,"offset":87293},"end":{"line":3940,"column":50,"offset":87342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"empty_dict = {}","position":{"start":{"line":3942,"column":1,"offset":87344},"end":{"line":3942,"column":16,"offset":87359},"indent":[]}}],"position":{"start":{"line":3942,"column":1,"offset":87344},"end":{"line":3942,"column":16,"offset":87359},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Here is a prefilled dictionary","position":{"start":{"line":3944,"column":3,"offset":87363},"end":{"line":3944,"column":33,"offset":87393},"indent":[]}}],"position":{"start":{"line":3944,"column":1,"offset":87361},"end":{"line":3944,"column":33,"offset":87393},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}","position":{"start":{"line":3946,"column":1,"offset":87395},"end":{"line":3946,"column":47,"offset":87441},"indent":[]}}],"position":{"start":{"line":3946,"column":1,"offset":87395},"end":{"line":3946,"column":47,"offset":87441},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note keys for dictionaries have to be immutable types. This is to ensure that","position":{"start":{"line":3948,"column":3,"offset":87445},"end":{"line":3948,"column":80,"offset":87522},"indent":[]}}],"position":{"start":{"line":3948,"column":1,"offset":87443},"end":{"line":3948,"column":80,"offset":87522},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"the key can be converted to a constant hash value for quick look-ups.","position":{"start":{"line":3950,"column":3,"offset":87526},"end":{"line":3950,"column":72,"offset":87595},"indent":[]}}],"position":{"start":{"line":3950,"column":1,"offset":87524},"end":{"line":3950,"column":72,"offset":87595},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Immutable types include ints, floats, strings, tuples.","position":{"start":{"line":3952,"column":3,"offset":87599},"end":{"line":3952,"column":57,"offset":87653},"indent":[]}}],"position":{"start":{"line":3952,"column":1,"offset":87597},"end":{"line":3952,"column":57,"offset":87653},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"invalid","position":{"start":{"line":3954,"column":1,"offset":87655},"end":{"line":3954,"column":8,"offset":87662},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict = {","position":{"start":{"line":3954,"column":9,"offset":87663},"end":{"line":3954,"column":17,"offset":87671},"indent":[]}},{"type":"linkReference","identifier":"1,2,3","label":"1,2,3","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3","position":{"start":{"line":3954,"column":18,"offset":87672},"end":{"line":3954,"column":23,"offset":87677},"indent":[]}}],"position":{"start":{"line":3954,"column":17,"offset":87671},"end":{"line":3954,"column":24,"offset":87678},"indent":[]}},{"type":"text","value":": \"123\"} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":3954,"column":24,"offset":87678},"end":{"line":3955,"column":6,"offset":87741},"indent":[1]}}],"position":{"start":{"line":3954,"column":8,"offset":87662},"end":{"line":3955,"column":7,"offset":87742},"indent":[1]}},{"type":"text","value":"dict = {(1,2,3):","position":{"start":{"line":3955,"column":7,"offset":87742},"end":{"line":3955,"column":23,"offset":87758},"indent":[]}},{"type":"linkReference","identifier":"1,2,3","label":"1,2,3","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3","position":{"start":{"line":3955,"column":24,"offset":87759},"end":{"line":3955,"column":29,"offset":87764},"indent":[]}}],"position":{"start":{"line":3955,"column":23,"offset":87758},"end":{"line":3955,"column":30,"offset":87765},"indent":[]}},{"type":"text","value":"} # Values can be of any type, however.","position":{"start":{"line":3955,"column":30,"offset":87765},"end":{"line":3955,"column":69,"offset":87804},"indent":[]}}],"position":{"start":{"line":3954,"column":1,"offset":87655},"end":{"line":3955,"column":69,"offset":87804},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Look up values with []","position":{"start":{"line":3957,"column":3,"offset":87808},"end":{"line":3957,"column":25,"offset":87830},"indent":[]}}],"position":{"start":{"line":3957,"column":1,"offset":87806},"end":{"line":3957,"column":25,"offset":87830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3959,"column":1,"offset":87832},"end":{"line":3959,"column":12,"offset":87843},"indent":[]}},{"type":"linkReference","identifier":"\"one\"","label":"\"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\"","position":{"start":{"line":3959,"column":13,"offset":87844},"end":{"line":3959,"column":18,"offset":87849},"indent":[]}}],"position":{"start":{"line":3959,"column":12,"offset":87843},"end":{"line":3959,"column":19,"offset":87850},"indent":[]}},{"type":"text","value":" # => 1","position":{"start":{"line":3959,"column":19,"offset":87850},"end":{"line":3959,"column":26,"offset":87857},"indent":[]}}],"position":{"start":{"line":3959,"column":1,"offset":87832},"end":{"line":3959,"column":26,"offset":87857},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get all keys as an iterable with \"keys()\". We need to wrap the call in list()","position":{"start":{"line":3961,"column":3,"offset":87861},"end":{"line":3961,"column":80,"offset":87938},"indent":[]}}],"position":{"start":{"line":3961,"column":1,"offset":87859},"end":{"line":3961,"column":80,"offset":87938},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"to turn it into a list. We'll talk about those later. Note - for Python","position":{"start":{"line":3963,"column":3,"offset":87942},"end":{"line":3963,"column":74,"offset":88013},"indent":[]}}],"position":{"start":{"line":3963,"column":1,"offset":87940},"end":{"line":3963,"column":74,"offset":88013},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"versions <3.7, dictionary key ordering is not guaranteed. Your results might","position":{"start":{"line":3965,"column":3,"offset":88017},"end":{"line":3965,"column":79,"offset":88093},"indent":[]}}],"position":{"start":{"line":3965,"column":1,"offset":88015},"end":{"line":3965,"column":79,"offset":88093},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"not match the example below exactly. However, as of Python 3.7, dictionary","position":{"start":{"line":3967,"column":3,"offset":88097},"end":{"line":3967,"column":77,"offset":88171},"indent":[]}}],"position":{"start":{"line":3967,"column":1,"offset":88095},"end":{"line":3967,"column":77,"offset":88171},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"items maintain the order at which they are inserted into the dictionary.","position":{"start":{"line":3969,"column":3,"offset":88175},"end":{"line":3969,"column":75,"offset":88247},"indent":[]}}],"position":{"start":{"line":3969,"column":1,"offset":88173},"end":{"line":3969,"column":75,"offset":88247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(filled","position":{"start":{"line":3971,"column":1,"offset":88249},"end":{"line":3971,"column":12,"offset":88260},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3971,"column":13,"offset":88261},"end":{"line":3971,"column":31,"offset":88279},"indent":[]}},{"type":"linkReference","identifier":"\"three\", \"two\", \"one\"","label":"\"three\", \"two\", \"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"three\", \"two\", \"one\"","position":{"start":{"line":3971,"column":32,"offset":88280},"end":{"line":3971,"column":53,"offset":88301},"indent":[]}}],"position":{"start":{"line":3971,"column":31,"offset":88279},"end":{"line":3971,"column":54,"offset":88302},"indent":[]}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3971,"column":54,"offset":88302},"end":{"line":3972,"column":12,"offset":88329},"indent":[1]}}],"position":{"start":{"line":3971,"column":12,"offset":88260},"end":{"line":3972,"column":13,"offset":88330},"indent":[1]}},{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3972,"column":13,"offset":88330},"end":{"line":3972,"column":31,"offset":88348},"indent":[]}},{"type":"linkReference","identifier":"\"one\", \"two\", \"three\"","label":"\"one\", \"two\", \"three\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\", \"two\", \"three\"","position":{"start":{"line":3972,"column":32,"offset":88349},"end":{"line":3972,"column":53,"offset":88370},"indent":[]}}],"position":{"start":{"line":3972,"column":31,"offset":88348},"end":{"line":3972,"column":54,"offset":88371},"indent":[]}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3972,"column":54,"offset":88371},"end":{"line":3972,"column":69,"offset":88386},"indent":[]}}],"position":{"start":{"line":3971,"column":1,"offset":88249},"end":{"line":3972,"column":69,"offset":88386},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get all values as an iterable with \"values()\". Once again we need to wrap it","position":{"start":{"line":3974,"column":3,"offset":88390},"end":{"line":3974,"column":79,"offset":88466},"indent":[]}}],"position":{"start":{"line":3974,"column":1,"offset":88388},"end":{"line":3974,"column":79,"offset":88466},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"in list() to get it out of the iterable. Note - Same as above regarding key","position":{"start":{"line":3976,"column":3,"offset":88470},"end":{"line":3976,"column":78,"offset":88545},"indent":[]}}],"position":{"start":{"line":3976,"column":1,"offset":88468},"end":{"line":3976,"column":78,"offset":88545},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"ordering.","position":{"start":{"line":3978,"column":3,"offset":88549},"end":{"line":3978,"column":12,"offset":88558},"indent":[]}}],"position":{"start":{"line":3978,"column":1,"offset":88547},"end":{"line":3978,"column":12,"offset":88558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(filled","position":{"start":{"line":3980,"column":1,"offset":88560},"end":{"line":3980,"column":12,"offset":88571},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3980,"column":13,"offset":88572},"end":{"line":3980,"column":33,"offset":88592},"indent":[]}},{"type":"linkReference","identifier":"3, 2, 1","label":"3, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"3, 2, 1","position":{"start":{"line":3980,"column":34,"offset":88593},"end":{"line":3980,"column":41,"offset":88600},"indent":[]}}],"position":{"start":{"line":3980,"column":33,"offset":88592},"end":{"line":3980,"column":42,"offset":88601},"indent":[]}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3980,"column":42,"offset":88601},"end":{"line":3981,"column":12,"offset":88628},"indent":[1]}}],"position":{"start":{"line":3980,"column":12,"offset":88571},"end":{"line":3981,"column":13,"offset":88629},"indent":[1]}},{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3981,"column":13,"offset":88629},"end":{"line":3981,"column":33,"offset":88649},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3981,"column":34,"offset":88650},"end":{"line":3981,"column":41,"offset":88657},"indent":[]}}],"position":{"start":{"line":3981,"column":33,"offset":88649},"end":{"line":3981,"column":42,"offset":88658},"indent":[]}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3981,"column":42,"offset":88658},"end":{"line":3981,"column":57,"offset":88673},"indent":[]}}],"position":{"start":{"line":3980,"column":1,"offset":88560},"end":{"line":3981,"column":57,"offset":88673},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence of keys in a dictionary with \"in\"","position":{"start":{"line":3983,"column":3,"offset":88677},"end":{"line":3983,"column":56,"offset":88730},"indent":[]}}],"position":{"start":{"line":3983,"column":1,"offset":88675},"end":{"line":3983,"column":56,"offset":88730},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"one\" in filled","position":{"start":{"line":3985,"column":1,"offset":88732},"end":{"line":3985,"column":16,"offset":88747},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict # => True\n1 in filled","position":{"start":{"line":3985,"column":17,"offset":88748},"end":{"line":3986,"column":12,"offset":88774},"indent":[1]}}],"position":{"start":{"line":3985,"column":16,"offset":88747},"end":{"line":3986,"column":13,"offset":88775},"indent":[1]}},{"type":"text","value":"dict # => False","position":{"start":{"line":3986,"column":13,"offset":88775},"end":{"line":3986,"column":28,"offset":88790},"indent":[]}}],"position":{"start":{"line":3985,"column":1,"offset":88732},"end":{"line":3986,"column":28,"offset":88790},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Looking up a non-existing key is a KeyError","position":{"start":{"line":3988,"column":3,"offset":88794},"end":{"line":3988,"column":46,"offset":88837},"indent":[]}}],"position":{"start":{"line":3988,"column":1,"offset":88792},"end":{"line":3988,"column":46,"offset":88837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3990,"column":1,"offset":88839},"end":{"line":3990,"column":12,"offset":88850},"indent":[]}},{"type":"linkReference","identifier":"\"four\"","label":"\"four\"","referenceType":"shortcut","children":[{"type":"text","value":"\"four\"","position":{"start":{"line":3990,"column":13,"offset":88851},"end":{"line":3990,"column":19,"offset":88857},"indent":[]}}],"position":{"start":{"line":3990,"column":12,"offset":88850},"end":{"line":3990,"column":20,"offset":88858},"indent":[]}},{"type":"text","value":" # KeyError","position":{"start":{"line":3990,"column":20,"offset":88858},"end":{"line":3990,"column":31,"offset":88869},"indent":[]}}],"position":{"start":{"line":3990,"column":1,"offset":88839},"end":{"line":3990,"column":31,"offset":88869},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"get()\" method to avoid the KeyError","position":{"start":{"line":3992,"column":3,"offset":88873},"end":{"line":3992,"column":43,"offset":88913},"indent":[]}}],"position":{"start":{"line":3992,"column":1,"offset":88871},"end":{"line":3992,"column":43,"offset":88913},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":3994,"column":1,"offset":88915},"end":{"line":3994,"column":7,"offset":88921},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.get(\"one\") # => 1\nfilled","position":{"start":{"line":3994,"column":8,"offset":88922},"end":{"line":3995,"column":7,"offset":88951},"indent":[1]}}],"position":{"start":{"line":3994,"column":7,"offset":88921},"end":{"line":3995,"column":8,"offset":88952},"indent":[1]}},{"type":"text","value":"dict.get(\"four\") # => None","position":{"start":{"line":3995,"column":8,"offset":88952},"end":{"line":3995,"column":34,"offset":88978},"indent":[]}}],"position":{"start":{"line":3994,"column":1,"offset":88915},"end":{"line":3995,"column":34,"offset":88978},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The get method supports a default argument when the value is missing","position":{"start":{"line":3997,"column":3,"offset":88982},"end":{"line":3997,"column":71,"offset":89050},"indent":[]}}],"position":{"start":{"line":3997,"column":1,"offset":88980},"end":{"line":3997,"column":71,"offset":89050},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":3999,"column":1,"offset":89052},"end":{"line":3999,"column":7,"offset":89058},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.get(\"one\", 4) # => 1\nfilled","position":{"start":{"line":3999,"column":8,"offset":89059},"end":{"line":4000,"column":7,"offset":89091},"indent":[1]}}],"position":{"start":{"line":3999,"column":7,"offset":89058},"end":{"line":4000,"column":8,"offset":89092},"indent":[1]}},{"type":"text","value":"dict.get(\"four\", 4) # => 4","position":{"start":{"line":4000,"column":8,"offset":89092},"end":{"line":4000,"column":34,"offset":89118},"indent":[]}}],"position":{"start":{"line":3999,"column":1,"offset":89052},"end":{"line":4000,"column":34,"offset":89118},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"\"setdefault()\" inserts into a dictionary only if the given key isn't present","position":{"start":{"line":4002,"column":3,"offset":89122},"end":{"line":4002,"column":79,"offset":89198},"indent":[]}}],"position":{"start":{"line":4002,"column":1,"offset":89120},"end":{"line":4002,"column":79,"offset":89198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4004,"column":1,"offset":89200},"end":{"line":4004,"column":7,"offset":89206},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.setdefault(\"five\", 5) # filled","position":{"start":{"line":4004,"column":8,"offset":89207},"end":{"line":4004,"column":43,"offset":89242},"indent":[]}}],"position":{"start":{"line":4004,"column":7,"offset":89206},"end":{"line":4004,"column":44,"offset":89243},"indent":[]}},{"type":"text","value":"dict","position":{"start":{"line":4004,"column":44,"offset":89243},"end":{"line":4004,"column":48,"offset":89247},"indent":[]}},{"type":"linkReference","identifier":"\"five\"","label":"\"five\"","referenceType":"shortcut","children":[{"type":"text","value":"\"five\"","position":{"start":{"line":4004,"column":49,"offset":89248},"end":{"line":4004,"column":55,"offset":89254},"indent":[]}}],"position":{"start":{"line":4004,"column":48,"offset":89247},"end":{"line":4004,"column":56,"offset":89255},"indent":[]}},{"type":"text","value":" is set to 5\nfilled","position":{"start":{"line":4004,"column":56,"offset":89255},"end":{"line":4005,"column":7,"offset":89274},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"dict.setdefault(\"five\", 6) # filled","position":{"start":{"line":4005,"column":8,"offset":89275},"end":{"line":4005,"column":43,"offset":89310},"indent":[]}}],"position":{"start":{"line":4005,"column":7,"offset":89274},"end":{"line":4005,"column":44,"offset":89311},"indent":[]}},{"type":"text","value":"dict","position":{"start":{"line":4005,"column":44,"offset":89311},"end":{"line":4005,"column":48,"offset":89315},"indent":[]}},{"type":"linkReference","identifier":"\"five\"","label":"\"five\"","referenceType":"shortcut","children":[{"type":"text","value":"\"five\"","position":{"start":{"line":4005,"column":49,"offset":89316},"end":{"line":4005,"column":55,"offset":89322},"indent":[]}}],"position":{"start":{"line":4005,"column":48,"offset":89315},"end":{"line":4005,"column":56,"offset":89323},"indent":[]}},{"type":"text","value":" is still 5","position":{"start":{"line":4005,"column":56,"offset":89323},"end":{"line":4005,"column":67,"offset":89334},"indent":[]}}],"position":{"start":{"line":4004,"column":1,"offset":89200},"end":{"line":4005,"column":67,"offset":89334},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Adding to a dictionary","position":{"start":{"line":4007,"column":3,"offset":89338},"end":{"line":4007,"column":25,"offset":89360},"indent":[]}}],"position":{"start":{"line":4007,"column":1,"offset":89336},"end":{"line":4007,"column":25,"offset":89360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4009,"column":1,"offset":89362},"end":{"line":4009,"column":7,"offset":89368},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.update({\"four\":4}) # => {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\nfilled","position":{"start":{"line":4009,"column":8,"offset":89369},"end":{"line":4010,"column":7,"offset":89448},"indent":[1]}}],"position":{"start":{"line":4009,"column":7,"offset":89368},"end":{"line":4010,"column":8,"offset":89449},"indent":[1]}},{"type":"text","value":"dict","position":{"start":{"line":4010,"column":8,"offset":89449},"end":{"line":4010,"column":12,"offset":89453},"indent":[]}},{"type":"linkReference","identifier":"\"four\"","label":"\"four\"","referenceType":"shortcut","children":[{"type":"text","value":"\"four\"","position":{"start":{"line":4010,"column":13,"offset":89454},"end":{"line":4010,"column":19,"offset":89460},"indent":[]}}],"position":{"start":{"line":4010,"column":12,"offset":89453},"end":{"line":4010,"column":20,"offset":89461},"indent":[]}},{"type":"text","value":" = 4 # another way to add to dict","position":{"start":{"line":4010,"column":20,"offset":89461},"end":{"line":4010,"column":53,"offset":89494},"indent":[]}}],"position":{"start":{"line":4009,"column":1,"offset":89362},"end":{"line":4010,"column":53,"offset":89494},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove keys from a dictionary with del","position":{"start":{"line":4012,"column":3,"offset":89498},"end":{"line":4012,"column":41,"offset":89536},"indent":[]}}],"position":{"start":{"line":4012,"column":1,"offset":89496},"end":{"line":4012,"column":41,"offset":89536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"del filled_dict","position":{"start":{"line":4014,"column":1,"offset":89538},"end":{"line":4014,"column":16,"offset":89553},"indent":[]}},{"type":"linkReference","identifier":"\"one\"","label":"\"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\"","position":{"start":{"line":4014,"column":17,"offset":89554},"end":{"line":4014,"column":22,"offset":89559},"indent":[]}}],"position":{"start":{"line":4014,"column":16,"offset":89553},"end":{"line":4014,"column":23,"offset":89560},"indent":[]}},{"type":"text","value":" # Removes the key \"one\" from filled dict","position":{"start":{"line":4014,"column":23,"offset":89560},"end":{"line":4014,"column":64,"offset":89601},"indent":[]}}],"position":{"start":{"line":4014,"column":1,"offset":89538},"end":{"line":4014,"column":64,"offset":89601},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"From Python 3.5 you can also use the additional unpacking options","position":{"start":{"line":4016,"column":3,"offset":89605},"end":{"line":4016,"column":68,"offset":89670},"indent":[]}}],"position":{"start":{"line":4016,"column":1,"offset":89603},"end":{"line":4016,"column":68,"offset":89670},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{'a': 1, **{'b': 2}} # => {'a': 1, 'b': 2}\n{'a': 1, **{'a': 2}} # => {'a': 2}","position":{"start":{"line":4018,"column":1,"offset":89672},"end":{"line":4019,"column":35,"offset":89749},"indent":[1]}}],"position":{"start":{"line":4018,"column":1,"offset":89672},"end":{"line":4019,"column":35,"offset":89749},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sets store ... well sets","position":{"start":{"line":4021,"column":3,"offset":89753},"end":{"line":4021,"column":27,"offset":89777},"indent":[]}}],"position":{"start":{"line":4021,"column":1,"offset":89751},"end":{"line":4021,"column":27,"offset":89777},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"empty_set = set()","position":{"start":{"line":4023,"column":1,"offset":89779},"end":{"line":4023,"column":18,"offset":89796},"indent":[]}}],"position":{"start":{"line":4023,"column":1,"offset":89779},"end":{"line":4023,"column":18,"offset":89796},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.","position":{"start":{"line":4025,"column":3,"offset":89800},"end":{"line":4025,"column":84,"offset":89881},"indent":[]}}],"position":{"start":{"line":4025,"column":1,"offset":89798},"end":{"line":4025,"column":84,"offset":89881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":4027,"column":1,"offset":89883},"end":{"line":4027,"column":5,"offset":89887},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {1, 1, 2, 2, 3, 4} # some","position":{"start":{"line":4027,"column":6,"offset":89888},"end":{"line":4027,"column":37,"offset":89919},"indent":[]}}],"position":{"start":{"line":4027,"column":5,"offset":89887},"end":{"line":4027,"column":38,"offset":89920},"indent":[]}},{"type":"text","value":"set is now {1, 2, 3, 4}","position":{"start":{"line":4027,"column":38,"offset":89920},"end":{"line":4027,"column":61,"offset":89943},"indent":[]}}],"position":{"start":{"line":4027,"column":1,"offset":89883},"end":{"line":4027,"column":61,"offset":89943},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Similar to keys of a dictionary, elements of a set have to be immutable.","position":{"start":{"line":4029,"column":3,"offset":89947},"end":{"line":4029,"column":75,"offset":90019},"indent":[]}}],"position":{"start":{"line":4029,"column":1,"offset":89945},"end":{"line":4029,"column":75,"offset":90019},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"invalid","position":{"start":{"line":4031,"column":1,"offset":90021},"end":{"line":4031,"column":8,"offset":90028},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {","position":{"start":{"line":4031,"column":9,"offset":90029},"end":{"line":4031,"column":16,"offset":90036},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":4031,"column":17,"offset":90037},"end":{"line":4031,"column":18,"offset":90038},"indent":[]}}],"position":{"start":{"line":4031,"column":16,"offset":90036},"end":{"line":4031,"column":19,"offset":90039},"indent":[]}},{"type":"text","value":", 1} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":4031,"column":19,"offset":90039},"end":{"line":4032,"column":6,"offset":90098},"indent":[1]}}],"position":{"start":{"line":4031,"column":8,"offset":90028},"end":{"line":4032,"column":7,"offset":90099},"indent":[1]}},{"type":"text","value":"set = {(1,), 1}","position":{"start":{"line":4032,"column":7,"offset":90099},"end":{"line":4032,"column":22,"offset":90114},"indent":[]}}],"position":{"start":{"line":4031,"column":1,"offset":90021},"end":{"line":4032,"column":22,"offset":90114},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Add one more item to the set","position":{"start":{"line":4034,"column":3,"offset":90118},"end":{"line":4034,"column":31,"offset":90146},"indent":[]}}],"position":{"start":{"line":4034,"column":1,"offset":90116},"end":{"line":4034,"column":31,"offset":90146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4036,"column":1,"offset":90148},"end":{"line":4036,"column":7,"offset":90154},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = some","position":{"start":{"line":4036,"column":8,"offset":90155},"end":{"line":4036,"column":18,"offset":90165},"indent":[]}}],"position":{"start":{"line":4036,"column":7,"offset":90154},"end":{"line":4036,"column":19,"offset":90166},"indent":[]}},{"type":"text","value":"set\nfilled","position":{"start":{"line":4036,"column":19,"offset":90166},"end":{"line":4037,"column":7,"offset":90176},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"set.add(5) # filled","position":{"start":{"line":4037,"column":8,"offset":90177},"end":{"line":4037,"column":27,"offset":90196},"indent":[]}}],"position":{"start":{"line":4037,"column":7,"offset":90176},"end":{"line":4037,"column":28,"offset":90197},"indent":[]}},{"type":"text","value":"set is now {1, 2, 3, 4, 5}","position":{"start":{"line":4037,"column":28,"offset":90197},"end":{"line":4037,"column":54,"offset":90223},"indent":[]}}],"position":{"start":{"line":4036,"column":1,"offset":90148},"end":{"line":4037,"column":54,"offset":90223},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sets do not have duplicate elements","position":{"start":{"line":4039,"column":3,"offset":90227},"end":{"line":4039,"column":38,"offset":90262},"indent":[]}}],"position":{"start":{"line":4039,"column":1,"offset":90225},"end":{"line":4039,"column":38,"offset":90262},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_set.add(5) # it remains as before {1, 2, 3, 4, 5}","position":{"start":{"line":4041,"column":1,"offset":90264},"end":{"line":4041,"column":57,"offset":90320},"indent":[]}}],"position":{"start":{"line":4041,"column":1,"offset":90264},"end":{"line":4041,"column":57,"offset":90320},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set intersection with &","position":{"start":{"line":4043,"column":3,"offset":90324},"end":{"line":4043,"column":29,"offset":90350},"indent":[]}}],"position":{"start":{"line":4043,"column":1,"offset":90322},"end":{"line":4043,"column":29,"offset":90350},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"other","position":{"start":{"line":4045,"column":1,"offset":90352},"end":{"line":4045,"column":6,"offset":90357},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {3, 4, 5, 6}\nfilled","position":{"start":{"line":4045,"column":7,"offset":90358},"end":{"line":4046,"column":7,"offset":90383},"indent":[1]}}],"position":{"start":{"line":4045,"column":6,"offset":90357},"end":{"line":4046,"column":8,"offset":90384},"indent":[1]}},{"type":"text","value":"set & other_set # => {3, 4, 5}","position":{"start":{"line":4046,"column":8,"offset":90384},"end":{"line":4046,"column":38,"offset":90414},"indent":[]}}],"position":{"start":{"line":4045,"column":1,"offset":90352},"end":{"line":4046,"column":38,"offset":90414},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set union with |","position":{"start":{"line":4048,"column":3,"offset":90418},"end":{"line":4048,"column":22,"offset":90437},"indent":[]}}],"position":{"start":{"line":4048,"column":1,"offset":90416},"end":{"line":4048,"column":22,"offset":90437},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4050,"column":1,"offset":90439},"end":{"line":4050,"column":7,"offset":90445},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set | other","position":{"start":{"line":4050,"column":8,"offset":90446},"end":{"line":4050,"column":19,"offset":90457},"indent":[]}}],"position":{"start":{"line":4050,"column":7,"offset":90445},"end":{"line":4050,"column":20,"offset":90458},"indent":[]}},{"type":"text","value":"set # => {1, 2, 3, 4, 5, 6}","position":{"start":{"line":4050,"column":20,"offset":90458},"end":{"line":4050,"column":47,"offset":90485},"indent":[]}}],"position":{"start":{"line":4050,"column":1,"offset":90439},"end":{"line":4050,"column":47,"offset":90485},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set difference with -","position":{"start":{"line":4052,"column":3,"offset":90489},"end":{"line":4052,"column":27,"offset":90513},"indent":[]}}],"position":{"start":{"line":4052,"column":1,"offset":90487},"end":{"line":4052,"column":27,"offset":90513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2, 3, 4} - {2, 3, 5} # => {1, 4}","position":{"start":{"line":4054,"column":1,"offset":90515},"end":{"line":4054,"column":37,"offset":90551},"indent":[]}}],"position":{"start":{"line":4054,"column":1,"offset":90515},"end":{"line":4054,"column":37,"offset":90551},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set symmetric difference with ^","position":{"start":{"line":4056,"column":3,"offset":90555},"end":{"line":4056,"column":37,"offset":90589},"indent":[]}}],"position":{"start":{"line":4056,"column":1,"offset":90553},"end":{"line":4056,"column":37,"offset":90589},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2, 3, 4} ^ {2, 3, 5} # => {1, 4, 5}","position":{"start":{"line":4058,"column":1,"offset":90591},"end":{"line":4058,"column":40,"offset":90630},"indent":[]}}],"position":{"start":{"line":4058,"column":1,"offset":90591},"end":{"line":4058,"column":40,"offset":90630},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check if set on the left is a superset of set on the right","position":{"start":{"line":4060,"column":3,"offset":90634},"end":{"line":4060,"column":61,"offset":90692},"indent":[]}}],"position":{"start":{"line":4060,"column":1,"offset":90632},"end":{"line":4060,"column":61,"offset":90692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2} >= {1, 2, 3} # => False","position":{"start":{"line":4062,"column":1,"offset":90694},"end":{"line":4062,"column":31,"offset":90724},"indent":[]}}],"position":{"start":{"line":4062,"column":1,"offset":90694},"end":{"line":4062,"column":31,"offset":90724},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check if set on the left is a subset of set on the right","position":{"start":{"line":4064,"column":3,"offset":90728},"end":{"line":4064,"column":59,"offset":90784},"indent":[]}}],"position":{"start":{"line":4064,"column":1,"offset":90726},"end":{"line":4064,"column":59,"offset":90784},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2} <= {1, 2, 3} # => True","position":{"start":{"line":4066,"column":1,"offset":90786},"end":{"line":4066,"column":30,"offset":90815},"indent":[]}}],"position":{"start":{"line":4066,"column":1,"offset":90786},"end":{"line":4066,"column":30,"offset":90815},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence in a set with in","position":{"start":{"line":4068,"column":3,"offset":90819},"end":{"line":4068,"column":39,"offset":90855},"indent":[]}}],"position":{"start":{"line":4068,"column":1,"offset":90817},"end":{"line":4068,"column":39,"offset":90855},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2 in filled","position":{"start":{"line":4070,"column":1,"offset":90857},"end":{"line":4070,"column":12,"offset":90868},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set # => True\n10 in filled","position":{"start":{"line":4070,"column":13,"offset":90869},"end":{"line":4071,"column":13,"offset":90895},"indent":[1]}}],"position":{"start":{"line":4070,"column":12,"offset":90868},"end":{"line":4071,"column":14,"offset":90896},"indent":[1]}},{"type":"text","value":"set # => False","position":{"start":{"line":4071,"column":14,"offset":90896},"end":{"line":4071,"column":28,"offset":90910},"indent":[]}}],"position":{"start":{"line":4070,"column":1,"offset":90857},"end":{"line":4071,"column":28,"offset":90910},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4073,"column":1,"offset":90912},"end":{"line":4073,"column":53,"offset":90964},"indent":[]}}],"position":{"start":{"line":4073,"column":1,"offset":90912},"end":{"line":4073,"column":53,"offset":90964},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3. Control Flow and Iterables","position":{"start":{"line":4075,"column":4,"offset":90969},"end":{"line":4075,"column":33,"offset":90998},"indent":[]}}],"position":{"start":{"line":4075,"column":1,"offset":90966},"end":{"line":4075,"column":33,"offset":90998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4077,"column":1,"offset":91000},"end":{"line":4077,"column":53,"offset":91052},"indent":[]}}],"position":{"start":{"line":4077,"column":1,"offset":91000},"end":{"line":4077,"column":53,"offset":91052},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's just make a variable","position":{"start":{"line":4079,"column":3,"offset":91056},"end":{"line":4079,"column":29,"offset":91082},"indent":[]}}],"position":{"start":{"line":4079,"column":1,"offset":91054},"end":{"line":4079,"column":29,"offset":91082},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some_var = 5","position":{"start":{"line":4081,"column":1,"offset":91084},"end":{"line":4081,"column":13,"offset":91096},"indent":[]}}],"position":{"start":{"line":4081,"column":1,"offset":91084},"end":{"line":4081,"column":13,"offset":91096},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Here is an if statement. Indentation is significant in Python!","position":{"start":{"line":4083,"column":3,"offset":91100},"end":{"line":4083,"column":65,"offset":91162},"indent":[]}}],"position":{"start":{"line":4083,"column":1,"offset":91098},"end":{"line":4083,"column":65,"offset":91162},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Convention is to use four spaces, not tabs.","position":{"start":{"line":4085,"column":3,"offset":91166},"end":{"line":4085,"column":46,"offset":91209},"indent":[]}}],"position":{"start":{"line":4085,"column":1,"offset":91164},"end":{"line":4085,"column":46,"offset":91209},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This prints \"some_var is smaller than 10\"","position":{"start":{"line":4087,"column":3,"offset":91213},"end":{"line":4087,"column":44,"offset":91254},"indent":[]}}],"position":{"start":{"line":4087,"column":1,"offset":91211},"end":{"line":4087,"column":44,"offset":91254},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"if some","position":{"start":{"line":4089,"column":1,"offset":91256},"end":{"line":4089,"column":8,"offset":91263},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"var > 10:\nprint(\"some","position":{"start":{"line":4089,"column":9,"offset":91264},"end":{"line":4090,"column":12,"offset":91285},"indent":[1]}}],"position":{"start":{"line":4089,"column":8,"offset":91263},"end":{"line":4090,"column":13,"offset":91286},"indent":[1]}},{"type":"text","value":"var is totally bigger than 10.\")\nelif some","position":{"start":{"line":4090,"column":13,"offset":91286},"end":{"line":4091,"column":10,"offset":91328},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"var < 10: # This elif clause is optional.\nprint(\"some","position":{"start":{"line":4091,"column":11,"offset":91329},"end":{"line":4092,"column":12,"offset":91382},"indent":[1]}}],"position":{"start":{"line":4091,"column":10,"offset":91328},"end":{"line":4092,"column":13,"offset":91383},"indent":[1]}},{"type":"text","value":"var is smaller than 10.\")\nelse: # This is optional too.\nprint(\"some_var is indeed 10.\")","position":{"start":{"line":4092,"column":13,"offset":91383},"end":{"line":4094,"column":32,"offset":91470},"indent":[1,1]}}],"position":{"start":{"line":4089,"column":1,"offset":91256},"end":{"line":4094,"column":32,"offset":91470},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nFor loops iterate over lists\nprints:\ndog is a mammal\ncat is a mammal\nmouse is a mammal\n\"\"\"\nfor animal in ","position":{"start":{"line":4096,"column":1,"offset":91472},"end":{"line":4103,"column":15,"offset":91581},"indent":[1,1,1,1,1,1,1]}},{"type":"linkReference","identifier":"\"dog\", \"cat\", \"mouse\"","label":"\"dog\", \"cat\", \"mouse\"","referenceType":"shortcut","children":[{"type":"text","value":"\"dog\", \"cat\", \"mouse\"","position":{"start":{"line":4103,"column":16,"offset":91582},"end":{"line":4103,"column":37,"offset":91603},"indent":[]}}],"position":{"start":{"line":4103,"column":15,"offset":91581},"end":{"line":4103,"column":38,"offset":91604},"indent":[]}},{"type":"text","value":": # You can use format() to interpolate formatted strings\nprint(\"{} is a mammal\".format(animal))","position":{"start":{"line":4103,"column":38,"offset":91604},"end":{"line":4104,"column":39,"offset":91700},"indent":[1]}}],"position":{"start":{"line":4096,"column":1,"offset":91472},"end":{"line":4104,"column":39,"offset":91700},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(number)\" returns an iterable of numbers\nfrom zero to the given number\nprints:\n0\n1\n2\n3\n\"\"\"\nfor i in range(4):\nprint(i)","position":{"start":{"line":4106,"column":1,"offset":91702},"end":{"line":4116,"column":9,"offset":91830},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4106,"column":1,"offset":91702},"end":{"line":4116,"column":9,"offset":91830},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper)\" returns an iterable of numbers\nfrom the lower number to the upper number\nprints:\n4\n5\n6\n7\n\"\"\"\nfor i in range(4, 8):\nprint(i)","position":{"start":{"line":4118,"column":1,"offset":91832},"end":{"line":4128,"column":9,"offset":91981},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4118,"column":1,"offset":91832},"end":{"line":4128,"column":9,"offset":91981},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper, step)\" returns an iterable of numbers\nfrom the lower number to the upper number, while incrementing\nby step. If step is not indicated, the default value is 1.\nprints:\n4\n6\n\"\"\"\nfor i in range(4, 8, 2):\nprint(i)","position":{"start":{"line":4130,"column":1,"offset":91983},"end":{"line":4139,"column":9,"offset":92216},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4130,"column":1,"offset":91983},"end":{"line":4139,"column":9,"offset":92216},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nTo loop over a list, and retrieve both the index and the value of each item in the list\nprints:\n0 dog\n1 cat\n2 mouse\n\"\"\"\nlist = ","position":{"start":{"line":4141,"column":1,"offset":92218},"end":{"line":4148,"column":8,"offset":92349},"indent":[1,1,1,1,1,1,1]}},{"type":"linkReference","identifier":"\"dog\", \"cat\", \"mouse\"","label":"\"dog\", \"cat\", \"mouse\"","referenceType":"shortcut","children":[{"type":"text","value":"\"dog\", \"cat\", \"mouse\"","position":{"start":{"line":4148,"column":9,"offset":92350},"end":{"line":4148,"column":30,"offset":92371},"indent":[]}}],"position":{"start":{"line":4148,"column":8,"offset":92349},"end":{"line":4148,"column":31,"offset":92372},"indent":[]}},{"type":"text","value":"\nfor i, value in enumerate(list):\nprint(i, value)","position":{"start":{"line":4148,"column":31,"offset":92372},"end":{"line":4150,"column":16,"offset":92421},"indent":[1,1]}}],"position":{"start":{"line":4141,"column":1,"offset":92218},"end":{"line":4150,"column":16,"offset":92421},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nWhile loops go until a condition is no longer met.\nprints:\n0\n1\n2\n3\n\"\"\"\nx = 0\nwhile x < 4:\nprint(x)\nx += 1 # Shorthand for x = x + 1","position":{"start":{"line":4152,"column":1,"offset":92423},"end":{"line":4163,"column":33,"offset":92558},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4152,"column":1,"offset":92423},"end":{"line":4163,"column":33,"offset":92558},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Handle exceptions with a try/except block","position":{"start":{"line":4165,"column":3,"offset":92562},"end":{"line":4165,"column":44,"offset":92603},"indent":[]}}],"position":{"start":{"line":4165,"column":1,"offset":92560},"end":{"line":4165,"column":44,"offset":92603},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"try: # Use \"raise\" to raise an error\nraise IndexError(\"This is an index error\")\nexcept IndexError as e:\npass # Pass is just a no-op. Usually you would do recovery here.\nexcept (TypeError, NameError):\npass # Multiple exceptions can be handled together, if required.\nelse: # Optional clause to the try/except block. Must follow all except blocks\nprint(\"All good!\") # Runs only if the code in try raises no exceptions\nfinally: # Execute under all circumstances\nprint(\"We can clean up resources here\")","position":{"start":{"line":4167,"column":1,"offset":92605},"end":{"line":4176,"column":40,"offset":93102},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4167,"column":1,"offset":92605},"end":{"line":4176,"column":40,"offset":93102},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Instead of try/finally to cleanup resources you can use a with statement","position":{"start":{"line":4178,"column":3,"offset":93106},"end":{"line":4178,"column":75,"offset":93178},"indent":[]}}],"position":{"start":{"line":4178,"column":1,"offset":93104},"end":{"line":4178,"column":75,"offset":93178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open(\"myfile.txt\") as f:\nfor line in f:\nprint(line)","position":{"start":{"line":4180,"column":1,"offset":93180},"end":{"line":4182,"column":12,"offset":93236},"indent":[1,1]}}],"position":{"start":{"line":4180,"column":1,"offset":93180},"end":{"line":4182,"column":12,"offset":93236},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Writing to a file","position":{"start":{"line":4184,"column":3,"offset":93240},"end":{"line":4184,"column":20,"offset":93257},"indent":[]}}],"position":{"start":{"line":4184,"column":1,"offset":93238},"end":{"line":4184,"column":20,"offset":93257},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"contents = {\"aa\": 12, \"bb\": 21}\nwith open(\"myfile1.txt\", \"w+\") as file:\nfile.write(str(contents)) # writes a string to a file","position":{"start":{"line":4186,"column":1,"offset":93259},"end":{"line":4188,"column":54,"offset":93384},"indent":[1,1]}}],"position":{"start":{"line":4186,"column":1,"offset":93259},"end":{"line":4188,"column":54,"offset":93384},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"with open(\"myfile2.txt\", \"w+\") as file:\nfile.write(json.dumps(contents)) # writes an object to a file","position":{"start":{"line":4190,"column":1,"offset":93386},"end":{"line":4191,"column":62,"offset":93487},"indent":[1]}}],"position":{"start":{"line":4190,"column":1,"offset":93386},"end":{"line":4191,"column":62,"offset":93487},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Reading from a file","position":{"start":{"line":4193,"column":3,"offset":93491},"end":{"line":4193,"column":22,"offset":93510},"indent":[]}}],"position":{"start":{"line":4193,"column":1,"offset":93489},"end":{"line":4193,"column":22,"offset":93510},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open('myfile1.txt', \"r+\") as file:\ncontents = file.read() # reads a string from a file\nprint(contents)","position":{"start":{"line":4195,"column":1,"offset":93512},"end":{"line":4197,"column":16,"offset":93619},"indent":[1,1]}}],"position":{"start":{"line":4195,"column":1,"offset":93512},"end":{"line":4197,"column":16,"offset":93619},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4199,"column":3,"offset":93623},"end":{"line":4199,"column":30,"offset":93650},"indent":[]}}],"position":{"start":{"line":4199,"column":1,"offset":93621},"end":{"line":4199,"column":30,"offset":93650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open('myfile2.txt', \"r+\") as file:\ncontents = json.load(file) # reads a json object from a file\nprint(contents)","position":{"start":{"line":4201,"column":1,"offset":93652},"end":{"line":4203,"column":16,"offset":93768},"indent":[1,1]}}],"position":{"start":{"line":4201,"column":1,"offset":93652},"end":{"line":4203,"column":16,"offset":93768},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4205,"column":3,"offset":93772},"end":{"line":4205,"column":30,"offset":93799},"indent":[]}}],"position":{"start":{"line":4205,"column":1,"offset":93770},"end":{"line":4205,"column":30,"offset":93799},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python offers a fundamental abstraction called the Iterable.","position":{"start":{"line":4207,"column":3,"offset":93803},"end":{"line":4207,"column":63,"offset":93863},"indent":[]}}],"position":{"start":{"line":4207,"column":1,"offset":93801},"end":{"line":4207,"column":63,"offset":93863},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"An iterable is an object that can be treated as a sequence.","position":{"start":{"line":4209,"column":3,"offset":93867},"end":{"line":4209,"column":62,"offset":93926},"indent":[]}}],"position":{"start":{"line":4209,"column":1,"offset":93865},"end":{"line":4209,"column":62,"offset":93926},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The object returned by the range function, is an iterable.","position":{"start":{"line":4211,"column":3,"offset":93930},"end":{"line":4211,"column":61,"offset":93988},"indent":[]}}],"position":{"start":{"line":4211,"column":1,"offset":93928},"end":{"line":4211,"column":61,"offset":93988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4213,"column":1,"offset":93990},"end":{"line":4213,"column":7,"offset":93996},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict = {\"one\": 1, \"two\": 2, \"three\": 3}\nour","position":{"start":{"line":4213,"column":8,"offset":93997},"end":{"line":4214,"column":4,"offset":94040},"indent":[1]}}],"position":{"start":{"line":4213,"column":7,"offset":93996},"end":{"line":4214,"column":5,"offset":94041},"indent":[1]}},{"type":"text","value":"iterable = filled","position":{"start":{"line":4214,"column":5,"offset":94041},"end":{"line":4214,"column":22,"offset":94058},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.keys()\nprint(our","position":{"start":{"line":4214,"column":23,"offset":94059},"end":{"line":4215,"column":10,"offset":94080},"indent":[1]}}],"position":{"start":{"line":4214,"column":22,"offset":94058},"end":{"line":4215,"column":11,"offset":94081},"indent":[1]}},{"type":"text","value":"iterable) # => dict_keys(","position":{"start":{"line":4215,"column":11,"offset":94081},"end":{"line":4215,"column":36,"offset":94106},"indent":[]}},{"type":"linkReference","identifier":"'one', 'two', 'three'","label":"'one', 'two', 'three'","referenceType":"shortcut","children":[{"type":"text","value":"'one', 'two', 'three'","position":{"start":{"line":4215,"column":37,"offset":94107},"end":{"line":4215,"column":58,"offset":94128},"indent":[]}}],"position":{"start":{"line":4215,"column":36,"offset":94106},"end":{"line":4215,"column":59,"offset":94129},"indent":[]}},{"type":"text","value":"). This is an object that implements our Iterable interface.","position":{"start":{"line":4215,"column":59,"offset":94129},"end":{"line":4215,"column":119,"offset":94189},"indent":[]}}],"position":{"start":{"line":4213,"column":1,"offset":93990},"end":{"line":4215,"column":119,"offset":94189},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can loop over it.","position":{"start":{"line":4217,"column":3,"offset":94193},"end":{"line":4217,"column":23,"offset":94213},"indent":[]}}],"position":{"start":{"line":4217,"column":1,"offset":94191},"end":{"line":4217,"column":23,"offset":94213},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"for i in our_iterable:\nprint(i) # Prints one, two, three","position":{"start":{"line":4219,"column":1,"offset":94215},"end":{"line":4220,"column":34,"offset":94271},"indent":[1]}}],"position":{"start":{"line":4219,"column":1,"offset":94215},"end":{"line":4220,"column":34,"offset":94271},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"However we cannot address elements by index.","position":{"start":{"line":4222,"column":3,"offset":94275},"end":{"line":4222,"column":47,"offset":94319},"indent":[]}}],"position":{"start":{"line":4222,"column":1,"offset":94273},"end":{"line":4222,"column":47,"offset":94319},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our_iterable","position":{"start":{"line":4224,"column":1,"offset":94321},"end":{"line":4224,"column":13,"offset":94333},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":4224,"column":14,"offset":94334},"end":{"line":4224,"column":15,"offset":94335},"indent":[]}}],"position":{"start":{"line":4224,"column":13,"offset":94333},"end":{"line":4224,"column":16,"offset":94336},"indent":[]}},{"type":"text","value":" # Raises a TypeError","position":{"start":{"line":4224,"column":16,"offset":94336},"end":{"line":4224,"column":37,"offset":94357},"indent":[]}}],"position":{"start":{"line":4224,"column":1,"offset":94321},"end":{"line":4224,"column":37,"offset":94357},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"An iterable is an object that knows how to create an iterator.","position":{"start":{"line":4226,"column":3,"offset":94361},"end":{"line":4226,"column":65,"offset":94423},"indent":[]}}],"position":{"start":{"line":4226,"column":1,"offset":94359},"end":{"line":4226,"column":65,"offset":94423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our","position":{"start":{"line":4228,"column":1,"offset":94425},"end":{"line":4228,"column":4,"offset":94428},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4228,"column":5,"offset":94429},"end":{"line":4228,"column":24,"offset":94448},"indent":[]}}],"position":{"start":{"line":4228,"column":4,"offset":94428},"end":{"line":4228,"column":25,"offset":94449},"indent":[]}},{"type":"text","value":"iterable)","position":{"start":{"line":4228,"column":25,"offset":94449},"end":{"line":4228,"column":34,"offset":94458},"indent":[]}}],"position":{"start":{"line":4228,"column":1,"offset":94425},"end":{"line":4228,"column":34,"offset":94458},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Our iterator is an object that can remember the state as we traverse through it.","position":{"start":{"line":4230,"column":3,"offset":94462},"end":{"line":4230,"column":83,"offset":94542},"indent":[]}}],"position":{"start":{"line":4230,"column":1,"offset":94460},"end":{"line":4230,"column":83,"offset":94542},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We get the next object with \"next()\".","position":{"start":{"line":4232,"column":3,"offset":94546},"end":{"line":4232,"column":40,"offset":94583},"indent":[]}}],"position":{"start":{"line":4232,"column":1,"offset":94544},"end":{"line":4232,"column":40,"offset":94583},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our_iterator) # => \"one\"","position":{"start":{"line":4234,"column":1,"offset":94585},"end":{"line":4234,"column":30,"offset":94614},"indent":[]}}],"position":{"start":{"line":4234,"column":1,"offset":94585},"end":{"line":4234,"column":30,"offset":94614},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"It maintains state as we iterate.","position":{"start":{"line":4236,"column":3,"offset":94618},"end":{"line":4236,"column":36,"offset":94651},"indent":[]}}],"position":{"start":{"line":4236,"column":1,"offset":94616},"end":{"line":4236,"column":36,"offset":94651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our","position":{"start":{"line":4238,"column":1,"offset":94653},"end":{"line":4238,"column":9,"offset":94661},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator) # => \"two\"\nnext(our","position":{"start":{"line":4238,"column":10,"offset":94662},"end":{"line":4239,"column":9,"offset":94691},"indent":[1]}}],"position":{"start":{"line":4238,"column":9,"offset":94661},"end":{"line":4239,"column":10,"offset":94692},"indent":[1]}},{"type":"text","value":"iterator) # => \"three\"","position":{"start":{"line":4239,"column":10,"offset":94692},"end":{"line":4239,"column":32,"offset":94714},"indent":[]}}],"position":{"start":{"line":4238,"column":1,"offset":94653},"end":{"line":4239,"column":32,"offset":94714},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"After the iterator has returned all of its data, it raises a StopIteration exception","position":{"start":{"line":4241,"column":3,"offset":94718},"end":{"line":4241,"column":87,"offset":94802},"indent":[]}}],"position":{"start":{"line":4241,"column":1,"offset":94716},"end":{"line":4241,"column":87,"offset":94802},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our_iterator) # Raises StopIteration","position":{"start":{"line":4243,"column":1,"offset":94804},"end":{"line":4243,"column":42,"offset":94845},"indent":[]}}],"position":{"start":{"line":4243,"column":1,"offset":94804},"end":{"line":4243,"column":42,"offset":94845},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can also loop over it, in fact, \"for\" does this implicitly!","position":{"start":{"line":4245,"column":3,"offset":94849},"end":{"line":4245,"column":65,"offset":94911},"indent":[]}}],"position":{"start":{"line":4245,"column":1,"offset":94847},"end":{"line":4245,"column":65,"offset":94911},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our","position":{"start":{"line":4247,"column":1,"offset":94913},"end":{"line":4247,"column":4,"offset":94916},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4247,"column":5,"offset":94917},"end":{"line":4247,"column":24,"offset":94936},"indent":[]}}],"position":{"start":{"line":4247,"column":4,"offset":94916},"end":{"line":4247,"column":25,"offset":94937},"indent":[]}},{"type":"text","value":"iterable)\nfor i in our_iterator:\nprint(i) # Prints one, two, three","position":{"start":{"line":4247,"column":25,"offset":94937},"end":{"line":4249,"column":34,"offset":95003},"indent":[1,1]}}],"position":{"start":{"line":4247,"column":1,"offset":94913},"end":{"line":4249,"column":34,"offset":95003},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can grab all the elements of an iterable or iterator by calling list() on it.","position":{"start":{"line":4251,"column":3,"offset":95007},"end":{"line":4251,"column":84,"offset":95088},"indent":[]}}],"position":{"start":{"line":4251,"column":1,"offset":95005},"end":{"line":4251,"column":84,"offset":95088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(our","position":{"start":{"line":4253,"column":1,"offset":95090},"end":{"line":4253,"column":9,"offset":95098},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterable) # => Returns ","position":{"start":{"line":4253,"column":10,"offset":95099},"end":{"line":4253,"column":33,"offset":95122},"indent":[]}},{"type":"linkReference","identifier":"\"one\", \"two\", \"three\"","label":"\"one\", \"two\", \"three\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\", \"two\", \"three\"","position":{"start":{"line":4253,"column":34,"offset":95123},"end":{"line":4253,"column":55,"offset":95144},"indent":[]}}],"position":{"start":{"line":4253,"column":33,"offset":95122},"end":{"line":4253,"column":56,"offset":95145},"indent":[]}},{"type":"text","value":"\nlist(our","position":{"start":{"line":4253,"column":56,"offset":95145},"end":{"line":4254,"column":9,"offset":95154},"indent":[1]}}],"position":{"start":{"line":4253,"column":9,"offset":95098},"end":{"line":4254,"column":10,"offset":95155},"indent":[1]}},{"type":"text","value":"iterator) # => Returns [] because state is saved","position":{"start":{"line":4254,"column":10,"offset":95155},"end":{"line":4254,"column":58,"offset":95203},"indent":[]}}],"position":{"start":{"line":4253,"column":1,"offset":95090},"end":{"line":4254,"column":58,"offset":95203},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4256,"column":1,"offset":95205},"end":{"line":4256,"column":53,"offset":95257},"indent":[]}}],"position":{"start":{"line":4256,"column":1,"offset":95205},"end":{"line":4256,"column":53,"offset":95257},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4. Functions","position":{"start":{"line":4258,"column":4,"offset":95262},"end":{"line":4258,"column":16,"offset":95274},"indent":[]}}],"position":{"start":{"line":4258,"column":1,"offset":95259},"end":{"line":4258,"column":16,"offset":95274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4260,"column":1,"offset":95276},"end":{"line":4260,"column":53,"offset":95328},"indent":[]}}],"position":{"start":{"line":4260,"column":1,"offset":95276},"end":{"line":4260,"column":53,"offset":95328},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"def\" to create new functions","position":{"start":{"line":4262,"column":3,"offset":95332},"end":{"line":4262,"column":36,"offset":95365},"indent":[]}}],"position":{"start":{"line":4262,"column":1,"offset":95330},"end":{"line":4262,"column":36,"offset":95365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def add(x, y):\nprint(\"x is {} and y is {}\".format(x, y))\nreturn x + y # Return values with a return statement","position":{"start":{"line":4264,"column":1,"offset":95367},"end":{"line":4266,"column":53,"offset":95476},"indent":[1,1]}}],"position":{"start":{"line":4264,"column":1,"offset":95367},"end":{"line":4266,"column":53,"offset":95476},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Calling functions with parameters","position":{"start":{"line":4268,"column":3,"offset":95480},"end":{"line":4268,"column":36,"offset":95513},"indent":[]}}],"position":{"start":{"line":4268,"column":1,"offset":95478},"end":{"line":4268,"column":36,"offset":95513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"add(5, 6) # => prints out \"x is 5 and y is 6\" and returns 11","position":{"start":{"line":4270,"column":1,"offset":95515},"end":{"line":4270,"column":61,"offset":95575},"indent":[]}}],"position":{"start":{"line":4270,"column":1,"offset":95515},"end":{"line":4270,"column":61,"offset":95575},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Another way to call functions is with keyword arguments","position":{"start":{"line":4272,"column":3,"offset":95579},"end":{"line":4272,"column":58,"offset":95634},"indent":[]}}],"position":{"start":{"line":4272,"column":1,"offset":95577},"end":{"line":4272,"column":58,"offset":95634},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"add(y=6, x=5) # Keyword arguments can arrive in any order.","position":{"start":{"line":4274,"column":1,"offset":95636},"end":{"line":4274,"column":59,"offset":95694},"indent":[]}}],"position":{"start":{"line":4274,"column":1,"offset":95636},"end":{"line":4274,"column":59,"offset":95694},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4276,"column":3,"offset":95698},"end":{"line":4276,"column":58,"offset":95753},"indent":[]}}],"position":{"start":{"line":4276,"column":1,"offset":95696},"end":{"line":4276,"column":58,"offset":95753},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"positional arguments","position":{"start":{"line":4278,"column":3,"offset":95757},"end":{"line":4278,"column":23,"offset":95777},"indent":[]}}],"position":{"start":{"line":4278,"column":1,"offset":95755},"end":{"line":4278,"column":23,"offset":95777},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def varargs(","position":{"start":{"line":4280,"column":1,"offset":95779},"end":{"line":4280,"column":13,"offset":95791},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4280,"column":13,"offset":95791},"end":{"line":4280,"column":15,"offset":95793},"indent":[]}},{"type":"text","value":"args):\nreturn args","position":{"start":{"line":4280,"column":15,"offset":95793},"end":{"line":4281,"column":12,"offset":95811},"indent":[1]}}],"position":{"start":{"line":4280,"column":1,"offset":95779},"end":{"line":4281,"column":12,"offset":95811},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"varargs(1, 2, 3) # => (1, 2, 3)","position":{"start":{"line":4283,"column":1,"offset":95813},"end":{"line":4283,"column":32,"offset":95844},"indent":[]}}],"position":{"start":{"line":4283,"column":1,"offset":95813},"end":{"line":4283,"column":32,"offset":95844},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4285,"column":3,"offset":95848},"end":{"line":4285,"column":58,"offset":95903},"indent":[]}}],"position":{"start":{"line":4285,"column":1,"offset":95846},"end":{"line":4285,"column":58,"offset":95903},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"keyword arguments, as well","position":{"start":{"line":4287,"column":3,"offset":95907},"end":{"line":4287,"column":29,"offset":95933},"indent":[]}}],"position":{"start":{"line":4287,"column":1,"offset":95905},"end":{"line":4287,"column":29,"offset":95933},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def keyword_args(","position":{"start":{"line":4289,"column":1,"offset":95935},"end":{"line":4289,"column":18,"offset":95952},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4289,"column":18,"offset":95952},"end":{"line":4289,"column":20,"offset":95954},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4289,"column":20,"offset":95954},"end":{"line":4289,"column":22,"offset":95956},"indent":[]}},{"type":"text","value":"kwargs):\nreturn kwargs","position":{"start":{"line":4289,"column":22,"offset":95956},"end":{"line":4290,"column":14,"offset":95978},"indent":[1]}}],"position":{"start":{"line":4289,"column":1,"offset":95935},"end":{"line":4290,"column":14,"offset":95978},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's call it to see what happens","position":{"start":{"line":4292,"column":3,"offset":95982},"end":{"line":4292,"column":36,"offset":96015},"indent":[]}}],"position":{"start":{"line":4292,"column":1,"offset":95980},"end":{"line":4292,"column":36,"offset":96015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"keyword_args(big=\"foot\", loch=\"ness\") # => {\"big\": \"foot\", \"loch\": \"ness\"}","position":{"start":{"line":4294,"column":1,"offset":96017},"end":{"line":4294,"column":75,"offset":96091},"indent":[]}}],"position":{"start":{"line":4294,"column":1,"offset":96017},"end":{"line":4294,"column":75,"offset":96091},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can do both at once, if you like","position":{"start":{"line":4296,"column":3,"offset":96095},"end":{"line":4296,"column":39,"offset":96131},"indent":[]}}],"position":{"start":{"line":4296,"column":1,"offset":96093},"end":{"line":4296,"column":39,"offset":96131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def all","position":{"start":{"line":4298,"column":1,"offset":96133},"end":{"line":4298,"column":8,"offset":96140},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4298,"column":9,"offset":96141},"end":{"line":4298,"column":12,"offset":96144},"indent":[]}}],"position":{"start":{"line":4298,"column":8,"offset":96140},"end":{"line":4298,"column":13,"offset":96145},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4298,"column":13,"offset":96145},"end":{"line":4298,"column":18,"offset":96150},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4298,"column":18,"offset":96150},"end":{"line":4298,"column":20,"offset":96152},"indent":[]}},{"type":"text","value":"args, ","position":{"start":{"line":4298,"column":20,"offset":96152},"end":{"line":4298,"column":26,"offset":96158},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4298,"column":26,"offset":96158},"end":{"line":4298,"column":28,"offset":96160},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4298,"column":28,"offset":96160},"end":{"line":4298,"column":30,"offset":96162},"indent":[]}},{"type":"text","value":"kwargs):\nprint(args)\nprint(kwargs)\n\"\"\"\nall","position":{"start":{"line":4298,"column":30,"offset":96162},"end":{"line":4302,"column":4,"offset":96204},"indent":[1,1,1,1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4302,"column":5,"offset":96205},"end":{"line":4302,"column":8,"offset":96208},"indent":[]}}],"position":{"start":{"line":4302,"column":4,"offset":96204},"end":{"line":4302,"column":9,"offset":96209},"indent":[]}},{"type":"text","value":"args(1, 2, a=3, b=4) prints:\n(1, 2)\n{\"a\": 3, \"b\": 4}\n\"\"\"","position":{"start":{"line":4302,"column":9,"offset":96209},"end":{"line":4305,"column":4,"offset":96265},"indent":[1,1,1]}}],"position":{"start":{"line":4298,"column":1,"offset":96133},"end":{"line":4305,"column":4,"offset":96265},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"When calling functions, you can do the opposite of args/kwargs!","position":{"start":{"line":4307,"column":3,"offset":96269},"end":{"line":4307,"column":66,"offset":96332},"indent":[]}}],"position":{"start":{"line":4307,"column":1,"offset":96267},"end":{"line":4307,"column":66,"offset":96332},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use ","position":{"start":{"line":4309,"column":3,"offset":96336},"end":{"line":4309,"column":7,"offset":96340},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4309,"column":7,"offset":96340},"end":{"line":4309,"column":9,"offset":96342},"indent":[]}},{"type":"text","value":" to expand tuples and use ","position":{"start":{"line":4309,"column":9,"offset":96342},"end":{"line":4309,"column":35,"offset":96368},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4309,"column":35,"offset":96368},"end":{"line":4309,"column":37,"offset":96370},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4309,"column":37,"offset":96370},"end":{"line":4309,"column":39,"offset":96372},"indent":[]}},{"type":"text","value":" to expand kwargs.","position":{"start":{"line":4309,"column":39,"offset":96372},"end":{"line":4309,"column":57,"offset":96390},"indent":[]}}],"position":{"start":{"line":4309,"column":1,"offset":96334},"end":{"line":4309,"column":57,"offset":96390},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"args = (1, 2, 3, 4)\nkwargs = {\"a\": 3, \"b\": 4}\nall","position":{"start":{"line":4311,"column":1,"offset":96392},"end":{"line":4313,"column":4,"offset":96441},"indent":[1,1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":5,"offset":96442},"end":{"line":4313,"column":8,"offset":96445},"indent":[]}}],"position":{"start":{"line":4313,"column":4,"offset":96441},"end":{"line":4313,"column":9,"offset":96446},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4313,"column":9,"offset":96446},"end":{"line":4313,"column":14,"offset":96451},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args) # equivalent to all","position":{"start":{"line":4313,"column":15,"offset":96452},"end":{"line":4313,"column":40,"offset":96477},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":41,"offset":96478},"end":{"line":4313,"column":44,"offset":96481},"indent":[]}}],"position":{"start":{"line":4313,"column":40,"offset":96477},"end":{"line":4313,"column":45,"offset":96482},"indent":[]}},{"type":"text","value":"args(1, 2, 3, 4)\nall","position":{"start":{"line":4313,"column":45,"offset":96482},"end":{"line":4314,"column":4,"offset":96502},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4314,"column":5,"offset":96503},"end":{"line":4314,"column":8,"offset":96506},"indent":[]}}],"position":{"start":{"line":4314,"column":4,"offset":96502},"end":{"line":4314,"column":9,"offset":96507},"indent":[]}},{"type":"text","value":"args(\\","position":{"start":{"line":4314,"column":9,"offset":96507},"end":{"line":4314,"column":15,"offset":96513},"indent":[]}}],"position":{"start":{"line":4313,"column":14,"offset":96451},"end":{"line":4314,"column":16,"offset":96514},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":4314,"column":16,"offset":96514},"end":{"line":4314,"column":18,"offset":96516},"indent":[]}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4314,"column":18,"offset":96516},"end":{"line":4314,"column":45,"offset":96543},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4314,"column":46,"offset":96544},"end":{"line":4314,"column":49,"offset":96547},"indent":[]}}],"position":{"start":{"line":4314,"column":45,"offset":96543},"end":{"line":4314,"column":50,"offset":96548},"indent":[]}},{"type":"text","value":"args(a=3, b=4)\nall","position":{"start":{"line":4314,"column":50,"offset":96548},"end":{"line":4315,"column":4,"offset":96566},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4315,"column":5,"offset":96567},"end":{"line":4315,"column":8,"offset":96570},"indent":[]}}],"position":{"start":{"line":4315,"column":4,"offset":96566},"end":{"line":4315,"column":9,"offset":96571},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4315,"column":9,"offset":96571},"end":{"line":4315,"column":14,"offset":96576},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4315,"column":15,"offset":96577},"end":{"line":4315,"column":22,"offset":96584},"indent":[]}}],"position":{"start":{"line":4315,"column":14,"offset":96576},"end":{"line":4315,"column":23,"offset":96585},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4315,"column":23,"offset":96585},"end":{"line":4315,"column":25,"offset":96587},"indent":[]}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4315,"column":25,"offset":96587},"end":{"line":4315,"column":52,"offset":96614},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4315,"column":53,"offset":96615},"end":{"line":4315,"column":56,"offset":96618},"indent":[]}}],"position":{"start":{"line":4315,"column":52,"offset":96614},"end":{"line":4315,"column":57,"offset":96619},"indent":[]}},{"type":"text","value":"args(1, 2, 3, 4, a=3, b=4)","position":{"start":{"line":4315,"column":57,"offset":96619},"end":{"line":4315,"column":83,"offset":96645},"indent":[]}}],"position":{"start":{"line":4311,"column":1,"offset":96392},"end":{"line":4315,"column":83,"offset":96645},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Returning multiple values (with tuple assignments)","position":{"start":{"line":4317,"column":3,"offset":96649},"end":{"line":4317,"column":53,"offset":96699},"indent":[]}}],"position":{"start":{"line":4317,"column":1,"offset":96647},"end":{"line":4317,"column":53,"offset":96699},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def swap(x, y):\nreturn y, x # Return multiple values as a tuple without the parenthesis. # (Note: parenthesis have been excluded but can be included)","position":{"start":{"line":4319,"column":1,"offset":96701},"end":{"line":4320,"column":134,"offset":96850},"indent":[1]}}],"position":{"start":{"line":4319,"column":1,"offset":96701},"end":{"line":4320,"column":134,"offset":96850},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"x = 1\ny = 2\nx, y = swap(x, y) # => x = 2, y = 1","position":{"start":{"line":4322,"column":1,"offset":96852},"end":{"line":4324,"column":36,"offset":96899},"indent":[1,1]}}],"position":{"start":{"line":4322,"column":1,"offset":96852},"end":{"line":4324,"column":36,"offset":96899},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(x, y) = swap(x,y) # Again parenthesis have been excluded but can be included.","position":{"start":{"line":4326,"column":3,"offset":96903},"end":{"line":4326,"column":81,"offset":96981},"indent":[]}}],"position":{"start":{"line":4326,"column":1,"offset":96901},"end":{"line":4326,"column":81,"offset":96981},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Function Scope","position":{"start":{"line":4328,"column":3,"offset":96985},"end":{"line":4328,"column":17,"offset":96999},"indent":[]}}],"position":{"start":{"line":4328,"column":1,"offset":96983},"end":{"line":4328,"column":17,"offset":96999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"x = 5","position":{"start":{"line":4330,"column":1,"offset":97001},"end":{"line":4330,"column":6,"offset":97006},"indent":[]}}],"position":{"start":{"line":4330,"column":1,"offset":97001},"end":{"line":4330,"column":6,"offset":97006},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def set_x(num): # Local var x not the same as global variable x\nx = num # => 43\nprint(x) # => 43","position":{"start":{"line":4332,"column":1,"offset":97008},"end":{"line":4334,"column":17,"offset":97104},"indent":[1,1]}}],"position":{"start":{"line":4332,"column":1,"offset":97008},"end":{"line":4334,"column":17,"offset":97104},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"def set","position":{"start":{"line":4336,"column":1,"offset":97106},"end":{"line":4336,"column":8,"offset":97113},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"global","position":{"start":{"line":4336,"column":9,"offset":97114},"end":{"line":4336,"column":15,"offset":97120},"indent":[]}}],"position":{"start":{"line":4336,"column":8,"offset":97113},"end":{"line":4336,"column":16,"offset":97121},"indent":[]}},{"type":"text","value":"x(num):\nglobal x\nprint(x) # => 5\nx = num # global var x is now set to 6\nprint(x) # => 6","position":{"start":{"line":4336,"column":16,"offset":97121},"end":{"line":4340,"column":16,"offset":97208},"indent":[1,1,1,1]}}],"position":{"start":{"line":4336,"column":1,"offset":97106},"end":{"line":4340,"column":16,"offset":97208},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"set","position":{"start":{"line":4342,"column":1,"offset":97210},"end":{"line":4342,"column":4,"offset":97213},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"x(43)\nset","position":{"start":{"line":4342,"column":5,"offset":97214},"end":{"line":4343,"column":4,"offset":97223},"indent":[1]}}],"position":{"start":{"line":4342,"column":4,"offset":97213},"end":{"line":4343,"column":5,"offset":97224},"indent":[1]}},{"type":"text","value":"global_x(6)","position":{"start":{"line":4343,"column":5,"offset":97224},"end":{"line":4343,"column":16,"offset":97235},"indent":[]}}],"position":{"start":{"line":4342,"column":1,"offset":97210},"end":{"line":4343,"column":16,"offset":97235},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python has first class functions","position":{"start":{"line":4345,"column":3,"offset":97239},"end":{"line":4345,"column":35,"offset":97271},"indent":[]}}],"position":{"start":{"line":4345,"column":1,"offset":97237},"end":{"line":4345,"column":35,"offset":97271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def create_adder(x):\ndef adder(y):\nreturn x + y\nreturn adder","position":{"start":{"line":4347,"column":1,"offset":97273},"end":{"line":4350,"column":13,"offset":97333},"indent":[1,1,1]}}],"position":{"start":{"line":4347,"column":1,"offset":97273},"end":{"line":4350,"column":13,"offset":97333},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"add","position":{"start":{"line":4352,"column":1,"offset":97335},"end":{"line":4352,"column":4,"offset":97338},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"10 = create","position":{"start":{"line":4352,"column":5,"offset":97339},"end":{"line":4352,"column":16,"offset":97350},"indent":[]}}],"position":{"start":{"line":4352,"column":4,"offset":97338},"end":{"line":4352,"column":17,"offset":97351},"indent":[]}},{"type":"text","value":"adder(10)\nadd_10(3) # => 13","position":{"start":{"line":4352,"column":17,"offset":97351},"end":{"line":4353,"column":18,"offset":97378},"indent":[1]}}],"position":{"start":{"line":4352,"column":1,"offset":97335},"end":{"line":4353,"column":18,"offset":97378},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are also anonymous functions","position":{"start":{"line":4355,"column":3,"offset":97382},"end":{"line":4355,"column":37,"offset":97416},"indent":[]}}],"position":{"start":{"line":4355,"column":1,"offset":97380},"end":{"line":4355,"column":37,"offset":97416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(lambda x: x > 2)(3) # => True\n(lambda x, y: x ** 2 + y ** 2)(2, 1) # => 5","position":{"start":{"line":4357,"column":1,"offset":97418},"end":{"line":4358,"column":44,"offset":97492},"indent":[1]}}],"position":{"start":{"line":4357,"column":1,"offset":97418},"end":{"line":4358,"column":44,"offset":97492},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are built-in higher order functions","position":{"start":{"line":4360,"column":3,"offset":97496},"end":{"line":4360,"column":44,"offset":97537},"indent":[]}}],"position":{"start":{"line":4360,"column":1,"offset":97494},"end":{"line":4360,"column":44,"offset":97537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(map(add_10, ","position":{"start":{"line":4362,"column":1,"offset":97539},"end":{"line":4362,"column":18,"offset":97556},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4362,"column":19,"offset":97557},"end":{"line":4362,"column":26,"offset":97564},"indent":[]}}],"position":{"start":{"line":4362,"column":18,"offset":97556},"end":{"line":4362,"column":27,"offset":97565},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4362,"column":27,"offset":97565},"end":{"line":4362,"column":35,"offset":97573},"indent":[]}},{"type":"linkReference","identifier":"11, 12, 13","label":"11, 12, 13","referenceType":"shortcut","children":[{"type":"text","value":"11, 12, 13","position":{"start":{"line":4362,"column":36,"offset":97574},"end":{"line":4362,"column":46,"offset":97584},"indent":[]}}],"position":{"start":{"line":4362,"column":35,"offset":97573},"end":{"line":4362,"column":47,"offset":97585},"indent":[]}},{"type":"text","value":"\nlist(map(max, ","position":{"start":{"line":4362,"column":47,"offset":97585},"end":{"line":4363,"column":15,"offset":97600},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4363,"column":16,"offset":97601},"end":{"line":4363,"column":23,"offset":97608},"indent":[]}}],"position":{"start":{"line":4363,"column":15,"offset":97600},"end":{"line":4363,"column":24,"offset":97609},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":4363,"column":24,"offset":97609},"end":{"line":4363,"column":26,"offset":97611},"indent":[]}},{"type":"linkReference","identifier":"4, 2, 1","label":"4, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"4, 2, 1","position":{"start":{"line":4363,"column":27,"offset":97612},"end":{"line":4363,"column":34,"offset":97619},"indent":[]}}],"position":{"start":{"line":4363,"column":26,"offset":97611},"end":{"line":4363,"column":35,"offset":97620},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4363,"column":35,"offset":97620},"end":{"line":4363,"column":43,"offset":97628},"indent":[]}},{"type":"linkReference","identifier":"4, 2, 3","label":"4, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"4, 2, 3","position":{"start":{"line":4363,"column":44,"offset":97629},"end":{"line":4363,"column":51,"offset":97636},"indent":[]}}],"position":{"start":{"line":4363,"column":43,"offset":97628},"end":{"line":4363,"column":52,"offset":97637},"indent":[]}}],"position":{"start":{"line":4362,"column":1,"offset":97539},"end":{"line":4363,"column":52,"offset":97637},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"list(filter(lambda x: x > 5, ","position":{"start":{"line":4365,"column":1,"offset":97639},"end":{"line":4365,"column":30,"offset":97668},"indent":[]}},{"type":"linkReference","identifier":"3, 4, 5, 6, 7","label":"3, 4, 5, 6, 7","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 5, 6, 7","position":{"start":{"line":4365,"column":31,"offset":97669},"end":{"line":4365,"column":44,"offset":97682},"indent":[]}}],"position":{"start":{"line":4365,"column":30,"offset":97668},"end":{"line":4365,"column":45,"offset":97683},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4365,"column":45,"offset":97683},"end":{"line":4365,"column":53,"offset":97691},"indent":[]}},{"type":"linkReference","identifier":"6, 7","label":"6, 7","referenceType":"shortcut","children":[{"type":"text","value":"6, 7","position":{"start":{"line":4365,"column":54,"offset":97692},"end":{"line":4365,"column":58,"offset":97696},"indent":[]}}],"position":{"start":{"line":4365,"column":53,"offset":97691},"end":{"line":4365,"column":59,"offset":97697},"indent":[]}}],"position":{"start":{"line":4365,"column":1,"offset":97639},"end":{"line":4365,"column":59,"offset":97697},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can use list comprehensions for nice maps and filters","position":{"start":{"line":4367,"column":3,"offset":97701},"end":{"line":4367,"column":59,"offset":97757},"indent":[]}}],"position":{"start":{"line":4367,"column":1,"offset":97699},"end":{"line":4367,"column":59,"offset":97757},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"List comprehension stores the output as a list which can itself be a nested list","position":{"start":{"line":4369,"column":3,"offset":97761},"end":{"line":4369,"column":83,"offset":97841},"indent":[]}}],"position":{"start":{"line":4369,"column":1,"offset":97759},"end":{"line":4369,"column":83,"offset":97841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"[add_10(i) for i in ","position":{"start":{"line":4371,"column":1,"offset":97843},"end":{"line":4371,"column":21,"offset":97863},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4371,"column":22,"offset":97864},"end":{"line":4371,"column":29,"offset":97871},"indent":[]}}],"position":{"start":{"line":4371,"column":21,"offset":97863},"end":{"line":4371,"column":30,"offset":97872},"indent":[]}},{"type":"text","value":"] # => ","position":{"start":{"line":4371,"column":30,"offset":97872},"end":{"line":4371,"column":37,"offset":97879},"indent":[]}},{"type":"linkReference","identifier":"11, 12, 13","label":"11, 12, 13","referenceType":"shortcut","children":[{"type":"text","value":"11, 12, 13","position":{"start":{"line":4371,"column":38,"offset":97880},"end":{"line":4371,"column":48,"offset":97890},"indent":[]}}],"position":{"start":{"line":4371,"column":37,"offset":97879},"end":{"line":4371,"column":49,"offset":97891},"indent":[]}},{"type":"text","value":"\n[x for x in ","position":{"start":{"line":4371,"column":49,"offset":97891},"end":{"line":4372,"column":13,"offset":97904},"indent":[1]}},{"type":"linkReference","identifier":"3, 4, 5, 6, 7","label":"3, 4, 5, 6, 7","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 5, 6, 7","position":{"start":{"line":4372,"column":14,"offset":97905},"end":{"line":4372,"column":27,"offset":97918},"indent":[]}}],"position":{"start":{"line":4372,"column":13,"offset":97904},"end":{"line":4372,"column":28,"offset":97919},"indent":[]}},{"type":"text","value":" if x > 5] # => ","position":{"start":{"line":4372,"column":28,"offset":97919},"end":{"line":4372,"column":44,"offset":97935},"indent":[]}},{"type":"linkReference","identifier":"6, 7","label":"6, 7","referenceType":"shortcut","children":[{"type":"text","value":"6, 7","position":{"start":{"line":4372,"column":45,"offset":97936},"end":{"line":4372,"column":49,"offset":97940},"indent":[]}}],"position":{"start":{"line":4372,"column":44,"offset":97935},"end":{"line":4372,"column":50,"offset":97941},"indent":[]}}],"position":{"start":{"line":4371,"column":1,"offset":97843},"end":{"line":4372,"column":50,"offset":97941},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can construct set and dict comprehensions as well.","position":{"start":{"line":4374,"column":3,"offset":97945},"end":{"line":4374,"column":57,"offset":97999},"indent":[]}}],"position":{"start":{"line":4374,"column":1,"offset":97943},"end":{"line":4374,"column":57,"offset":97999},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{x for x in 'abcddeef' if x not in 'abc'} # => {'d', 'e', 'f'}\n{x: x","position":{"start":{"line":4376,"column":1,"offset":98001},"end":{"line":4377,"column":6,"offset":98069},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":4377,"column":6,"offset":98069},"end":{"line":4377,"column":8,"offset":98071},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4377,"column":8,"offset":98071},"end":{"line":4377,"column":10,"offset":98073},"indent":[]}},{"type":"text","value":"2 for x in range(5)} # => {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}","position":{"start":{"line":4377,"column":10,"offset":98073},"end":{"line":4377,"column":67,"offset":98130},"indent":[]}}],"position":{"start":{"line":4376,"column":1,"offset":98001},"end":{"line":4377,"column":67,"offset":98130},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4379,"column":1,"offset":98132},"end":{"line":4379,"column":53,"offset":98184},"indent":[]}}],"position":{"start":{"line":4379,"column":1,"offset":98132},"end":{"line":4379,"column":53,"offset":98184},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5. Modules","position":{"start":{"line":4381,"column":4,"offset":98189},"end":{"line":4381,"column":14,"offset":98199},"indent":[]}}],"position":{"start":{"line":4381,"column":1,"offset":98186},"end":{"line":4381,"column":14,"offset":98199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4383,"column":1,"offset":98201},"end":{"line":4383,"column":53,"offset":98253},"indent":[]}}],"position":{"start":{"line":4383,"column":1,"offset":98201},"end":{"line":4383,"column":53,"offset":98253},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can import modules","position":{"start":{"line":4385,"column":3,"offset":98257},"end":{"line":4385,"column":25,"offset":98279},"indent":[]}}],"position":{"start":{"line":4385,"column":1,"offset":98255},"end":{"line":4385,"column":25,"offset":98279},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math\nprint(math.sqrt(16)) # => 4.0","position":{"start":{"line":4387,"column":1,"offset":98281},"end":{"line":4388,"column":30,"offset":98322},"indent":[1]}}],"position":{"start":{"line":4387,"column":1,"offset":98281},"end":{"line":4388,"column":30,"offset":98322},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can get specific functions from a module","position":{"start":{"line":4390,"column":3,"offset":98326},"end":{"line":4390,"column":47,"offset":98370},"indent":[]}}],"position":{"start":{"line":4390,"column":1,"offset":98324},"end":{"line":4390,"column":47,"offset":98370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from math import ceil, floor\nprint(ceil(3.7)) # => 4.0\nprint(floor(3.7)) # => 3.0","position":{"start":{"line":4392,"column":1,"offset":98372},"end":{"line":4394,"column":27,"offset":98453},"indent":[1,1]}}],"position":{"start":{"line":4392,"column":1,"offset":98372},"end":{"line":4394,"column":27,"offset":98453},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can import all functions from a module.","position":{"start":{"line":4396,"column":3,"offset":98457},"end":{"line":4396,"column":46,"offset":98500},"indent":[]}}],"position":{"start":{"line":4396,"column":1,"offset":98455},"end":{"line":4396,"column":46,"offset":98500},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Warning: this is not recommended","position":{"start":{"line":4398,"column":3,"offset":98504},"end":{"line":4398,"column":35,"offset":98536},"indent":[]}}],"position":{"start":{"line":4398,"column":1,"offset":98502},"end":{"line":4398,"column":35,"offset":98536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from math import ","position":{"start":{"line":4400,"column":1,"offset":98538},"end":{"line":4400,"column":18,"offset":98555},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4400,"column":18,"offset":98555},"end":{"line":4400,"column":20,"offset":98557},"indent":[]}}],"position":{"start":{"line":4400,"column":1,"offset":98538},"end":{"line":4400,"column":20,"offset":98557},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can shorten module names","position":{"start":{"line":4402,"column":3,"offset":98561},"end":{"line":4402,"column":31,"offset":98589},"indent":[]}}],"position":{"start":{"line":4402,"column":1,"offset":98559},"end":{"line":4402,"column":31,"offset":98589},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math as m\nmath.sqrt(16) == m.sqrt(16) # => True","position":{"start":{"line":4404,"column":1,"offset":98591},"end":{"line":4405,"column":38,"offset":98645},"indent":[1]}}],"position":{"start":{"line":4404,"column":1,"offset":98591},"end":{"line":4405,"column":38,"offset":98645},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python modules are just ordinary Python files. You","position":{"start":{"line":4407,"column":3,"offset":98649},"end":{"line":4407,"column":53,"offset":98699},"indent":[]}}],"position":{"start":{"line":4407,"column":1,"offset":98647},"end":{"line":4407,"column":53,"offset":98699},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"can write your own, and import them. The name of the","position":{"start":{"line":4409,"column":3,"offset":98703},"end":{"line":4409,"column":55,"offset":98755},"indent":[]}}],"position":{"start":{"line":4409,"column":1,"offset":98701},"end":{"line":4409,"column":55,"offset":98755},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"module is the same as the name of the file.","position":{"start":{"line":4411,"column":3,"offset":98759},"end":{"line":4411,"column":46,"offset":98802},"indent":[]}}],"position":{"start":{"line":4411,"column":1,"offset":98757},"end":{"line":4411,"column":46,"offset":98802},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can find out which functions and attributes","position":{"start":{"line":4413,"column":3,"offset":98806},"end":{"line":4413,"column":50,"offset":98853},"indent":[]}}],"position":{"start":{"line":4413,"column":1,"offset":98804},"end":{"line":4413,"column":50,"offset":98853},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"are defined in a module.","position":{"start":{"line":4415,"column":3,"offset":98857},"end":{"line":4415,"column":27,"offset":98881},"indent":[]}}],"position":{"start":{"line":4415,"column":1,"offset":98855},"end":{"line":4415,"column":27,"offset":98881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math\ndir(math)","position":{"start":{"line":4417,"column":1,"offset":98883},"end":{"line":4418,"column":10,"offset":98904},"indent":[1]}}],"position":{"start":{"line":4417,"column":1,"offset":98883},"end":{"line":4418,"column":10,"offset":98904},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"If you have a Python script named math.py in the same","position":{"start":{"line":4420,"column":3,"offset":98908},"end":{"line":4420,"column":56,"offset":98961},"indent":[]}}],"position":{"start":{"line":4420,"column":1,"offset":98906},"end":{"line":4420,"column":56,"offset":98961},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"folder as your current script, the file math.py will","position":{"start":{"line":4422,"column":3,"offset":98965},"end":{"line":4422,"column":55,"offset":99017},"indent":[]}}],"position":{"start":{"line":4422,"column":1,"offset":98963},"end":{"line":4422,"column":55,"offset":99017},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"be loaded instead of the built-in Python module.","position":{"start":{"line":4424,"column":3,"offset":99021},"end":{"line":4424,"column":51,"offset":99069},"indent":[]}}],"position":{"start":{"line":4424,"column":1,"offset":99019},"end":{"line":4424,"column":51,"offset":99069},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This happens because the local folder has priority","position":{"start":{"line":4426,"column":3,"offset":99073},"end":{"line":4426,"column":53,"offset":99123},"indent":[]}}],"position":{"start":{"line":4426,"column":1,"offset":99071},"end":{"line":4426,"column":53,"offset":99123},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"over Python's built-in libraries.","position":{"start":{"line":4428,"column":3,"offset":99127},"end":{"line":4428,"column":36,"offset":99160},"indent":[]}}],"position":{"start":{"line":4428,"column":1,"offset":99125},"end":{"line":4428,"column":36,"offset":99160},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4430,"column":1,"offset":99162},"end":{"line":4430,"column":53,"offset":99214},"indent":[]}}],"position":{"start":{"line":4430,"column":1,"offset":99162},"end":{"line":4430,"column":53,"offset":99214},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6. Classes","position":{"start":{"line":4432,"column":4,"offset":99219},"end":{"line":4432,"column":14,"offset":99229},"indent":[]}}],"position":{"start":{"line":4432,"column":1,"offset":99216},"end":{"line":4432,"column":14,"offset":99229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4434,"column":1,"offset":99231},"end":{"line":4434,"column":53,"offset":99283},"indent":[]}}],"position":{"start":{"line":4434,"column":1,"offset":99231},"end":{"line":4434,"column":53,"offset":99283},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We use the \"class\" statement to create a class","position":{"start":{"line":4436,"column":3,"offset":99287},"end":{"line":4436,"column":49,"offset":99333},"indent":[]}}],"position":{"start":{"line":4436,"column":1,"offset":99285},"end":{"line":4436,"column":49,"offset":99333},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Human:","position":{"start":{"line":4438,"column":1,"offset":99335},"end":{"line":4438,"column":13,"offset":99347},"indent":[]}}],"position":{"start":{"line":4438,"column":1,"offset":99335},"end":{"line":4438,"column":13,"offset":99347},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# A class attribute. It is shared by all instances of this class\nspecies = \"H. sapiens\"\n\n# Basic initializer, this is called when this class is instantiated.\n# Note that the double leading and trailing underscores denote objects\n# or attributes that are used by Python but that live in user-controlled\n# namespaces. Methods(or objects or attributes) like: __init__, __str__,\n# __repr__ etc. are called special methods (or sometimes called dunder methods)\n# You should not invent such names on your own.\ndef __init__(self, name):\n    # Assign the argument to the instance's name attribute\n    self.name = name\n\n    # Initialize property\n    self._age = 0\n\n# An instance method. All methods take \"self\" as the first argument\ndef say(self, msg):\n    print(\"{name}: {message}\".format(name=self.name, message=msg))\n\n# Another instance method\ndef sing(self):\n    return 'yo... yo... microphone check... one two... one two...'\n\n# A class method is shared among all instances\n# They are called with the calling class as the first argument\n@classmethod\ndef get_species(cls):\n    return cls.species\n\n# A static method is called without a class or instance reference\n@staticmethod\ndef grunt():\n    return \"*grunt*\"\n\n# A property is just like a getter.\n# It turns the method age() into an read-only attribute of the same name.\n# There's no need to write trivial getters and setters in Python, though.\n@property\ndef age(self):\n    return self._age\n\n# This allows the property to be set\n@age.setter\ndef age(self, age):\n    self._age = age\n\n# This allows the property to be deleted\n@age.deleter\ndef age(self):\n    del self._age","position":{"start":{"line":4440,"column":1,"offset":99349},"end":{"line":4490,"column":22,"offset":101129},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"When a Python interpreter reads a source file it executes all its code.","position":{"start":{"line":4492,"column":3,"offset":101133},"end":{"line":4492,"column":74,"offset":101204},"indent":[]}}],"position":{"start":{"line":4492,"column":1,"offset":101131},"end":{"line":4492,"column":74,"offset":101204},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This ","position":{"start":{"line":4494,"column":3,"offset":101208},"end":{"line":4494,"column":8,"offset":101213},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4494,"column":10,"offset":101215},"end":{"line":4494,"column":14,"offset":101219},"indent":[]}}],"position":{"start":{"line":4494,"column":8,"offset":101213},"end":{"line":4494,"column":16,"offset":101221},"indent":[]}},{"type":"text","value":" check makes sure this code block is only executed when this","position":{"start":{"line":4494,"column":16,"offset":101221},"end":{"line":4494,"column":76,"offset":101281},"indent":[]}}],"position":{"start":{"line":4494,"column":1,"offset":101206},"end":{"line":4494,"column":76,"offset":101281},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"module is the main program.","position":{"start":{"line":4496,"column":3,"offset":101285},"end":{"line":4496,"column":30,"offset":101312},"indent":[]}}],"position":{"start":{"line":4496,"column":1,"offset":101283},"end":{"line":4496,"column":30,"offset":101312},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4498,"column":1,"offset":101314},"end":{"line":4498,"column":4,"offset":101317},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4498,"column":6,"offset":101319},"end":{"line":4498,"column":10,"offset":101323},"indent":[]}}],"position":{"start":{"line":4498,"column":4,"offset":101317},"end":{"line":4498,"column":12,"offset":101325},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4498,"column":12,"offset":101325},"end":{"line":4498,"column":17,"offset":101330},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4498,"column":19,"offset":101332},"end":{"line":4498,"column":23,"offset":101336},"indent":[]}}],"position":{"start":{"line":4498,"column":17,"offset":101330},"end":{"line":4498,"column":25,"offset":101338},"indent":[]}},{"type":"text","value":"': # Instantiate a class\ni = Human(name=\"Ian\")\ni.say(\"hi\") # \"Ian: hi\"\nj = Human(\"Joel\")\nj.say(\"hello\") # \"Joel: hello\" # i and j are instances of type Human, or in other words: they are Human objects","position":{"start":{"line":4498,"column":25,"offset":101338},"end":{"line":4502,"column":112,"offset":101538},"indent":[1,1,1,1]}}],"position":{"start":{"line":4498,"column":1,"offset":101314},"end":{"line":4502,"column":112,"offset":101538},"indent":[1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"# Call our class method\ni.say(i.get_species())          # \"Ian: H. sapiens\"\n# Change the shared attribute\nHuman.species = \"H. neanderthalensis\"\ni.say(i.get_species())          # => \"Ian: H. neanderthalensis\"\nj.say(j.get_species())          # => \"Joel: H. neanderthalensis\"\n\n# Call the static method\nprint(Human.grunt())            # => \"*grunt*\"\n\n# Cannot call static method with instance of object\n# because i.grunt() will automatically put \"self\" (the object i) as an argument\nprint(i.grunt())                # => TypeError: grunt() takes 0 positional arguments but 1 was given\n\n# Update the property for this instance\ni.age = 42\n# Get the property\ni.say(i.age)                    # => \"Ian: 42\"\nj.say(j.age)                    # => \"Joel: 0\"\n# Delete the property\ndel i.age\n# i.age                         # => this would raise an AttributeError","position":{"start":{"line":4504,"column":1,"offset":101540},"end":{"line":4525,"column":76,"offset":102464},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4527,"column":1,"offset":102466},"end":{"line":4527,"column":53,"offset":102518},"indent":[]}}],"position":{"start":{"line":4527,"column":1,"offset":102466},"end":{"line":4527,"column":53,"offset":102518},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.1 Inheritance","position":{"start":{"line":4529,"column":4,"offset":102523},"end":{"line":4529,"column":19,"offset":102538},"indent":[]}}],"position":{"start":{"line":4529,"column":1,"offset":102520},"end":{"line":4529,"column":19,"offset":102538},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4531,"column":1,"offset":102540},"end":{"line":4531,"column":53,"offset":102592},"indent":[]}}],"position":{"start":{"line":4531,"column":1,"offset":102540},"end":{"line":4531,"column":53,"offset":102592},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Inheritance allows new child classes to be defined that inherit methods and","position":{"start":{"line":4533,"column":3,"offset":102596},"end":{"line":4533,"column":78,"offset":102671},"indent":[]}}],"position":{"start":{"line":4533,"column":1,"offset":102594},"end":{"line":4533,"column":78,"offset":102671},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"variables from their parent class.","position":{"start":{"line":4535,"column":3,"offset":102675},"end":{"line":4535,"column":37,"offset":102709},"indent":[]}}],"position":{"start":{"line":4535,"column":1,"offset":102673},"end":{"line":4535,"column":37,"offset":102709},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using the Human class defined above as the base or parent class, we can","position":{"start":{"line":4537,"column":3,"offset":102713},"end":{"line":4537,"column":74,"offset":102784},"indent":[]}}],"position":{"start":{"line":4537,"column":1,"offset":102711},"end":{"line":4537,"column":74,"offset":102784},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"define a child class, Superhero, which inherits the class variables like","position":{"start":{"line":4539,"column":3,"offset":102788},"end":{"line":4539,"column":75,"offset":102860},"indent":[]}}],"position":{"start":{"line":4539,"column":1,"offset":102786},"end":{"line":4539,"column":75,"offset":102860},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"\"species\", \"name\", and \"age\", as well as methods, like \"sing\" and \"grunt\"","position":{"start":{"line":4541,"column":3,"offset":102864},"end":{"line":4541,"column":76,"offset":102937},"indent":[]}}],"position":{"start":{"line":4541,"column":1,"offset":102862},"end":{"line":4541,"column":76,"offset":102937},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"from the Human class, but can also have its own unique properties.","position":{"start":{"line":4543,"column":3,"offset":102941},"end":{"line":4543,"column":69,"offset":103007},"indent":[]}}],"position":{"start":{"line":4543,"column":1,"offset":102939},"end":{"line":4543,"column":69,"offset":103007},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"To take advantage of modularization by file you could place the classes above in their own files,","position":{"start":{"line":4545,"column":3,"offset":103011},"end":{"line":4545,"column":100,"offset":103108},"indent":[]}}],"position":{"start":{"line":4545,"column":1,"offset":103009},"end":{"line":4545,"column":100,"offset":103108},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"say, human.py","position":{"start":{"line":4547,"column":3,"offset":103112},"end":{"line":4547,"column":16,"offset":103125},"indent":[]}}],"position":{"start":{"line":4547,"column":1,"offset":103110},"end":{"line":4547,"column":16,"offset":103125},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"To import functions from other files use the following format","position":{"start":{"line":4549,"column":3,"offset":103129},"end":{"line":4549,"column":64,"offset":103190},"indent":[]}}],"position":{"start":{"line":4549,"column":1,"offset":103127},"end":{"line":4549,"column":64,"offset":103190},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"from \"filename-without-extension\" import \"function-or-class\"","position":{"start":{"line":4551,"column":3,"offset":103194},"end":{"line":4551,"column":63,"offset":103254},"indent":[]}}],"position":{"start":{"line":4551,"column":1,"offset":103192},"end":{"line":4551,"column":63,"offset":103254},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from human import Human","position":{"start":{"line":4553,"column":1,"offset":103256},"end":{"line":4553,"column":24,"offset":103279},"indent":[]}}],"position":{"start":{"line":4553,"column":1,"offset":103256},"end":{"line":4553,"column":24,"offset":103279},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Specify the parent class(es) as parameters to the class definition","position":{"start":{"line":4555,"column":3,"offset":103283},"end":{"line":4555,"column":69,"offset":103349},"indent":[]}}],"position":{"start":{"line":4555,"column":1,"offset":103281},"end":{"line":4555,"column":69,"offset":103349},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Superhero(Human):","position":{"start":{"line":4557,"column":1,"offset":103351},"end":{"line":4557,"column":24,"offset":103374},"indent":[]}}],"position":{"start":{"line":4557,"column":1,"offset":103351},"end":{"line":4557,"column":24,"offset":103374},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# If the child class should inherit all of the parent's definitions without\n# any modifications, you can just use the \"pass\" keyword (and nothing else)\n# but in this case it is commented out to allow for a unique child class:\n# pass\n\n# Child classes can override their parents' attributes\nspecies = 'Superhuman'\n\n# Children automatically inherit their parent class's constructor including\n# its arguments, but can also define additional arguments or definitions\n# and override its methods such as the class constructor.\n# This constructor inherits the \"name\" argument from the \"Human\" class and\n# adds the \"superpower\" and \"movie\" arguments:\ndef __init__(self, name, movie=False,\n             superpowers=[\"super strength\", \"bulletproofing\"]):\n\n    # add additional class attributes:\n    self.fictional = True\n    self.movie = movie\n    # be aware of mutable default values, since defaults are shared\n    self.superpowers = superpowers\n\n    # The \"super\" function lets you access the parent class's methods\n    # that are overridden by the child, in this case, the __init__ method.\n    # This calls the parent class constructor:\n    super().__init__(name)\n\n# override the sing method\ndef sing(self):\n    return 'Dun, dun, DUN!'\n\n# add an additional instance method\ndef boast(self):\n    for power in self.superpowers:\n        print(\"I wield the power of {pow}!\".format(pow=power))","position":{"start":{"line":4559,"column":1,"offset":103376},"end":{"line":4593,"column":67,"offset":104871},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4595,"column":1,"offset":104873},"end":{"line":4595,"column":4,"offset":104876},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4595,"column":6,"offset":104878},"end":{"line":4595,"column":10,"offset":104882},"indent":[]}}],"position":{"start":{"line":4595,"column":4,"offset":104876},"end":{"line":4595,"column":12,"offset":104884},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4595,"column":12,"offset":104884},"end":{"line":4595,"column":17,"offset":104889},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4595,"column":19,"offset":104891},"end":{"line":4595,"column":23,"offset":104895},"indent":[]}}],"position":{"start":{"line":4595,"column":17,"offset":104889},"end":{"line":4595,"column":25,"offset":104897},"indent":[]}},{"type":"text","value":"':\nsup = Superhero(name=\"Tick\")","position":{"start":{"line":4595,"column":25,"offset":104897},"end":{"line":4596,"column":29,"offset":104928},"indent":[1]}}],"position":{"start":{"line":4595,"column":1,"offset":104873},"end":{"line":4596,"column":29,"offset":104928},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"# Instance type checks\nif isinstance(sup, Human):\n    print('I am human')\nif type(sup) is Superhero:\n    print('I am a superhero')\n\n# Get the Method Resolution search Order used by both getattr() and super()\n# This attribute is dynamic and can be updated\nprint(Superhero.__mro__)    # => (<class '__main__.Superhero'>,\n                            # => <class 'human.Human'>, <class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => Dun, dun, DUN!\n\n# Calls method from Human\nsup.say('Spoon')            # => Tick: Spoon\n\n# Call method that exists only in Superhero\nsup.boast()                 # => I wield the power of super strength!\n                            # => I wield the power of bulletproofing!\n\n# Inherited class attribute\nsup.age = 31\nprint(sup.age)              # => 31\n\n# Attribute that only exists within Superhero\nprint('Am I Oscar eligible? ' + str(sup.movie))","position":{"start":{"line":4598,"column":1,"offset":104930},"end":{"line":4627,"column":52,"offset":106019},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4629,"column":1,"offset":106021},"end":{"line":4629,"column":53,"offset":106073},"indent":[]}}],"position":{"start":{"line":4629,"column":1,"offset":106021},"end":{"line":4629,"column":53,"offset":106073},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.2 Multiple Inheritance","position":{"start":{"line":4631,"column":4,"offset":106078},"end":{"line":4631,"column":28,"offset":106102},"indent":[]}}],"position":{"start":{"line":4631,"column":1,"offset":106075},"end":{"line":4631,"column":28,"offset":106102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4633,"column":1,"offset":106104},"end":{"line":4633,"column":53,"offset":106156},"indent":[]}}],"position":{"start":{"line":4633,"column":1,"offset":106104},"end":{"line":4633,"column":53,"offset":106156},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Another class definition","position":{"start":{"line":4635,"column":3,"offset":106160},"end":{"line":4635,"column":27,"offset":106184},"indent":[]}}],"position":{"start":{"line":4635,"column":1,"offset":106158},"end":{"line":4635,"column":27,"offset":106184},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"bat.py","position":{"start":{"line":4637,"column":3,"offset":106188},"end":{"line":4637,"column":9,"offset":106194},"indent":[]}}],"position":{"start":{"line":4637,"column":1,"offset":106186},"end":{"line":4637,"column":9,"offset":106194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Bat:","position":{"start":{"line":4639,"column":1,"offset":106196},"end":{"line":4639,"column":11,"offset":106206},"indent":[]}}],"position":{"start":{"line":4639,"column":1,"offset":106196},"end":{"line":4639,"column":11,"offset":106206},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"species = 'Baty'\n\ndef __init__(self, can_fly=True):\n    self.fly = can_fly\n\n# This class also has a say method\ndef say(self, msg):\n    msg = '... ... ...'\n    return msg\n\n# And its own method as well\ndef sonar(self):\n    return '))) ... ((('","position":{"start":{"line":4641,"column":1,"offset":106208},"end":{"line":4653,"column":29,"offset":106489},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4655,"column":1,"offset":106491},"end":{"line":4655,"column":4,"offset":106494},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4655,"column":6,"offset":106496},"end":{"line":4655,"column":10,"offset":106500},"indent":[]}}],"position":{"start":{"line":4655,"column":4,"offset":106494},"end":{"line":4655,"column":12,"offset":106502},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4655,"column":12,"offset":106502},"end":{"line":4655,"column":17,"offset":106507},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4655,"column":19,"offset":106509},"end":{"line":4655,"column":23,"offset":106513},"indent":[]}}],"position":{"start":{"line":4655,"column":17,"offset":106507},"end":{"line":4655,"column":25,"offset":106515},"indent":[]}},{"type":"text","value":"':\nb = Bat()\nprint(b.say('hello'))\nprint(b.fly)","position":{"start":{"line":4655,"column":25,"offset":106515},"end":{"line":4658,"column":13,"offset":106562},"indent":[1,1,1]}}],"position":{"start":{"line":4655,"column":1,"offset":106491},"end":{"line":4658,"column":13,"offset":106562},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"And yet another class definition that inherits from Superhero and Bat","position":{"start":{"line":4660,"column":3,"offset":106566},"end":{"line":4660,"column":72,"offset":106635},"indent":[]}}],"position":{"start":{"line":4660,"column":1,"offset":106564},"end":{"line":4660,"column":72,"offset":106635},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"superhero.py","position":{"start":{"line":4662,"column":3,"offset":106639},"end":{"line":4662,"column":15,"offset":106651},"indent":[]}}],"position":{"start":{"line":4662,"column":1,"offset":106637},"end":{"line":4662,"column":15,"offset":106651},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from superhero import Superhero\nfrom bat import Bat","position":{"start":{"line":4664,"column":1,"offset":106653},"end":{"line":4665,"column":20,"offset":106704},"indent":[1]}}],"position":{"start":{"line":4664,"column":1,"offset":106653},"end":{"line":4665,"column":20,"offset":106704},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Define Batman as a child that inherits from both Superhero and Bat","position":{"start":{"line":4667,"column":3,"offset":106708},"end":{"line":4667,"column":69,"offset":106774},"indent":[]}}],"position":{"start":{"line":4667,"column":1,"offset":106706},"end":{"line":4667,"column":69,"offset":106774},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Batman(Superhero, Bat):","position":{"start":{"line":4669,"column":1,"offset":106776},"end":{"line":4669,"column":30,"offset":106805},"indent":[]}}],"position":{"start":{"line":4669,"column":1,"offset":106776},"end":{"line":4669,"column":30,"offset":106805},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"def __init__(self, *args, **kwargs):\n    # Typically to inherit attributes you have to call super:\n    # super(Batman, self).__init__(*args, **kwargs)\n    # However we are dealing with multiple inheritance here, and super()\n    # only works with the next base class in the MRO list.\n    # So instead we explicitly call __init__ for all ancestors.\n    # The use of *args and **kwargs allows for a clean way to pass arguments,\n    # with each parent \"peeling a layer of the onion\".\n    Superhero.__init__(self, 'anonymous', movie=True,\n                       superpowers=['Wealthy'], *args, **kwargs)\n    Bat.__init__(self, *args, can_fly=False, **kwargs)\n    # override the value for the name attribute\n    self.name = 'Sad Affleck'\n\ndef sing(self):\n    return 'nan nan nan nan nan batman!'","position":{"start":{"line":4671,"column":1,"offset":106807},"end":{"line":4686,"column":45,"offset":107656},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4688,"column":1,"offset":107658},"end":{"line":4688,"column":4,"offset":107661},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4688,"column":6,"offset":107663},"end":{"line":4688,"column":10,"offset":107667},"indent":[]}}],"position":{"start":{"line":4688,"column":4,"offset":107661},"end":{"line":4688,"column":12,"offset":107669},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4688,"column":12,"offset":107669},"end":{"line":4688,"column":17,"offset":107674},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4688,"column":19,"offset":107676},"end":{"line":4688,"column":23,"offset":107680},"indent":[]}}],"position":{"start":{"line":4688,"column":17,"offset":107674},"end":{"line":4688,"column":25,"offset":107682},"indent":[]}},{"type":"text","value":"':\nsup = Batman()","position":{"start":{"line":4688,"column":25,"offset":107682},"end":{"line":4689,"column":15,"offset":107699},"indent":[1]}}],"position":{"start":{"line":4688,"column":1,"offset":107658},"end":{"line":4689,"column":15,"offset":107699},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"# Get the Method Resolution search Order used by both getattr() and super().\n# This attribute is dynamic and can be updated\nprint(Batman.__mro__)       # => (<class '__main__.Batman'>,\n                            # => <class 'superhero.Superhero'>,\n                            # => <class 'human.Human'>,\n                            # => <class 'bat.Bat'>, <class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => nan nan nan nan nan batman!\n\n# Calls method from Human, because inheritance order matters\nsup.say('I agree')          # => Sad Affleck: I agree\n\n# Call method that exists only in 2nd ancestor\nprint(sup.sonar())          # => ))) ... (((\n\n# Inherited class attribute\nsup.age = 100\nprint(sup.age)              # => 100\n\n# Inherited attribute from 2nd ancestor whose default value was overridden.\nprint('Can I fly? ' + str(sup.fly)) # => Can I fly? False","position":{"start":{"line":4691,"column":1,"offset":107701},"end":{"line":4715,"column":62,"offset":108763},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4717,"column":1,"offset":108765},"end":{"line":4717,"column":53,"offset":108817},"indent":[]}}],"position":{"start":{"line":4717,"column":1,"offset":108765},"end":{"line":4717,"column":53,"offset":108817},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"7. Advanced","position":{"start":{"line":4719,"column":4,"offset":108822},"end":{"line":4719,"column":15,"offset":108833},"indent":[]}}],"position":{"start":{"line":4719,"column":1,"offset":108819},"end":{"line":4719,"column":15,"offset":108833},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4721,"column":1,"offset":108835},"end":{"line":4721,"column":53,"offset":108887},"indent":[]}}],"position":{"start":{"line":4721,"column":1,"offset":108835},"end":{"line":4721,"column":53,"offset":108887},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Generators help you make lazy code.","position":{"start":{"line":4723,"column":3,"offset":108891},"end":{"line":4723,"column":38,"offset":108926},"indent":[]}}],"position":{"start":{"line":4723,"column":1,"offset":108889},"end":{"line":4723,"column":38,"offset":108926},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def double_numbers(iterable):\nfor i in iterable:\nyield i + i","position":{"start":{"line":4725,"column":1,"offset":108928},"end":{"line":4727,"column":12,"offset":108988},"indent":[1,1]}}],"position":{"start":{"line":4725,"column":1,"offset":108928},"end":{"line":4727,"column":12,"offset":108988},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Generators are memory-efficient because they only load the data needed to","position":{"start":{"line":4729,"column":3,"offset":108992},"end":{"line":4729,"column":76,"offset":109065},"indent":[]}}],"position":{"start":{"line":4729,"column":1,"offset":108990},"end":{"line":4729,"column":76,"offset":109065},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"process the next value in the iterable. This allows them to perform","position":{"start":{"line":4731,"column":3,"offset":109069},"end":{"line":4731,"column":70,"offset":109136},"indent":[]}}],"position":{"start":{"line":4731,"column":1,"offset":109067},"end":{"line":4731,"column":70,"offset":109136},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"operations on otherwise prohibitively large value ranges.","position":{"start":{"line":4733,"column":3,"offset":109140},"end":{"line":4733,"column":60,"offset":109197},"indent":[]}}],"position":{"start":{"line":4733,"column":1,"offset":109138},"end":{"line":4733,"column":60,"offset":109197},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"NOTE: ","position":{"start":{"line":4735,"column":3,"offset":109201},"end":{"line":4735,"column":9,"offset":109207},"indent":[]}},{"type":"inlineCode","value":"range","position":{"start":{"line":4735,"column":9,"offset":109207},"end":{"line":4735,"column":16,"offset":109214},"indent":[]}},{"type":"text","value":" replaces ","position":{"start":{"line":4735,"column":16,"offset":109214},"end":{"line":4735,"column":26,"offset":109224},"indent":[]}},{"type":"inlineCode","value":"xrange","position":{"start":{"line":4735,"column":26,"offset":109224},"end":{"line":4735,"column":34,"offset":109232},"indent":[]}},{"type":"text","value":" in Python 3.","position":{"start":{"line":4735,"column":34,"offset":109232},"end":{"line":4735,"column":47,"offset":109245},"indent":[]}}],"position":{"start":{"line":4735,"column":1,"offset":109199},"end":{"line":4735,"column":47,"offset":109245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"for i in double_numbers(range(1, 900000000)): # ","position":{"start":{"line":4737,"column":1,"offset":109247},"end":{"line":4737,"column":49,"offset":109295},"indent":[]}},{"type":"inlineCode","value":"range","position":{"start":{"line":4737,"column":49,"offset":109295},"end":{"line":4737,"column":56,"offset":109302},"indent":[]}},{"type":"text","value":" is a generator.\nprint(i)\nif i >= 30:\nbreak","position":{"start":{"line":4737,"column":56,"offset":109302},"end":{"line":4740,"column":6,"offset":109345},"indent":[1,1,1]}}],"position":{"start":{"line":4737,"column":1,"offset":109247},"end":{"line":4740,"column":6,"offset":109345},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Just as you can create a list comprehension, you can create generator","position":{"start":{"line":4742,"column":3,"offset":109349},"end":{"line":4742,"column":72,"offset":109418},"indent":[]}}],"position":{"start":{"line":4742,"column":1,"offset":109347},"end":{"line":4742,"column":72,"offset":109418},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"comprehensions as well.","position":{"start":{"line":4744,"column":3,"offset":109422},"end":{"line":4744,"column":26,"offset":109445},"indent":[]}}],"position":{"start":{"line":4744,"column":1,"offset":109420},"end":{"line":4744,"column":26,"offset":109445},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4746,"column":1,"offset":109447},"end":{"line":4746,"column":23,"offset":109469},"indent":[]}},{"type":"linkReference","identifier":"1,2,3,4,5","label":"1,2,3,4,5","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3,4,5","position":{"start":{"line":4746,"column":24,"offset":109470},"end":{"line":4746,"column":33,"offset":109479},"indent":[]}}],"position":{"start":{"line":4746,"column":23,"offset":109469},"end":{"line":4746,"column":34,"offset":109480},"indent":[]}},{"type":"text","value":")\nfor x in values:\nprint(x) # prints -1 -2 -3 -4 -5 to console/terminal","position":{"start":{"line":4746,"column":34,"offset":109480},"end":{"line":4748,"column":53,"offset":109551},"indent":[1,1]}}],"position":{"start":{"line":4746,"column":1,"offset":109447},"end":{"line":4748,"column":53,"offset":109551},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also cast a generator comprehension directly to a list.","position":{"start":{"line":4750,"column":3,"offset":109555},"end":{"line":4750,"column":66,"offset":109618},"indent":[]}}],"position":{"start":{"line":4750,"column":1,"offset":109553},"end":{"line":4750,"column":66,"offset":109618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4752,"column":1,"offset":109620},"end":{"line":4752,"column":23,"offset":109642},"indent":[]}},{"type":"linkReference","identifier":"1,2,3,4,5","label":"1,2,3,4,5","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3,4,5","position":{"start":{"line":4752,"column":24,"offset":109643},"end":{"line":4752,"column":33,"offset":109652},"indent":[]}}],"position":{"start":{"line":4752,"column":23,"offset":109642},"end":{"line":4752,"column":34,"offset":109653},"indent":[]}},{"type":"text","value":")\ngen","position":{"start":{"line":4752,"column":34,"offset":109653},"end":{"line":4753,"column":4,"offset":109658},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":4753,"column":5,"offset":109659},"end":{"line":4753,"column":7,"offset":109661},"indent":[]}}],"position":{"start":{"line":4753,"column":4,"offset":109658},"end":{"line":4753,"column":8,"offset":109662},"indent":[]}},{"type":"text","value":"list = list(values)\nprint(gen","position":{"start":{"line":4753,"column":8,"offset":109662},"end":{"line":4754,"column":10,"offset":109691},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":4754,"column":11,"offset":109692},"end":{"line":4754,"column":13,"offset":109694},"indent":[]}}],"position":{"start":{"line":4754,"column":10,"offset":109691},"end":{"line":4754,"column":14,"offset":109695},"indent":[]}},{"type":"text","value":"list) # => ","position":{"start":{"line":4754,"column":14,"offset":109695},"end":{"line":4754,"column":25,"offset":109706},"indent":[]}},{"type":"linkReference","identifier":"-1, -2, -3, -4, -5","label":"-1, -2, -3, -4, -5","referenceType":"shortcut","children":[{"type":"text","value":"-1, -2, -3, -4, -5","position":{"start":{"line":4754,"column":26,"offset":109707},"end":{"line":4754,"column":44,"offset":109725},"indent":[]}}],"position":{"start":{"line":4754,"column":25,"offset":109706},"end":{"line":4754,"column":45,"offset":109726},"indent":[]}}],"position":{"start":{"line":4752,"column":1,"offset":109620},"end":{"line":4754,"column":45,"offset":109726},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Decorators","position":{"start":{"line":4756,"column":3,"offset":109730},"end":{"line":4756,"column":13,"offset":109740},"indent":[]}}],"position":{"start":{"line":4756,"column":1,"offset":109728},"end":{"line":4756,"column":13,"offset":109740},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"In this example ","position":{"start":{"line":4758,"column":3,"offset":109744},"end":{"line":4758,"column":19,"offset":109760},"indent":[]}},{"type":"inlineCode","value":"beg","position":{"start":{"line":4758,"column":19,"offset":109760},"end":{"line":4758,"column":24,"offset":109765},"indent":[]}},{"type":"text","value":" wraps ","position":{"start":{"line":4758,"column":24,"offset":109765},"end":{"line":4758,"column":31,"offset":109772},"indent":[]}},{"type":"inlineCode","value":"say","position":{"start":{"line":4758,"column":31,"offset":109772},"end":{"line":4758,"column":36,"offset":109777},"indent":[]}},{"type":"text","value":". If say_please is True then it","position":{"start":{"line":4758,"column":36,"offset":109777},"end":{"line":4758,"column":67,"offset":109808},"indent":[]}}],"position":{"start":{"line":4758,"column":1,"offset":109742},"end":{"line":4758,"column":67,"offset":109808},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"will change the returned message.","position":{"start":{"line":4760,"column":3,"offset":109812},"end":{"line":4760,"column":36,"offset":109845},"indent":[]}}],"position":{"start":{"line":4760,"column":1,"offset":109810},"end":{"line":4760,"column":36,"offset":109845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from functools import wraps","position":{"start":{"line":4762,"column":1,"offset":109847},"end":{"line":4762,"column":28,"offset":109874},"indent":[]}}],"position":{"start":{"line":4762,"column":1,"offset":109847},"end":{"line":4762,"column":28,"offset":109874},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def beg(target","position":{"start":{"line":4764,"column":1,"offset":109876},"end":{"line":4764,"column":15,"offset":109890},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function):\n@wraps(target","position":{"start":{"line":4764,"column":16,"offset":109891},"end":{"line":4765,"column":14,"offset":109915},"indent":[1]}}],"position":{"start":{"line":4764,"column":15,"offset":109890},"end":{"line":4765,"column":15,"offset":109916},"indent":[1]}},{"type":"text","value":"function)\ndef wrapper(","position":{"start":{"line":4765,"column":15,"offset":109916},"end":{"line":4766,"column":13,"offset":109938},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4766,"column":14,"offset":109939},"end":{"line":4766,"column":21,"offset":109946},"indent":[]}}],"position":{"start":{"line":4766,"column":13,"offset":109938},"end":{"line":4766,"column":22,"offset":109947},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4766,"column":22,"offset":109947},"end":{"line":4766,"column":24,"offset":109949},"indent":[]}},{"type":"text","value":"kwargs):\nmsg, say","position":{"start":{"line":4766,"column":24,"offset":109949},"end":{"line":4767,"column":9,"offset":109966},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"please = target","position":{"start":{"line":4767,"column":10,"offset":109967},"end":{"line":4767,"column":25,"offset":109982},"indent":[]}}],"position":{"start":{"line":4767,"column":9,"offset":109966},"end":{"line":4767,"column":26,"offset":109983},"indent":[]}},{"type":"text","value":"function(","position":{"start":{"line":4767,"column":26,"offset":109983},"end":{"line":4767,"column":35,"offset":109992},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4767,"column":36,"offset":109993},"end":{"line":4767,"column":43,"offset":110000},"indent":[]}}],"position":{"start":{"line":4767,"column":35,"offset":109992},"end":{"line":4767,"column":44,"offset":110001},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4767,"column":44,"offset":110001},"end":{"line":4767,"column":46,"offset":110003},"indent":[]}},{"type":"text","value":"kwargs)\nif say_please:\nreturn \"{} {}\".format(msg, \"Please! I am poor :(\")\nreturn msg","position":{"start":{"line":4767,"column":46,"offset":110003},"end":{"line":4770,"column":11,"offset":110087},"indent":[1,1,1]}}],"position":{"start":{"line":4764,"column":1,"offset":109876},"end":{"line":4770,"column":11,"offset":110087},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"return wrapper","position":{"start":{"line":4772,"column":1,"offset":110089},"end":{"line":4772,"column":19,"offset":110107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"@beg\ndef say(say","position":{"start":{"line":4774,"column":1,"offset":110109},"end":{"line":4775,"column":12,"offset":110125},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"please=False):\nmsg = \"Can you buy me a beer?\"\nreturn msg, say","position":{"start":{"line":4775,"column":13,"offset":110126},"end":{"line":4777,"column":16,"offset":110187},"indent":[1,1]}}],"position":{"start":{"line":4775,"column":12,"offset":110125},"end":{"line":4777,"column":17,"offset":110188},"indent":[1,1]}},{"type":"text","value":"please","position":{"start":{"line":4777,"column":17,"offset":110188},"end":{"line":4777,"column":23,"offset":110194},"indent":[]}}],"position":{"start":{"line":4774,"column":1,"offset":110109},"end":{"line":4777,"column":23,"offset":110194},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print(say()) # Can you buy me a beer?\nprint(say(say_please=True)) # Can you buy me a beer? Please! I am poor :(","position":{"start":{"line":4779,"column":1,"offset":110196},"end":{"line":4780,"column":74,"offset":110307},"indent":[1]}}],"position":{"start":{"line":4779,"column":1,"offset":110196},"end":{"line":4780,"column":74,"offset":110307},"indent":[1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4781,"column":1,"offset":110308}}}}