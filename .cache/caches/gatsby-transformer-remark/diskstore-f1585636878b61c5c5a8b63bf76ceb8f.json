{"expireTime":9007200903816787000,"key":"transformer-remark-markdown-html-ast-6bc159590fa9e936abb316badbc09eeb--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Gist Archive","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":16,"offset":17}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":16,"offset":17}}},{"type":"text","value":"\n"},{"type":"raw","value":"<h2>Gist Archive</h2>","position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":22,"offset":42}}},{"type":"text","value":"\n"},{"type":"raw","value":"<iframe sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"    src=\"https://bgoonzgist.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" ></iframe>","position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":244,"offset":289}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>\n<hr>\n<br>","position":{"start":{"line":8,"column":1,"offset":293},"end":{"line":10,"column":5,"offset":309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":12,"column":1,"offset":313},"end":{"line":12,"column":4,"offset":316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Featured Gists:","position":{"start":{"line":14,"column":4,"offset":323},"end":{"line":14,"column":19,"offset":338}}}],"position":{"start":{"line":14,"column":1,"offset":320},"end":{"line":14,"column":19,"offset":338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst crypto = require('crypto');\nconst path = require('path');\nconst pathA = '.';\nconst pathB = '/path/to/the/directory/you/want/to/compare/it/to';\nlet hashes = [];\nfunction hashDirIn(folder) {\n    var pathPromiseA = fs\n        .readdirAsync(folder)\n        .map(function (fileName) {\n            var workPath = path.join(folder, fileName);\n            var statPromise = fs.statAsync(workPath);\n            return Promise.join(statPromise, fileName, function (statPromise, fileName) {\n                if (statPromise.isFile()) {\n                    function makeStream(file, callback) {\n                        var result = fs.createReadStream(workPath);\n                        return callback(result);\n                    }\n                    function process(stream) {\n                        var hash = crypto.createHash('md5');\n                        return new Promise(function (resolve, reject) {\n                            stream.on('data', function updateProcess(chunk) {\n                                hash.update(chunk, 'utf8');\n                            });\n                            stream.on('end', resolve);\n                        }).then(function publish() {\n                            var digest = hash.digest('hex');\n                            hashes.push({ digest: digest, path: workPath });\n                        });\n                    }\n                    return makeStream(fileName, process);\n                }\n            });\n        })\n        .then(function () {\n            if (i == 1) {\n                hashes.sort(function (a, b) {\n                    if (a.digest < b.digest) {\n                        return -1;\n                    }\n                    if (a.digest > b.digest) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                var dupe = 1;\n                hashes.map(function (obj, index) {\n                    if (index - 1 >= 0) {\n                        if (obj.digest == hashes[index - 1].digest) {\n                            console.log('Dupe ' + dupe + ' found:');\n                            console.log(obj.path);\n                            console.log('Equal to:');\n                            console.log(hashes[index - 1].path + '\\n');\n                            dupe++;\n                        }\n                    }\n                });\n            }\n            i++;\n        });\n}\nvar i = 0;\nhashDirIn(pathA);\nhashDirIn(pathB);\n"}],"position":{"start":{"line":16,"column":1,"offset":342},"end":{"line":82,"column":4,"offset":2970}}}],"position":{"start":{"line":16,"column":1,"offset":342},"end":{"line":82,"column":4,"offset":2970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":84,"column":1,"offset":2974},"end":{"line":84,"column":4,"offset":2977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":86,"column":1,"offset":2981},"end":{"line":86,"column":4,"offset":2984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"will replace any spaces in file names with an underscore!","position":{"start":{"line":88,"column":3,"offset":2990},"end":{"line":88,"column":60,"offset":3047}}}],"position":{"start":{"line":88,"column":3,"offset":2990},"end":{"line":88,"column":60,"offset":3047}}},{"type":"text","value":"\n"}],"position":{"start":{"line":88,"column":1,"offset":2988},"end":{"line":88,"column":60,"offset":3047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-sh"]},"children":[{"type":"text","value":" for file in *; do mv \"$file\" `echo $file | tr ' ' '_'` ; done\n  ## TAKING IT A STEP FURTHER:\n # Let's do it recursivley:\n  function RecurseDirs ()\n{\n    oldIFS=$IFS\n    IFS=$'\\n'\n    for f in \"$@\"\n    do\n  # YOUR CODE HERE!\n\n[![-----------------------------------------------------](https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png)]\n\nfor file in \\*; do mv \"$file\" `echo $file | tr ' ' '_'` ; done\n        if [[ -d \"${f}\" ]]; then\ncd \"${f}\"\n            RecurseDirs $(ls -1 \".\")\n            cd ..\n        fi\n    done\n    IFS=$oldIFS\n}\nRecurseDirs \"./\"\n"}],"position":{"start":{"line":90,"column":1,"offset":3051},"end":{"line":116,"column":4,"offset":3674}}}],"position":{"start":{"line":90,"column":1,"offset":3051},"end":{"line":116,"column":4,"offset":3674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":118,"column":1,"offset":3678},"end":{"line":118,"column":4,"offset":3681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Copy to clipboard jQuerry","position":{"start":{"line":120,"column":5,"offset":3689},"end":{"line":120,"column":30,"offset":3714}}}],"position":{"start":{"line":120,"column":1,"offset":3685},"end":{"line":120,"column":30,"offset":3714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Language: Javascript/Jquery","position":{"start":{"line":122,"column":3,"offset":3720},"end":{"line":122,"column":30,"offset":3747}}}],"position":{"start":{"line":122,"column":3,"offset":3720},"end":{"line":122,"column":30,"offset":3747}}},{"type":"text","value":"\n"}],"position":{"start":{"line":122,"column":1,"offset":3718},"end":{"line":122,"column":30,"offset":3747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In combination with the script tag : ","position":{"start":{"line":124,"column":3,"offset":3753},"end":{"line":124,"column":40,"offset":3790}}},{"type":"raw","value":"<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">","position":{"start":{"line":124,"column":40,"offset":3790},"end":{"line":124,"column":119,"offset":3869}}},{"type":"raw","value":"</script>","position":{"start":{"line":124,"column":119,"offset":3869},"end":{"line":124,"column":128,"offset":3878}}},{"type":"text","value":" , this snippet will add a copy to clipboard button to all of your embedded ","position":{"start":{"line":124,"column":128,"offset":3878},"end":{"line":124,"column":204,"offset":3954}}},{"type":"raw","value":"<code>","position":{"start":{"line":124,"column":204,"offset":3954},"end":{"line":124,"column":210,"offset":3960}}},{"type":"text","value":" blocks.","position":{"start":{"line":124,"column":210,"offset":3960},"end":{"line":124,"column":218,"offset":3968}}}],"position":{"start":{"line":124,"column":3,"offset":3753},"end":{"line":124,"column":218,"offset":3968}}},{"type":"text","value":"\n"}],"position":{"start":{"line":124,"column":1,"offset":3751},"end":{"line":124,"column":218,"offset":3968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"$(document).ready(function () {\n    $('code, pre').append('<span class=\"command-copy\" ><i class=\"fa fa-clipboard\" aria-hidden=\"true\"></i></span>');\n    $('code span.command-copy').click(function (e) {\n        var text = $(this).parent().text().trim(); //.text();\n        var copyHex = document.createElement('input');\n        copyHex.value = text;\n        document.body.appendChild(copyHex);\n        copyHex.select();\n        document.execCommand('copy');\n        console.log(copyHex.value);\n        document.body.removeChild(copyHex);\n    });\n\n    $('pre span.command-copy').click(function (e) {\n        var text = $(this).parent().text().trim();\n        var copyHex = document.createElement('input');\n        copyHex.value = text;\n        document.body.appendChild(copyHex);\n        copyHex.select();\n        document.execCommand('copy');\n        console.log(copyHex.value);\n        document.body.removeChild(copyHex);\n    });\n});\n"}],"position":{"start":{"line":126,"column":1,"offset":3972},"end":{"line":151,"column":4,"offset":4939}}}],"position":{"start":{"line":126,"column":1,"offset":3972},"end":{"line":151,"column":4,"offset":4939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":153,"column":1,"offset":4943},"end":{"line":153,"column":4,"offset":4946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Append Files in PWD","position":{"start":{"line":155,"column":5,"offset":4954},"end":{"line":155,"column":24,"offset":4973}}}],"position":{"start":{"line":155,"column":1,"offset":4950},"end":{"line":155,"column":24,"offset":4973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//APPEND-DIR.js\nconst fs = require('fs');\nlet cat = require('child_process').execSync('cat *').toString('UTF-8');\nfs.writeFile('output.md', cat, (err) => {\n    if (err) throw err;\n});\n"}],"position":{"start":{"line":157,"column":1,"offset":4977},"end":{"line":164,"column":4,"offset":5177}}}],"position":{"start":{"line":157,"column":1,"offset":4977},"end":{"line":164,"column":4,"offset":5177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":166,"column":1,"offset":5181},"end":{"line":166,"column":4,"offset":5184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"doesUserFrequentStarbucks.js","position":{"start":{"line":168,"column":5,"offset":5192},"end":{"line":168,"column":33,"offset":5220}}}],"position":{"start":{"line":168,"column":1,"offset":5188},"end":{"line":168,"column":33,"offset":5220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const isAppleDevice = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\nconsole.log(isAppleDevice);\n// Result: will return true if user is on an Apple device\n"}],"position":{"start":{"line":170,"column":1,"offset":5224},"end":{"line":174,"column":4,"offset":5394}}}],"position":{"start":{"line":170,"column":1,"offset":5224},"end":{"line":174,"column":4,"offset":5394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":176,"column":1,"offset":5398},"end":{"line":176,"column":4,"offset":5401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"arr-intersection.js","position":{"start":{"line":178,"column":5,"offset":5409},"end":{"line":178,"column":24,"offset":5428}}}],"position":{"start":{"line":178,"column":1,"offset":5405},"end":{"line":178,"column":24,"offset":5428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/*\n function named intersection(firstArr) that takes in an array and\nreturns a function.\nWhen the function returned by intersection is invoked\npassing in an array (secondArr) it returns a new array containing the elements\ncommon to both firstArr and secondArr.\n*/\nfunction intersection(firstArr) {\n    return (secondArr) => {\n        let common = [];\n        for (let i = 0; i < firstArr.length; i++) {\n            let el = firstArr[i];\n            if (secondArr.indexOf(el) > -1) {\n                common.push(el);\n            }\n        }\n        return common;\n    };\n}\nlet abc = intersection(['a', 'b', 'c']); // returns a function\nconsole.log(abc(['b', 'd', 'c'])); // returns [ 'b', 'c' ]\n\nlet fame = intersection(['f', 'a', 'm', 'e']); // returns a function\nconsole.log(fame(['a', 'f', 'z', 'b'])); // returns [ 'f', 'a' ]\n"}],"position":{"start":{"line":180,"column":1,"offset":5432},"end":{"line":205,"column":4,"offset":6295}}}],"position":{"start":{"line":180,"column":1,"offset":5432},"end":{"line":205,"column":4,"offset":6295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":207,"column":1,"offset":6299},"end":{"line":207,"column":4,"offset":6302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"arr-of-cum-partial-sums.js","position":{"start":{"line":209,"column":5,"offset":6310},"end":{"line":209,"column":31,"offset":6336}}}],"position":{"start":{"line":209,"column":1,"offset":6306},"end":{"line":209,"column":31,"offset":6336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/*\nFirst is recurSum(arr, start) which returns the sum of the elements of arr from the index start till the very end.\nSecond is partrecurSum() that recursively concatenates the required sum into an array and when we reach the end of the array, it returns the concatenated array.\n*/\n//arr.length -1 = 5\n//                   arr   [    1,    7,    12,   6,    5,    10   ]\n//                   ind   [    0     1     2     3     4      5   ]\n//                              ↟                              ↟\n//                            start                           end\n\nfunction recurSum(arr, start = 0, sum = 0) {\n    if (start < arr.length) {\n        return recurSum(arr, start + 1, sum + arr[start]);\n    }\n    return sum;\n}\n\nfunction rPartSumsArr(arr, partSum = [], start = 0, end = arr.length - 1) {\n    if (start <= end) {\n        return rPartSumsArr(arr, partSum.concat(recurSum(arr, start)), ++start, end);\n    }\n    return partSum.reverse();\n}\n\nconsole.log('------------------------------------------------rPartSumArr------------------------------------------------');\nconsole.log('rPartSumsArr(arr)=[ 1, 1, 5, 2, 6, 10 ]: ', rPartSumsArr(arr));\nconsole.log('rPartSumsArr(arr1)=[ 1, 7, 12, 6, 5, 10 ]: ', rPartSumsArr(arr1));\nconsole.log('------------------------------------------------rPartSumArr------------------------------------------------');\n/*\n------------------------------------------------rPartSumArr------------------------------------------------\nrPartSumsArr(arr)=[ 1, 1, 5, 2, 6, 10 ]:  [ 10, 16, 18, 23, 24, 25 ]\nrPartSumsArr(arr1)=[ 1, 7, 12, 6, 5, 10 ]:  [ 10, 15, 21, 33, 40, 41 ]\n------------------------------------------------rPartSumArr------------------------------------------------\n*/\n"}],"position":{"start":{"line":211,"column":1,"offset":6340},"end":{"line":246,"column":4,"offset":8107}}}],"position":{"start":{"line":211,"column":1,"offset":6340},"end":{"line":246,"column":4,"offset":8107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":248,"column":1,"offset":8111},"end":{"line":248,"column":4,"offset":8114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"camel2Kabab.js","position":{"start":{"line":250,"column":5,"offset":8122},"end":{"line":250,"column":19,"offset":8136}}}],"position":{"start":{"line":250,"column":1,"offset":8118},"end":{"line":250,"column":19,"offset":8136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":252,"column":1,"offset":8140},"end":{"line":252,"column":4,"offset":8143}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function camelToKebab(value) {\n    return value.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n"}],"position":{"start":{"line":255,"column":1,"offset":8149},"end":{"line":261,"column":4,"offset":8267}}}],"position":{"start":{"line":255,"column":1,"offset":8149},"end":{"line":261,"column":4,"offset":8267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":263,"column":1,"offset":8271},"end":{"line":263,"column":4,"offset":8274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"camelCase.js","position":{"start":{"line":265,"column":5,"offset":8282},"end":{"line":265,"column":17,"offset":8294}}}],"position":{"start":{"line":265,"column":1,"offset":8278},"end":{"line":265,"column":17,"offset":8294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":267,"column":1,"offset":8298},"end":{"line":267,"column":4,"offset":8301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function camel(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n        if (+match === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n        return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n}\n"}],"position":{"start":{"line":270,"column":1,"offset":8307},"end":{"line":279,"column":4,"offset":8590}}}],"position":{"start":{"line":270,"column":1,"offset":8307},"end":{"line":279,"column":4,"offset":8590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":281,"column":1,"offset":8594},"end":{"line":281,"column":4,"offset":8597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"concatLinkedLists.js","position":{"start":{"line":283,"column":5,"offset":8605},"end":{"line":283,"column":25,"offset":8625}}}],"position":{"start":{"line":283,"column":1,"offset":8601},"end":{"line":283,"column":25,"offset":8625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":285,"column":1,"offset":8629},"end":{"line":285,"column":4,"offset":8632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function addTwoNumbers(l1, l2) {\n    let result = new ListNode(0);\n    let currentNode = result;\n    let carryOver = 0;\n    while (l1 != null || l2 != null) {\n        let v1 = 0;\n        let v2 = 0;\n        if (l1 != null) v1 = l1.val;\n        if (l2 != null) v2 = l2.val;\n        let sum = v1 + v2 + carryOver;\n        carryOver = Math.floor(sum / 10);\n        sum = sum % 10;\n        currentNode.next = new ListNode(sum);\n        currentNode = currentNode.next;\n        if (l1 != null) l1 = l1.next;\n        if (l2 != null) l2 = l2.next;\n    }\n    if (carryOver > 0) {\n        currentNode.next = new ListNode(carryOver);\n    }\n    return result.next;\n}\n"}],"position":{"start":{"line":288,"column":1,"offset":8638},"end":{"line":313,"column":4,"offset":9329}}}],"position":{"start":{"line":288,"column":1,"offset":8638},"end":{"line":313,"column":4,"offset":9329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":315,"column":1,"offset":9333},"end":{"line":315,"column":4,"offset":9336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"fast-is-alpha-numeric.js","position":{"start":{"line":317,"column":5,"offset":9344},"end":{"line":317,"column":29,"offset":9368}}}],"position":{"start":{"line":317,"column":1,"offset":9340},"end":{"line":317,"column":29,"offset":9368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//Function to test if a character is alpha numeric that is faster than a regular\n//expression in JavaScript\n\nlet isAlphaNumeric = (char) => {\n    char = char.toString();\n    let id = char.charCodeAt(0);\n    if (\n        !(id > 47 && id < 58) && // if not numeric(0-9)\n        !(id > 64 && id < 91) && // if not letter(A-Z)\n        !(id > 96 && id < 123) // if not letter(a-z)\n    ) {\n        return false;\n    }\n    return true;\n};\n\nconsole.log(isAlphaNumeric('A')); //true\nconsole.log(isAlphaNumeric(2)); //true\nconsole.log(isAlphaNumeric('z')); //true\nconsole.log(isAlphaNumeric(' ')); //false\nconsole.log(isAlphaNumeric('!')); //false\n"}],"position":{"start":{"line":319,"column":1,"offset":9372},"end":{"line":341,"column":4,"offset":10041}}}],"position":{"start":{"line":319,"column":1,"offset":9372},"end":{"line":341,"column":4,"offset":10041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":343,"column":1,"offset":10045},"end":{"line":343,"column":4,"offset":10048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"find-n-replace.js","position":{"start":{"line":345,"column":5,"offset":10056},"end":{"line":345,"column":22,"offset":10073}}}],"position":{"start":{"line":345,"column":1,"offset":10052},"end":{"line":345,"column":22,"offset":10073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":347,"column":1,"offset":10077},"end":{"line":347,"column":4,"offset":10080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function replaceWords(str, before, after) {\n    if (/^[A-Z]/.test(before)) {\n        after = after[0].toUpperCase() + after.substring(1);\n    } else {\n        after = after[0].toLowerCase() + after.substring(1);\n    }\n    return str.replace(before, after);\n}\nconsole.log(replaceWords('Let us go to the store', 'store', 'mall')); //\"Let us go to the mall\"\nconsole.log(replaceWords('He is Sleeping on the couch', 'Sleeping', 'sitting')); //\"He is Sitting on the couch\"\nconsole.log(replaceWords('His name is Tom', 'Tom', 'john'));\n//\"His name is John\"\n"}],"position":{"start":{"line":350,"column":1,"offset":10086},"end":{"line":365,"column":4,"offset":10661}}}],"position":{"start":{"line":350,"column":1,"offset":10086},"end":{"line":365,"column":4,"offset":10661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":367,"column":1,"offset":10665},"end":{"line":367,"column":4,"offset":10668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"flatten-arr.js","position":{"start":{"line":369,"column":5,"offset":10676},"end":{"line":369,"column":19,"offset":10690}}}],"position":{"start":{"line":369,"column":1,"offset":10672},"end":{"line":369,"column":19,"offset":10690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/*Simple Function to flatten an array into a single layer */\nconst flatten = (array) => array.reduce((accum, ele) => accum.concat(Array.isArray(ele) ? flatten(ele) : ele), []);\n"}],"position":{"start":{"line":371,"column":1,"offset":10694},"end":{"line":374,"column":4,"offset":10883}}}],"position":{"start":{"line":371,"column":1,"offset":10694},"end":{"line":374,"column":4,"offset":10883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":376,"column":1,"offset":10887},"end":{"line":376,"column":4,"offset":10890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"isWeekDay.js","position":{"start":{"line":378,"column":5,"offset":10898},"end":{"line":378,"column":17,"offset":10910}}}],"position":{"start":{"line":378,"column":1,"offset":10894},"end":{"line":378,"column":17,"offset":10910}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const isWeekday = (date) => date.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11)));\n// Result: true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10)));\n// Result: false (Sunday)\n"}],"position":{"start":{"line":380,"column":1,"offset":10914},"end":{"line":386,"column":4,"offset":11127}}}],"position":{"start":{"line":380,"column":1,"offset":10914},"end":{"line":386,"column":4,"offset":11127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":388,"column":1,"offset":11131},"end":{"line":388,"column":4,"offset":11134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"longest-common-prefix.js","position":{"start":{"line":390,"column":5,"offset":11142},"end":{"line":390,"column":29,"offset":11166}}}],"position":{"start":{"line":390,"column":1,"offset":11138},"end":{"line":390,"column":29,"offset":11166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":392,"column":1,"offset":11170},"end":{"line":392,"column":4,"offset":11173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function longestCommonPrefix(strs) {\n    let prefix = '';\n    if (strs.length === 0) return prefix;\n    for (let i = 0; i < strs[0].length; i++) {\n        const character = strs[0][i];\n        for (let j = 0; j < strs.length; j++) {\n            if (strs[j][i] !== character) return prefix;\n        }\n        prefix = prefix + character;\n    }\n    return prefix;\n}\n"}],"position":{"start":{"line":395,"column":1,"offset":11179},"end":{"line":410,"column":4,"offset":11569}}}],"position":{"start":{"line":395,"column":1,"offset":11179},"end":{"line":410,"column":4,"offset":11569}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":411,"column":1,"offset":11571}}}}