{"expireTime":9007200904307322000,"key":"transformer-remark-markdown-ast-6cc5ca9169f3a5cc221cf98c0bedc0b2--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"What is a buffer?","position":{"start":{"line":3,"column":4,"offset":5},"end":{"line":3,"column":21,"offset":22},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":21,"offset":22},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers (or any programmer that uses a system programming language), which interact with memory every day.","position":{"start":{"line":5,"column":1,"offset":24},"end":{"line":5,"column":227,"offset":250},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":24},"end":{"line":5,"column":227,"offset":250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It represents a fixed-size chunk of memory (can't be resized) allocated outside of the V8 JavaScript engine.","position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":109,"offset":360},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":252},"end":{"line":7,"column":109,"offset":360},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can think of a buffer like an array of integers, which each represent a byte of data.","position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":90,"offset":451},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":90,"offset":451},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is implemented by the Node.js ","position":{"start":{"line":11,"column":1,"offset":453},"end":{"line":11,"column":34,"offset":486},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html","children":[{"type":"text","value":"Buffer class","position":{"start":{"line":11,"column":35,"offset":487},"end":{"line":11,"column":47,"offset":499},"indent":[]}}],"position":{"start":{"line":11,"column":34,"offset":486},"end":{"line":11,"column":84,"offset":536},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":11,"column":84,"offset":536},"end":{"line":11,"column":85,"offset":537},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":453},"end":{"line":11,"column":85,"offset":537},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Why do we need a buffer?","position":{"start":{"line":13,"column":4,"offset":542},"end":{"line":13,"column":28,"offset":566},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":539},"end":{"line":13,"column":28,"offset":566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Buffers were introduced to help developers deal with binary data, in an ecosystem that traditionally only dealt with strings rather than binaries.","position":{"start":{"line":15,"column":1,"offset":568},"end":{"line":15,"column":147,"offset":714},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":568},"end":{"line":15,"column":147,"offset":714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Buffers are deeply linked with streams. When a stream processor receives data faster than it can digest, it puts the data in a buffer.","position":{"start":{"line":17,"column":1,"offset":716},"end":{"line":17,"column":135,"offset":850},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":716},"end":{"line":17,"column":135,"offset":850},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A simple visualization of a buffer is when you are watching a YouTube video and the red line goes beyond your visualization point: you are downloading data faster than you're viewing it, and your browser buffers it.","position":{"start":{"line":19,"column":1,"offset":852},"end":{"line":19,"column":216,"offset":1067},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":852},"end":{"line":19,"column":216,"offset":1067},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to create a buffer","position":{"start":{"line":21,"column":4,"offset":1072},"end":{"line":21,"column":26,"offset":1094},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1069},"end":{"line":21,"column":26,"offset":1094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer is created using the ","position":{"start":{"line":23,"column":1,"offset":1096},"end":{"line":23,"column":31,"offset":1126},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe","children":[{"type":"inlineCode","value":"Buffer.from()","position":{"start":{"line":23,"column":32,"offset":1127},"end":{"line":23,"column":47,"offset":1142},"indent":[]}}],"position":{"start":{"line":23,"column":31,"offset":1126},"end":{"line":23,"column":139,"offset":1234},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":23,"column":139,"offset":1234},"end":{"line":23,"column":141,"offset":1236},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding","children":[{"type":"inlineCode","value":"Buffer.alloc()","position":{"start":{"line":23,"column":142,"offset":1237},"end":{"line":23,"column":158,"offset":1253},"indent":[]}}],"position":{"start":{"line":23,"column":141,"offset":1236},"end":{"line":23,"column":247,"offset":1342},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":23,"column":247,"offset":1342},"end":{"line":23,"column":253,"offset":1348},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size","children":[{"type":"inlineCode","value":"Buffer.allocUnsafe()","position":{"start":{"line":23,"column":254,"offset":1349},"end":{"line":23,"column":276,"offset":1371},"indent":[]}}],"position":{"start":{"line":23,"column":253,"offset":1348},"end":{"line":23,"column":357,"offset":1452},"indent":[]}},{"type":"text","value":" methods.","position":{"start":{"line":23,"column":357,"offset":1452},"end":{"line":23,"column":366,"offset":1461},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1096},"end":{"line":23,"column":366,"offset":1461},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');","position":{"start":{"line":25,"column":1,"offset":1463},"end":{"line":27,"column":4,"offset":1505},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array","children":[{"type":"inlineCode","value":"Buffer.from(array)","position":{"start":{"line":29,"column":4,"offset":1510},"end":{"line":29,"column":24,"offset":1530},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":1509},"end":{"line":29,"column":99,"offset":1605},"indent":[]}}],"position":{"start":{"line":29,"column":3,"offset":1509},"end":{"line":29,"column":99,"offset":1605},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1507},"end":{"line":29,"column":99,"offset":1605},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length","children":[{"type":"inlineCode","value":"Buffer.from(arrayBuffer[, byteOffset[, length]])","position":{"start":{"line":30,"column":4,"offset":1609},"end":{"line":30,"column":54,"offset":1659},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1608},"end":{"line":30,"column":153,"offset":1758},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1608},"end":{"line":30,"column":153,"offset":1758},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1606},"end":{"line":30,"column":153,"offset":1758},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer","children":[{"type":"inlineCode","value":"Buffer.from(buffer)","position":{"start":{"line":31,"column":4,"offset":1762},"end":{"line":31,"column":25,"offset":1783},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1761},"end":{"line":31,"column":101,"offset":1859},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1761},"end":{"line":31,"column":101,"offset":1859},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1759},"end":{"line":31,"column":101,"offset":1859},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding","children":[{"type":"inlineCode","value":"Buffer.from(string[, encoding])","position":{"start":{"line":32,"column":4,"offset":1863},"end":{"line":32,"column":37,"offset":1896},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1862},"end":{"line":32,"column":122,"offset":1981},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1862},"end":{"line":32,"column":122,"offset":1981},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1860},"end":{"line":32,"column":122,"offset":1981},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1507},"end":{"line":32,"column":122,"offset":1981},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also just initialize the buffer passing the size. This creates a 1KB buffer:","position":{"start":{"line":34,"column":1,"offset":1983},"end":{"line":34,"column":85,"offset":2067},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1983},"end":{"line":34,"column":85,"offset":2067},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.alloc(1024);\n//or\nconst buf = Buffer.allocUnsafe(1024);","position":{"start":{"line":36,"column":1,"offset":2069},"end":{"line":40,"column":4,"offset":2153},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"While both ","position":{"start":{"line":42,"column":1,"offset":2155},"end":{"line":42,"column":12,"offset":2166},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":42,"column":12,"offset":2166},"end":{"line":42,"column":19,"offset":2173},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":42,"column":19,"offset":2173},"end":{"line":42,"column":24,"offset":2178},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":42,"column":24,"offset":2178},"end":{"line":42,"column":37,"offset":2191},"indent":[]}},{"type":"text","value":" allocate a ","position":{"start":{"line":42,"column":37,"offset":2191},"end":{"line":42,"column":49,"offset":2203},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":42,"column":49,"offset":2203},"end":{"line":42,"column":57,"offset":2211},"indent":[]}},{"type":"text","value":" of the specified size in bytes, the ","position":{"start":{"line":42,"column":57,"offset":2211},"end":{"line":42,"column":94,"offset":2248},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":42,"column":94,"offset":2248},"end":{"line":42,"column":102,"offset":2256},"indent":[]}},{"type":"text","value":" created by ","position":{"start":{"line":42,"column":102,"offset":2256},"end":{"line":42,"column":114,"offset":2268},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":42,"column":114,"offset":2268},"end":{"line":42,"column":121,"offset":2275},"indent":[]}},{"type":"text","value":" will be ","position":{"start":{"line":42,"column":121,"offset":2275},"end":{"line":42,"column":130,"offset":2284},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"initialized","position":{"start":{"line":42,"column":131,"offset":2285},"end":{"line":42,"column":142,"offset":2296},"indent":[]}}],"position":{"start":{"line":42,"column":130,"offset":2284},"end":{"line":42,"column":143,"offset":2297},"indent":[]}},{"type":"text","value":" with zeroes and the one created by ","position":{"start":{"line":42,"column":143,"offset":2297},"end":{"line":42,"column":179,"offset":2333},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":42,"column":179,"offset":2333},"end":{"line":42,"column":192,"offset":2346},"indent":[]}},{"type":"text","value":" will be ","position":{"start":{"line":42,"column":192,"offset":2346},"end":{"line":42,"column":201,"offset":2355},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"uninitialized","position":{"start":{"line":42,"column":202,"offset":2356},"end":{"line":42,"column":215,"offset":2369},"indent":[]}}],"position":{"start":{"line":42,"column":201,"offset":2355},"end":{"line":42,"column":216,"offset":2370},"indent":[]}},{"type":"text","value":". This means that while ","position":{"start":{"line":42,"column":216,"offset":2370},"end":{"line":42,"column":240,"offset":2394},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":42,"column":240,"offset":2394},"end":{"line":42,"column":253,"offset":2407},"indent":[]}},{"type":"text","value":" would be quite fast in comparison to ","position":{"start":{"line":42,"column":253,"offset":2407},"end":{"line":42,"column":291,"offset":2445},"indent":[]}},{"type":"inlineCode","value":"alloc","position":{"start":{"line":42,"column":291,"offset":2445},"end":{"line":42,"column":298,"offset":2452},"indent":[]}},{"type":"text","value":", the allocated segment of memory may contain old data which could potentially be sensitive.","position":{"start":{"line":42,"column":298,"offset":2452},"end":{"line":42,"column":390,"offset":2544},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2155},"end":{"line":42,"column":390,"offset":2544},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Older data, if present in the memory, can be accessed or leaked when the ","position":{"start":{"line":44,"column":1,"offset":2546},"end":{"line":44,"column":74,"offset":2619},"indent":[]}},{"type":"inlineCode","value":"Buffer","position":{"start":{"line":44,"column":74,"offset":2619},"end":{"line":44,"column":82,"offset":2627},"indent":[]}},{"type":"text","value":" memory is read. This is what really makes ","position":{"start":{"line":44,"column":82,"offset":2627},"end":{"line":44,"column":125,"offset":2670},"indent":[]}},{"type":"inlineCode","value":"allocUnsafe","position":{"start":{"line":44,"column":125,"offset":2670},"end":{"line":44,"column":138,"offset":2683},"indent":[]}},{"type":"text","value":" unsafe and extra care must be taken while using it.","position":{"start":{"line":44,"column":138,"offset":2683},"end":{"line":44,"column":190,"offset":2735},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2546},"end":{"line":44,"column":190,"offset":2735},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using a buffer","position":{"start":{"line":46,"column":4,"offset":2740},"end":{"line":46,"column":18,"offset":2754},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2737},"end":{"line":46,"column":18,"offset":2754},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Access the content of a buffer","position":{"start":{"line":48,"column":5,"offset":2760},"end":{"line":48,"column":35,"offset":2790},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":2756},"end":{"line":48,"column":35,"offset":2790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A buffer, being an array of bytes, can be accessed like an array:","position":{"start":{"line":50,"column":1,"offset":2792},"end":{"line":50,"column":66,"offset":2857},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2792},"end":{"line":50,"column":66,"offset":2857},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nconsole.log(buf[0]); //72\nconsole.log(buf[1]); //101\nconsole.log(buf[2]); //121","position":{"start":{"line":52,"column":1,"offset":2859},"end":{"line":57,"column":4,"offset":2981},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Those numbers are the Unicode Code that identifies the character in the buffer position (H => 72, e => 101, y => 121)","position":{"start":{"line":59,"column":1,"offset":2983},"end":{"line":59,"column":118,"offset":3100},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2983},"end":{"line":59,"column":118,"offset":3100},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can print the full content of the buffer using the ","position":{"start":{"line":61,"column":1,"offset":3102},"end":{"line":61,"column":56,"offset":3157},"indent":[]}},{"type":"inlineCode","value":"toString()","position":{"start":{"line":61,"column":56,"offset":3157},"end":{"line":61,"column":68,"offset":3169},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":61,"column":68,"offset":3169},"end":{"line":61,"column":76,"offset":3177},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":3102},"end":{"line":61,"column":76,"offset":3177},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"console.log(buf.toString());","position":{"start":{"line":63,"column":1,"offset":3179},"end":{"line":65,"column":4,"offset":3217},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Notice that if you initialize a buffer with a number that sets its size, you'll get access to pre-initialized memory that will contain random data, not an empty buffer!","position":{"start":{"line":67,"column":3,"offset":3221},"end":{"line":67,"column":171,"offset":3389},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":3221},"end":{"line":67,"column":171,"offset":3389},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3219},"end":{"line":67,"column":171,"offset":3389},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Get the length of a buffer","position":{"start":{"line":69,"column":5,"offset":3395},"end":{"line":69,"column":31,"offset":3421},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":3391},"end":{"line":69,"column":31,"offset":3421},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":71,"column":1,"offset":3423},"end":{"line":71,"column":9,"offset":3431},"indent":[]}},{"type":"inlineCode","value":"length","position":{"start":{"line":71,"column":9,"offset":3431},"end":{"line":71,"column":17,"offset":3439},"indent":[]}},{"type":"text","value":" property:","position":{"start":{"line":71,"column":17,"offset":3439},"end":{"line":71,"column":27,"offset":3449},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3423},"end":{"line":71,"column":27,"offset":3449},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nconsole.log(buf.length);","position":{"start":{"line":73,"column":1,"offset":3451},"end":{"line":76,"column":4,"offset":3518},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Iterate over the contents of a buffer","position":{"start":{"line":78,"column":5,"offset":3524},"end":{"line":78,"column":42,"offset":3561},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":3520},"end":{"line":78,"column":42,"offset":3561},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nfor (const item of buf) {\n    console.log(item); //72 101 121 33\n}","position":{"start":{"line":80,"column":1,"offset":3563},"end":{"line":85,"column":4,"offset":3672},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Changing the content of a buffer","position":{"start":{"line":87,"column":5,"offset":3678},"end":{"line":87,"column":37,"offset":3710},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3674},"end":{"line":87,"column":37,"offset":3710},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can write to a buffer a whole string of data by using the ","position":{"start":{"line":89,"column":1,"offset":3712},"end":{"line":89,"column":63,"offset":3774},"indent":[]}},{"type":"inlineCode","value":"write()","position":{"start":{"line":89,"column":63,"offset":3774},"end":{"line":89,"column":72,"offset":3783},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":89,"column":72,"offset":3783},"end":{"line":89,"column":80,"offset":3791},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3712},"end":{"line":89,"column":80,"offset":3791},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.alloc(4);\nbuf.write('Hey!');","position":{"start":{"line":91,"column":1,"offset":3793},"end":{"line":94,"column":4,"offset":3850},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Just like you can access a buffer with an array syntax, you can also set the contents of the buffer in the same way:","position":{"start":{"line":96,"column":1,"offset":3852},"end":{"line":96,"column":117,"offset":3968},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3852},"end":{"line":96,"column":117,"offset":3968},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nbuf[1] = 111; //o\nconsole.log(buf.toString()); //Hoy!","position":{"start":{"line":98,"column":1,"offset":3970},"end":{"line":102,"column":4,"offset":4066},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copy a buffer","position":{"start":{"line":104,"column":5,"offset":4072},"end":{"line":104,"column":18,"offset":4085},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4068},"end":{"line":104,"column":18,"offset":4085},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Copying a buffer is possible using the ","position":{"start":{"line":106,"column":1,"offset":4087},"end":{"line":106,"column":40,"offset":4126},"indent":[]}},{"type":"inlineCode","value":"copy()","position":{"start":{"line":106,"column":40,"offset":4126},"end":{"line":106,"column":48,"offset":4134},"indent":[]}},{"type":"text","value":" method:","position":{"start":{"line":106,"column":48,"offset":4134},"end":{"line":106,"column":56,"offset":4142},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":4087},"end":{"line":106,"column":56,"offset":4142},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(4); //allocate 4 bytes\nbuf.copy(bufcopy);","position":{"start":{"line":108,"column":1,"offset":4144},"end":{"line":112,"column":4,"offset":4255},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default you copy the whole buffer. 3 more parameters let you define the starting position, the ending position, and the new buffer length:","position":{"start":{"line":114,"column":1,"offset":4257},"end":{"line":114,"column":142,"offset":4398},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4257},"end":{"line":114,"column":142,"offset":4398},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(2); //allocate 2 bytes\nbuf.copy(bufcopy, 0, 0, 2);\nbufcopy.toString(); //'He'","position":{"start":{"line":116,"column":1,"offset":4400},"end":{"line":121,"column":4,"offset":4547},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Slice a buffer","position":{"start":{"line":123,"column":5,"offset":4553},"end":{"line":123,"column":19,"offset":4567},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4549},"end":{"line":123,"column":19,"offset":4567},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to create a partial visualization of a buffer, you can create a slice. A slice is not a copy: the original buffer is still the source of truth. If that changes, your slice changes.","position":{"start":{"line":125,"column":1,"offset":4569},"end":{"line":125,"column":193,"offset":4761},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4569},"end":{"line":125,"column":193,"offset":4761},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":127,"column":1,"offset":4763},"end":{"line":127,"column":9,"offset":4771},"indent":[]}},{"type":"inlineCode","value":"slice()","position":{"start":{"line":127,"column":9,"offset":4771},"end":{"line":127,"column":18,"offset":4780},"indent":[]}},{"type":"text","value":" method to create it. The first parameter is the starting position, and you can specify an optional second parameter with the end position:","position":{"start":{"line":127,"column":18,"offset":4780},"end":{"line":127,"column":157,"offset":4919},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":4763},"end":{"line":127,"column":157,"offset":4919},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const buf = Buffer.from('Hey!');\nbuf.slice(0).toString(); //Hey!\nconst slice = buf.slice(0, 2);\nconsole.log(slice.toString()); //He\nbuf[1] = 111; //o\nconsole.log(slice.toString()); //Ho","position":{"start":{"line":129,"column":1,"offset":4921},"end":{"line":136,"column":4,"offset":5116},"indent":[1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":137,"column":1,"offset":5117}}}}