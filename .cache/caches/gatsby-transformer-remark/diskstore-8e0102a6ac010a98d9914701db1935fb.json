{"expireTime":9007200904307322000,"key":"transformer-remark-markdown-ast-bfcce71f6aa49e12d9cd3cf5ab76fb68--","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The easiest way to write to files in Node.js is to use the ","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":60,"offset":61},"indent":[]}},{"type":"inlineCode","value":"fs.writeFile()","position":{"start":{"line":3,"column":60,"offset":61},"end":{"line":3,"column":76,"offset":77},"indent":[]}},{"type":"text","value":" API.","position":{"start":{"line":3,"column":76,"offset":77},"end":{"line":3,"column":81,"offset":82},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":81,"offset":82},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":5,"column":1,"offset":84},"end":{"line":5,"column":9,"offset":92},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":84},"end":{"line":5,"column":9,"offset":92},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const fs = require('fs');\n\nconst content = 'Some content!';\n\nfs.writeFile('/Users/joe/test.txt', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //file written successfully\n});","position":{"start":{"line":7,"column":1,"offset":94},"end":{"line":19,"column":4,"offset":321},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can use the synchronous version ","position":{"start":{"line":21,"column":1,"offset":323},"end":{"line":21,"column":52,"offset":374},"indent":[]}},{"type":"inlineCode","value":"fs.writeFileSync()","position":{"start":{"line":21,"column":52,"offset":374},"end":{"line":21,"column":72,"offset":394},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":21,"column":72,"offset":394},"end":{"line":21,"column":73,"offset":395},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":323},"end":{"line":21,"column":73,"offset":395},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const fs = require('fs');\n\nconst content = 'Some content!';\n\ntry {\n    const data = fs.writeFileSync('/Users/joe/test.txt', content);\n    //file written successfully\n} catch (err) {\n    console.error(err);\n}","position":{"start":{"line":23,"column":1,"offset":397},"end":{"line":34,"column":4,"offset":614},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default, this API will ","position":{"start":{"line":36,"column":1,"offset":616},"end":{"line":36,"column":27,"offset":642},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"replace the contents of the file","position":{"start":{"line":36,"column":29,"offset":644},"end":{"line":36,"column":61,"offset":676},"indent":[]}}],"position":{"start":{"line":36,"column":27,"offset":642},"end":{"line":36,"column":63,"offset":678},"indent":[]}},{"type":"text","value":" if it does already exist.","position":{"start":{"line":36,"column":63,"offset":678},"end":{"line":36,"column":89,"offset":704},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":616},"end":{"line":36,"column":89,"offset":704},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can modify the default by specifying a flag:","position":{"start":{"line":38,"column":1,"offset":706},"end":{"line":38,"column":49,"offset":754},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":706},"end":{"line":38,"column":49,"offset":754},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"fs.writeFile('/Users/joe/test.txt', content, { flag: 'a+' }, (err) => {});","position":{"start":{"line":40,"column":1,"offset":756},"end":{"line":42,"column":4,"offset":840},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The flags you'll likely use are","position":{"start":{"line":44,"column":1,"offset":842},"end":{"line":44,"column":32,"offset":873},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":842},"end":{"line":44,"column":32,"offset":873},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"r+","position":{"start":{"line":46,"column":3,"offset":877},"end":{"line":46,"column":7,"offset":881},"indent":[]}},{"type":"text","value":" open the file for reading and writing","position":{"start":{"line":46,"column":7,"offset":881},"end":{"line":46,"column":45,"offset":919},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":877},"end":{"line":46,"column":45,"offset":919},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":875},"end":{"line":46,"column":45,"offset":919},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"w+","position":{"start":{"line":47,"column":3,"offset":922},"end":{"line":47,"column":7,"offset":926},"indent":[]}},{"type":"text","value":" open the file for reading and writing, positioning the stream at the beginning of the file. The file is created if not existing","position":{"start":{"line":47,"column":7,"offset":926},"end":{"line":47,"column":135,"offset":1054},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":922},"end":{"line":47,"column":135,"offset":1054},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":920},"end":{"line":47,"column":135,"offset":1054},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"a","position":{"start":{"line":48,"column":3,"offset":1057},"end":{"line":48,"column":6,"offset":1060},"indent":[]}},{"type":"text","value":" open the file for writing, positioning the stream at the end of the file. The file is created if not existing","position":{"start":{"line":48,"column":6,"offset":1060},"end":{"line":48,"column":116,"offset":1170},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1057},"end":{"line":48,"column":116,"offset":1170},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1055},"end":{"line":48,"column":116,"offset":1170},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"a+","position":{"start":{"line":49,"column":3,"offset":1173},"end":{"line":49,"column":7,"offset":1177},"indent":[]}},{"type":"text","value":" open the file for reading and writing, positioning the stream at the end of the file. The file is created if not existing","position":{"start":{"line":49,"column":7,"offset":1177},"end":{"line":49,"column":129,"offset":1299},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1173},"end":{"line":49,"column":129,"offset":1299},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1171},"end":{"line":49,"column":129,"offset":1299},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":875},"end":{"line":49,"column":129,"offset":1299},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(you can find more flags at ","position":{"start":{"line":51,"column":1,"offset":1301},"end":{"line":51,"column":29,"offset":1329},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/fs.html#fs_file_system_flags","children":[{"type":"text","value":"https://nodejs.org/api/fs.html#fs_file_system_flags","position":{"start":{"line":51,"column":30,"offset":1330},"end":{"line":51,"column":81,"offset":1381},"indent":[]}}],"position":{"start":{"line":51,"column":29,"offset":1329},"end":{"line":51,"column":82,"offset":1382},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":51,"column":82,"offset":1382},"end":{"line":51,"column":83,"offset":1383},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1301},"end":{"line":51,"column":83,"offset":1383},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Append to a file","position":{"start":{"line":53,"column":4,"offset":1388},"end":{"line":53,"column":20,"offset":1404},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1385},"end":{"line":53,"column":20,"offset":1404},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A handy method to append content to the end of a file is ","position":{"start":{"line":55,"column":1,"offset":1406},"end":{"line":55,"column":58,"offset":1463},"indent":[]}},{"type":"inlineCode","value":"fs.appendFile()","position":{"start":{"line":55,"column":58,"offset":1463},"end":{"line":55,"column":75,"offset":1480},"indent":[]}},{"type":"text","value":" (and its ","position":{"start":{"line":55,"column":75,"offset":1480},"end":{"line":55,"column":85,"offset":1490},"indent":[]}},{"type":"inlineCode","value":"fs.appendFileSync()","position":{"start":{"line":55,"column":85,"offset":1490},"end":{"line":55,"column":106,"offset":1511},"indent":[]}},{"type":"text","value":" counterpart):","position":{"start":{"line":55,"column":106,"offset":1511},"end":{"line":55,"column":120,"offset":1525},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1406},"end":{"line":55,"column":120,"offset":1525},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const content = 'Some content!';\n\nfs.appendFile('file.log', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //done!\n});","position":{"start":{"line":57,"column":1,"offset":1527},"end":{"line":67,"column":4,"offset":1697},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using streams","position":{"start":{"line":69,"column":4,"offset":1702},"end":{"line":69,"column":17,"offset":1715},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1699},"end":{"line":69,"column":17,"offset":1715},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All those methods write the full content to the file before returning the control back to your program (in the async version, this means executing the callback)","position":{"start":{"line":71,"column":1,"offset":1717},"end":{"line":71,"column":161,"offset":1877},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1717},"end":{"line":71,"column":161,"offset":1877},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, a better option is to write the file content using streams.","position":{"start":{"line":73,"column":1,"offset":1879},"end":{"line":73,"column":74,"offset":1952},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1879},"end":{"line":73,"column":74,"offset":1952},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"72","position":{"start":{"line":75,"column":1,"offset":1954},"end":{"line":75,"column":3,"offset":1956},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1954},"end":{"line":75,"column":3,"offset":1956},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackoverflow.com/posts/11194896/timeline","children":[],"position":{"start":{"line":77,"column":1,"offset":1958},"end":{"line":77,"column":54,"offset":2011},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1958},"end":{"line":77,"column":54,"offset":2011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's a sketch. Error handling is left as an exercise for the reader.","position":{"start":{"line":79,"column":1,"offset":2013},"end":{"line":79,"column":71,"offset":2083},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2013},"end":{"line":79,"column":71,"offset":2083},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let fs = require('fs'),\n    path = require('path');\n\nfunction dirTree(filename) {\n    let stats = fs.lstatSync(filename),\n        info = {\n            path: filename,\n            name: path.basename(filename)\n        };\n\n    if (stats.isDirectory()) {\n        info.type = 'folder';\n        info.children = fs.readdirSync(filename).map(function (child) {\n            return dirTree(filename + '/' + child);\n        });\n    } else {\n        // Assuming it's a file. In real life it could be a symlink or\n        // something else!\n        info.type = 'file';\n    }\n\n    return info;\n}\n\nif (module.parent == undefined) {\n    // node dirTree.js ~/foo/bar\n    let util = require('util');\n    console.log(util.inspect(dirTree(process.argv[2]), false, null));\n}","position":{"start":{"line":81,"column":1,"offset":2085},"end":{"line":111,"column":4,"offset":2849},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":112,"column":1,"offset":2850}}}}