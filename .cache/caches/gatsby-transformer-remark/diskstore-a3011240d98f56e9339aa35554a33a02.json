{"expireTime":9007200903816787000,"key":"transformer-remark-markdown-html-ast-0f1f9a0956ec030faf5e14d5d3a3e28c--","val":{"type":"root","children":[{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":4,"offset":5}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"description: Review","position":{"start":{"line":4,"column":4,"offset":12},"end":{"line":4,"column":23,"offset":31}}}],"position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":23,"offset":31}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":6,"column":3,"offset":37},"end":{"line":6,"column":30,"offset":64}}}],"position":{"start":{"line":6,"column":1,"offset":35},"end":{"line":6,"column":30,"offset":64}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":8,"column":5,"offset":72},"end":{"line":8,"column":23,"offset":90}}}],"position":{"start":{"line":8,"column":1,"offset":68},"end":{"line":8,"column":23,"offset":90}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":10,"column":5,"offset":98},"end":{"line":10,"column":32,"offset":125}}}],"position":{"start":{"line":10,"column":1,"offset":94},"end":{"line":10,"column":32,"offset":125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":12,"column":3,"offset":131},"end":{"line":12,"column":22,"offset":150}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":12,"column":22,"offset":150},"end":{"line":12,"column":26,"offset":154}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":26,"offset":154},"end":{"line":12,"column":28,"offset":156}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":12,"column":28,"offset":156},"end":{"line":12,"column":32,"offset":160}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":32,"offset":160},"end":{"line":12,"column":34,"offset":162}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":12,"column":34,"offset":162},"end":{"line":12,"column":39,"offset":167}}},{"type":"text","value":" to their descriptions","position":{"start":{"line":12,"column":39,"offset":167},"end":{"line":12,"column":61,"offset":189}}}],"position":{"start":{"line":12,"column":3,"offset":131},"end":{"line":12,"column":61,"offset":189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":13,"column":7,"offset":197},"end":{"line":13,"column":11,"offset":201}}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":13,"column":11,"offset":201},"end":{"line":13,"column":47,"offset":237}}}],"position":{"start":{"line":13,"column":5,"offset":195},"end":{"line":13,"column":47,"offset":237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":14,"column":7,"offset":245},"end":{"line":14,"column":11,"offset":249}}},{"type":"text","value":" changes current directory","position":{"start":{"line":14,"column":11,"offset":249},"end":{"line":14,"column":37,"offset":275}}}],"position":{"start":{"line":14,"column":7,"offset":245},"end":{"line":14,"column":37,"offset":275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd .."}],"position":{"start":{"line":15,"column":11,"offset":287},"end":{"line":15,"column":18,"offset":294}}},{"type":"text","value":" takes you up one level","position":{"start":{"line":15,"column":18,"offset":294},"end":{"line":15,"column":41,"offset":317}}}],"position":{"start":{"line":15,"column":9,"offset":285},"end":{"line":15,"column":41,"offset":317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":16,"column":11,"offset":329},"end":{"line":16,"column":15,"offset":333}}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":16,"column":15,"offset":333},"end":{"line":16,"column":41,"offset":359}}}],"position":{"start":{"line":16,"column":9,"offset":327},"end":{"line":16,"column":41,"offset":359}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":9,"offset":285},"end":{"line":16,"column":41,"offset":359}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":5,"offset":243},"end":{"line":16,"column":41,"offset":359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":17,"column":7,"offset":367},"end":{"line":17,"column":12,"offset":372}}},{"type":"text","value":" returns current directory","position":{"start":{"line":17,"column":12,"offset":372},"end":{"line":17,"column":38,"offset":398}}}],"position":{"start":{"line":17,"column":5,"offset":365},"end":{"line":17,"column":38,"offset":398}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":5,"offset":195},"end":{"line":17,"column":38,"offset":398}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":129},"end":{"line":17,"column":38,"offset":398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":18,"column":3,"offset":402},"end":{"line":18,"column":51,"offset":450}}},{"type":"text","value":"(","position":{"start":{"line":18,"column":51,"offset":450},"end":{"line":18,"column":53,"offset":452}}},{"type":"text","value":"path","position":{"start":{"line":18,"column":53,"offset":452},"end":{"line":18,"column":57,"offset":456}}},{"type":"text","value":")","position":{"start":{"line":18,"column":57,"offset":456},"end":{"line":18,"column":59,"offset":458}}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":18,"column":59,"offset":458},"end":{"line":18,"column":124,"offset":523}}}],"position":{"start":{"line":18,"column":1,"offset":400},"end":{"line":18,"column":124,"offset":523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":19,"column":3,"offset":527},"end":{"line":19,"column":81,"offset":605}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log('hello new world');"}],"position":{"start":{"line":19,"column":81,"offset":605},"end":{"line":19,"column":114,"offset":638}}},{"type":"text","value":" and save it.","position":{"start":{"line":19,"column":114,"offset":638},"end":{"line":19,"column":127,"offset":651}}}],"position":{"start":{"line":19,"column":1,"offset":525},"end":{"line":19,"column":127,"offset":651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":20,"column":3,"offset":655},"end":{"line":20,"column":56,"offset":708}}}],"position":{"start":{"line":20,"column":1,"offset":653},"end":{"line":20,"column":56,"offset":708}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":129},"end":{"line":20,"column":56,"offset":708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":22,"column":5,"offset":716},"end":{"line":22,"column":40,"offset":751}}}],"position":{"start":{"line":22,"column":1,"offset":712},"end":{"line":22,"column":40,"offset":751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":24,"column":3,"offset":757},"end":{"line":24,"column":52,"offset":806}}}],"position":{"start":{"line":24,"column":3,"offset":757},"end":{"line":24,"column":52,"offset":806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":25,"column":7,"offset":814},"end":{"line":25,"column":65,"offset":872}}}],"position":{"start":{"line":25,"column":7,"offset":814},"end":{"line":25,"column":65,"offset":872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":26,"column":11,"offset":884},"end":{"line":26,"column":35,"offset":908}}}],"position":{"start":{"line":26,"column":9,"offset":882},"end":{"line":26,"column":35,"offset":908}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":9,"offset":882},"end":{"line":26,"column":35,"offset":908}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":812},"end":{"line":26,"column":35,"offset":908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":27,"column":7,"offset":916},"end":{"line":27,"column":26,"offset":935}}},{"type":"text","value":"(","position":{"start":{"line":27,"column":26,"offset":935},"end":{"line":27,"column":28,"offset":937}}},{"type":"text","value":"including arrays","position":{"start":{"line":27,"column":28,"offset":937},"end":{"line":27,"column":44,"offset":953}}},{"type":"text","value":")","position":{"start":{"line":27,"column":44,"offset":953},"end":{"line":27,"column":46,"offset":955}}}],"position":{"start":{"line":27,"column":7,"offset":916},"end":{"line":27,"column":46,"offset":955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"references are mutable","position":{"start":{"line":28,"column":11,"offset":967},"end":{"line":28,"column":33,"offset":989}}}],"position":{"start":{"line":28,"column":9,"offset":965},"end":{"line":28,"column":33,"offset":989}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":9,"offset":965},"end":{"line":28,"column":33,"offset":989}}},{"type":"text","value":"\n"}],"position":{"start":{"line":27,"column":5,"offset":914},"end":{"line":28,"column":33,"offset":989}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":812},"end":{"line":28,"column":33,"offset":989}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":755},"end":{"line":28,"column":33,"offset":989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":29,"column":3,"offset":993},"end":{"line":29,"column":24,"offset":1014}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"."}],"position":{"start":{"line":29,"column":24,"offset":1014},"end":{"line":29,"column":27,"offset":1017}}},{"type":"text","value":" vs ","position":{"start":{"line":29,"column":27,"offset":1017},"end":{"line":29,"column":31,"offset":1021}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]"}],"position":{"start":{"line":29,"column":31,"offset":1021},"end":{"line":29,"column":35,"offset":1025}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":29,"column":35,"offset":1025},"end":{"line":29,"column":70,"offset":1060}}}],"position":{"start":{"line":29,"column":3,"offset":993},"end":{"line":29,"column":70,"offset":1060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":30,"column":7,"offset":1068},"end":{"line":30,"column":18,"offset":1079}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.key"}],"position":{"start":{"line":30,"column":18,"offset":1079},"end":{"line":30,"column":30,"offset":1091}}}],"position":{"start":{"line":30,"column":7,"offset":1068},"end":{"line":30,"column":30,"offset":1091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to read","position":{"start":{"line":31,"column":11,"offset":1103},"end":{"line":31,"column":25,"offset":1117}}}],"position":{"start":{"line":31,"column":9,"offset":1101},"end":{"line":31,"column":25,"offset":1117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to write","position":{"start":{"line":32,"column":11,"offset":1129},"end":{"line":32,"column":26,"offset":1144}}}],"position":{"start":{"line":32,"column":9,"offset":1127},"end":{"line":32,"column":26,"offset":1144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":33,"column":11,"offset":1156},"end":{"line":33,"column":39,"offset":1184}}}],"position":{"start":{"line":33,"column":9,"offset":1154},"end":{"line":33,"column":39,"offset":1184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":34,"column":11,"offset":1196},"end":{"line":34,"column":42,"offset":1227}}}],"position":{"start":{"line":34,"column":9,"offset":1194},"end":{"line":34,"column":42,"offset":1227}}},{"type":"text","value":"\n"}],"position":{"start":{"line":31,"column":9,"offset":1101},"end":{"line":34,"column":42,"offset":1227}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1066},"end":{"line":34,"column":42,"offset":1227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":35,"column":7,"offset":1235},"end":{"line":35,"column":24,"offset":1252}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object[\"key]"}],"position":{"start":{"line":35,"column":24,"offset":1252},"end":{"line":35,"column":38,"offset":1266}}}],"position":{"start":{"line":35,"column":7,"offset":1235},"end":{"line":35,"column":38,"offset":1266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":36,"column":11,"offset":1278},"end":{"line":36,"column":35,"offset":1302}}}],"position":{"start":{"line":36,"column":9,"offset":1276},"end":{"line":36,"column":35,"offset":1302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":37,"column":11,"offset":1314},"end":{"line":37,"column":61,"offset":1364}}}],"position":{"start":{"line":37,"column":9,"offset":1312},"end":{"line":37,"column":61,"offset":1364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":9,"offset":1276},"end":{"line":37,"column":61,"offset":1364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":35,"column":5,"offset":1233},"end":{"line":37,"column":61,"offset":1364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1066},"end":{"line":37,"column":61,"offset":1364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":991},"end":{"line":37,"column":61,"offset":1364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":38,"column":3,"offset":1368},"end":{"line":38,"column":66,"offset":1431}}}],"position":{"start":{"line":38,"column":3,"offset":1368},"end":{"line":38,"column":66,"offset":1431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":40,"column":7,"offset":1441},"end":{"line":40,"column":106,"offset":1540}}}],"position":{"start":{"line":40,"column":7,"offset":1441},"end":{"line":40,"column":106,"offset":1540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n"}],"position":{"start":{"line":42,"column":9,"offset":1552},"end":{"line":45,"column":12,"offset":1647}}}],"position":{"start":{"line":42,"column":9,"offset":1552},"end":{"line":45,"column":12,"offset":1647}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1439},"end":{"line":45,"column":12,"offset":1647}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1439},"end":{"line":45,"column":12,"offset":1647}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":1,"offset":1366},"end":{"line":46,"column":1,"offset":1649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":47,"column":3,"offset":1653},"end":{"line":47,"column":11,"offset":1661}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj[key] !== undefined"}],"position":{"start":{"line":47,"column":11,"offset":1661},"end":{"line":47,"column":35,"offset":1685}}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":47,"column":35,"offset":1685},"end":{"line":47,"column":112,"offset":1762}}}],"position":{"start":{"line":47,"column":1,"offset":1651},"end":{"line":47,"column":112,"offset":1762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"can also use ","position":{"start":{"line":48,"column":5,"offset":1768},"end":{"line":48,"column":18,"offset":1781}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(key in object)"}],"position":{"start":{"line":48,"column":18,"offset":1781},"end":{"line":48,"column":35,"offset":1798}}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":48,"column":35,"offset":1798},"end":{"line":48,"column":59,"offset":1822}}},{"type":"text","value":"(","position":{"start":{"line":48,"column":59,"offset":1822},"end":{"line":48,"column":61,"offset":1824}}},{"type":"text","value":"returns a boolean","position":{"start":{"line":48,"column":61,"offset":1824},"end":{"line":48,"column":78,"offset":1841}}},{"type":"text","value":")","position":{"start":{"line":48,"column":78,"offset":1841},"end":{"line":48,"column":80,"offset":1843}}}],"position":{"start":{"line":48,"column":3,"offset":1766},"end":{"line":48,"column":80,"offset":1843}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":3,"offset":1766},"end":{"line":48,"column":80,"offset":1843}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":1764},"end":{"line":48,"column":80,"offset":1843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":49,"column":3,"offset":1847},"end":{"line":49,"column":54,"offset":1898}}}],"position":{"start":{"line":49,"column":3,"offset":1847},"end":{"line":49,"column":54,"offset":1898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.keys(obj)"}],"position":{"start":{"line":50,"column":7,"offset":1906},"end":{"line":50,"column":25,"offset":1924}}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":50,"column":25,"offset":1924},"end":{"line":50,"column":62,"offset":1961}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":50,"column":62,"offset":1961},"end":{"line":50,"column":67,"offset":1966}}}],"position":{"start":{"line":50,"column":5,"offset":1904},"end":{"line":50,"column":67,"offset":1966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.values(obj)"}],"position":{"start":{"line":51,"column":7,"offset":1974},"end":{"line":51,"column":27,"offset":1994}}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":51,"column":27,"offset":1994},"end":{"line":51,"column":62,"offset":2029}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":51,"column":62,"offset":2029},"end":{"line":51,"column":67,"offset":2034}}}],"position":{"start":{"line":51,"column":5,"offset":1972},"end":{"line":51,"column":67,"offset":2034}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":5,"offset":1904},"end":{"line":51,"column":67,"offset":2034}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1845},"end":{"line":51,"column":67,"offset":2034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":52,"column":3,"offset":2038},"end":{"line":52,"column":37,"offset":2072}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for in"}],"position":{"start":{"line":52,"column":37,"offset":2072},"end":{"line":52,"column":45,"offset":2080}}},{"type":"text","value":" loop","position":{"start":{"line":52,"column":45,"offset":2080},"end":{"line":52,"column":50,"offset":2085}}}],"position":{"start":{"line":52,"column":3,"offset":2038},"end":{"line":52,"column":50,"offset":2085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n"}],"position":{"start":{"line":54,"column":5,"offset":2093},"end":{"line":61,"column":8,"offset":2266}}}],"position":{"start":{"line":54,"column":5,"offset":2093},"end":{"line":61,"column":8,"offset":2266}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":2036},"end":{"line":62,"column":1,"offset":2268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":63,"column":3,"offset":2272},"end":{"line":63,"column":35,"offset":2304}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":63,"column":35,"offset":2304},"end":{"line":63,"column":44,"offset":2313}}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":63,"column":44,"offset":2313},"end":{"line":63,"column":94,"offset":2363}}}],"position":{"start":{"line":63,"column":3,"offset":2272},"end":{"line":63,"column":94,"offset":2363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":65,"column":7,"offset":2373},"end":{"line":65,"column":16,"offset":2382}}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":65,"column":16,"offset":2382},"end":{"line":65,"column":71,"offset":2437}}}],"position":{"start":{"line":65,"column":5,"offset":2371},"end":{"line":65,"column":71,"offset":2437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":66,"column":7,"offset":2445},"end":{"line":66,"column":63,"offset":2501}}}],"position":{"start":{"line":66,"column":7,"offset":2445},"end":{"line":66,"column":63,"offset":2501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n"}],"position":{"start":{"line":68,"column":9,"offset":2513},"end":{"line":76,"column":12,"offset":2804}}}],"position":{"start":{"line":68,"column":9,"offset":2513},"end":{"line":76,"column":12,"offset":2804}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":5,"offset":2443},"end":{"line":76,"column":12,"offset":2804}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":5,"offset":2371},"end":{"line":76,"column":12,"offset":2804}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":2270},"end":{"line":76,"column":12,"offset":2804}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":755},"end":{"line":76,"column":12,"offset":2804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":78,"column":1,"offset":2808},"end":{"line":78,"column":4,"offset":2811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":80,"column":3,"offset":2817},"end":{"line":80,"column":7,"offset":2821}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...spread"}],"position":{"start":{"line":80,"column":7,"offset":2821},"end":{"line":80,"column":18,"offset":2832}}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":80,"column":18,"offset":2832},"end":{"line":80,"column":64,"offset":2878}}}],"position":{"start":{"line":80,"column":3,"offset":2817},"end":{"line":80,"column":64,"offset":2878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n"}],"position":{"start":{"line":82,"column":5,"offset":2886},"end":{"line":87,"column":8,"offset":3139}}}],"position":{"start":{"line":82,"column":5,"offset":2886},"end":{"line":87,"column":8,"offset":3139}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2815},"end":{"line":88,"column":1,"offset":3141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":89,"column":3,"offset":3145},"end":{"line":89,"column":54,"offset":3196}}}],"position":{"start":{"line":89,"column":3,"offset":3145},"end":{"line":89,"column":54,"offset":3196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":91,"column":5,"offset":3204},"end":{"line":91,"column":7,"offset":3206}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":7,"offset":3206},"end":{"line":91,"column":9,"offset":3208}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":9,"offset":3208},"end":{"line":91,"column":11,"offset":3210}}},{"type":"text","value":"javascript","position":{"start":{"line":91,"column":11,"offset":3210},"end":{"line":91,"column":21,"offset":3220}}}],"position":{"start":{"line":91,"column":5,"offset":3204},"end":{"line":91,"column":21,"offset":3220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let array = ","position":{"start":{"line":93,"column":5,"offset":3228},"end":{"line":93,"column":17,"offset":3240}}},{"type":"text","value":"[","position":{"start":{"line":93,"column":17,"offset":3240},"end":{"line":93,"column":19,"offset":3242}}},{"type":"text","value":"35,9","position":{"start":{"line":93,"column":19,"offset":3242},"end":{"line":93,"column":23,"offset":3246}}},{"type":"text","value":"]","position":{"start":{"line":93,"column":23,"offset":3246},"end":{"line":93,"column":25,"offset":3248}}},{"type":"text","value":";","position":{"start":{"line":93,"column":25,"offset":3248},"end":{"line":93,"column":26,"offset":3249}}}],"position":{"start":{"line":93,"column":5,"offset":3228},"end":{"line":93,"column":26,"offset":3249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let ","position":{"start":{"line":95,"column":5,"offset":3257},"end":{"line":95,"column":9,"offset":3261}}},{"type":"text","value":"[","position":{"start":{"line":95,"column":9,"offset":3261},"end":{"line":95,"column":11,"offset":3263}}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":95,"column":11,"offset":3263},"end":{"line":95,"column":28,"offset":3280}}},{"type":"text","value":"]","position":{"start":{"line":95,"column":28,"offset":3280},"end":{"line":95,"column":30,"offset":3282}}},{"type":"text","value":" = array;","position":{"start":{"line":95,"column":30,"offset":3282},"end":{"line":95,"column":39,"offset":3291}}}],"position":{"start":{"line":95,"column":5,"offset":3257},"end":{"line":95,"column":39,"offset":3291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":97,"column":5,"offset":3299},"end":{"line":97,"column":16,"offset":3310}}},{"type":"text","value":"(","position":{"start":{"line":97,"column":16,"offset":3310},"end":{"line":97,"column":18,"offset":3312}}},{"type":"text","value":"firstEl","position":{"start":{"line":97,"column":18,"offset":3312},"end":{"line":97,"column":25,"offset":3319}}},{"type":"text","value":")","position":{"start":{"line":97,"column":25,"offset":3319},"end":{"line":97,"column":27,"offset":3321}}},{"type":"text","value":"; // =","position":{"start":{"line":97,"column":27,"offset":3321},"end":{"line":97,"column":33,"offset":3327}}},{"type":"text","value":">","position":{"start":{"line":97,"column":33,"offset":3327},"end":{"line":97,"column":37,"offset":3331}}},{"type":"text","value":" 35","position":{"start":{"line":97,"column":37,"offset":3331},"end":{"line":97,"column":40,"offset":3334}}}],"position":{"start":{"line":97,"column":5,"offset":3299},"end":{"line":97,"column":40,"offset":3334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":99,"column":5,"offset":3342},"end":{"line":99,"column":16,"offset":3353}}},{"type":"text","value":"(","position":{"start":{"line":99,"column":16,"offset":3353},"end":{"line":99,"column":18,"offset":3355}}},{"type":"text","value":"secondEl","position":{"start":{"line":99,"column":18,"offset":3355},"end":{"line":99,"column":26,"offset":3363}}},{"type":"text","value":")","position":{"start":{"line":99,"column":26,"offset":3363},"end":{"line":99,"column":28,"offset":3365}}},{"type":"text","value":"; // =","position":{"start":{"line":99,"column":28,"offset":3365},"end":{"line":99,"column":34,"offset":3371}}},{"type":"text","value":">","position":{"start":{"line":99,"column":34,"offset":3371},"end":{"line":99,"column":38,"offset":3375}}},{"type":"text","value":" 9","position":{"start":{"line":99,"column":38,"offset":3375},"end":{"line":99,"column":40,"offset":3377}}}],"position":{"start":{"line":99,"column":5,"offset":3342},"end":{"line":99,"column":40,"offset":3377}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":3143},"end":{"line":99,"column":40,"offset":3377}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2815},"end":{"line":99,"column":40,"offset":3377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":101,"column":1,"offset":3381},"end":{"line":101,"column":54,"offset":3434}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":54,"offset":3434},"end":{"line":101,"column":56,"offset":3436}}},{"type":"text","value":"35,9,14","position":{"start":{"line":101,"column":56,"offset":3436},"end":{"line":101,"column":63,"offset":3443}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":63,"offset":3443},"end":{"line":101,"column":65,"offset":3445}}},{"type":"text","value":"; let ","position":{"start":{"line":101,"column":65,"offset":3445},"end":{"line":101,"column":71,"offset":3451}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":71,"offset":3451},"end":{"line":101,"column":73,"offset":3453}}},{"type":"text","value":"head, ...tail","position":{"start":{"line":101,"column":73,"offset":3453},"end":{"line":101,"column":86,"offset":3466}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":86,"offset":3466},"end":{"line":101,"column":88,"offset":3468}}},{"type":"text","value":" = array; console.log","position":{"start":{"line":101,"column":88,"offset":3468},"end":{"line":101,"column":109,"offset":3489}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":109,"offset":3489},"end":{"line":101,"column":111,"offset":3491}}},{"type":"text","value":"head","position":{"start":{"line":101,"column":111,"offset":3491},"end":{"line":101,"column":115,"offset":3495}}},{"type":"text","value":")","position":{"start":{"line":101,"column":115,"offset":3495},"end":{"line":101,"column":117,"offset":3497}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":117,"offset":3497},"end":{"line":101,"column":123,"offset":3503}}},{"type":"text","value":">","position":{"start":{"line":101,"column":123,"offset":3503},"end":{"line":101,"column":127,"offset":3507}}},{"type":"text","value":" 35 console.log","position":{"start":{"line":101,"column":127,"offset":3507},"end":{"line":101,"column":142,"offset":3522}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":142,"offset":3522},"end":{"line":101,"column":144,"offset":3524}}},{"type":"text","value":"tail","position":{"start":{"line":101,"column":144,"offset":3524},"end":{"line":101,"column":148,"offset":3528}}},{"type":"text","value":")","position":{"start":{"line":101,"column":148,"offset":3528},"end":{"line":101,"column":150,"offset":3530}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":150,"offset":3530},"end":{"line":101,"column":156,"offset":3536}}},{"type":"text","value":">","position":{"start":{"line":101,"column":156,"offset":3536},"end":{"line":101,"column":160,"offset":3540}}},{"type":"text","value":" ","position":{"start":{"line":101,"column":160,"offset":3540},"end":{"line":101,"column":161,"offset":3541}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":161,"offset":3541},"end":{"line":101,"column":163,"offset":3543}}},{"type":"text","value":"9, 14","position":{"start":{"line":101,"column":163,"offset":3543},"end":{"line":101,"column":168,"offset":3548}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":168,"offset":3548},"end":{"line":101,"column":170,"offset":3550}}}],"position":{"start":{"line":101,"column":1,"offset":3381},"end":{"line":101,"column":170,"offset":3550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```js\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n"}],"position":{"start":{"line":103,"column":1,"offset":3554},"end":{"line":137,"column":4,"offset":4617}}}],"position":{"start":{"line":103,"column":1,"offset":3554},"end":{"line":137,"column":4,"offset":4617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":139,"column":3,"offset":4623},"end":{"line":139,"column":131,"offset":4751}}}],"position":{"start":{"line":139,"column":3,"offset":4623},"end":{"line":139,"column":131,"offset":4751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n"}],"position":{"start":{"line":141,"column":5,"offset":4759},"end":{"line":152,"column":8,"offset":5089}}}],"position":{"start":{"line":141,"column":5,"offset":4759},"end":{"line":152,"column":8,"offset":5089}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4621},"end":{"line":152,"column":8,"offset":5089}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4621},"end":{"line":152,"column":8,"offset":5089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":154,"column":5,"offset":5097},"end":{"line":154,"column":30,"offset":5122}}}],"position":{"start":{"line":154,"column":1,"offset":5093},"end":{"line":154,"column":30,"offset":5122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":156,"column":3,"offset":5128},"end":{"line":156,"column":107,"offset":5232}}}],"position":{"start":{"line":156,"column":3,"offset":5128},"end":{"line":156,"column":107,"offset":5232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":157,"column":7,"offset":5240},"end":{"line":157,"column":120,"offset":5353}}}],"position":{"start":{"line":157,"column":5,"offset":5238},"end":{"line":157,"column":120,"offset":5353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":158,"column":7,"offset":5361},"end":{"line":158,"column":53,"offset":5407}}},{"type":"text","value":"(","position":{"start":{"line":158,"column":53,"offset":5407},"end":{"line":158,"column":55,"offset":5409}}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":158,"column":55,"offset":5409},"end":{"line":158,"column":78,"offset":5432}}},{"type":"text","value":")","position":{"start":{"line":158,"column":78,"offset":5432},"end":{"line":158,"column":80,"offset":5434}}}],"position":{"start":{"line":158,"column":5,"offset":5359},"end":{"line":158,"column":80,"offset":5434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":159,"column":7,"offset":5442},"end":{"line":159,"column":87,"offset":5522}}}],"position":{"start":{"line":159,"column":5,"offset":5440},"end":{"line":159,"column":87,"offset":5522}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":5,"offset":5238},"end":{"line":159,"column":87,"offset":5522}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5126},"end":{"line":159,"column":87,"offset":5522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":160,"column":3,"offset":5526},"end":{"line":160,"column":89,"offset":5612}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log"}],"position":{"start":{"line":160,"column":89,"offset":5612},"end":{"line":160,"column":102,"offset":5625}}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":160,"column":102,"offset":5625},"end":{"line":160,"column":133,"offset":5656}}}],"position":{"start":{"line":160,"column":1,"offset":5524},"end":{"line":160,"column":133,"offset":5656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":161,"column":5,"offset":5662},"end":{"line":161,"column":31,"offset":5688}}}],"position":{"start":{"line":161,"column":3,"offset":5660},"end":{"line":161,"column":31,"offset":5688}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":3,"offset":5660},"end":{"line":161,"column":31,"offset":5688}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":1,"offset":5658},"end":{"line":161,"column":31,"offset":5688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":162,"column":3,"offset":5692},"end":{"line":162,"column":131,"offset":5820}}}],"position":{"start":{"line":162,"column":1,"offset":5690},"end":{"line":162,"column":131,"offset":5820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5126},"end":{"line":162,"column":131,"offset":5820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n"}],"position":{"start":{"line":164,"column":1,"offset":5824},"end":{"line":178,"column":4,"offset":6178}}}],"position":{"start":{"line":164,"column":1,"offset":5824},"end":{"line":178,"column":4,"offset":6178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":180,"column":1,"offset":6182},"end":{"line":180,"column":44,"offset":6225}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":44,"offset":6225},"end":{"line":180,"column":46,"offset":6227}}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":180,"column":46,"offset":6227},"end":{"line":180,"column":71,"offset":6252}}},{"type":"text","value":")","position":{"start":{"line":180,"column":71,"offset":6252},"end":{"line":180,"column":73,"offset":6254}}},{"type":"text","value":" { return Math.max","position":{"start":{"line":180,"column":73,"offset":6254},"end":{"line":180,"column":91,"offset":6272}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":91,"offset":6272},"end":{"line":180,"column":93,"offset":6274}}},{"type":"text","value":"callback1","position":{"start":{"line":180,"column":93,"offset":6274},"end":{"line":180,"column":102,"offset":6283}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":102,"offset":6283},"end":{"line":180,"column":104,"offset":6285}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":104,"offset":6285},"end":{"line":180,"column":107,"offset":6288}}},{"type":"text","value":")","position":{"start":{"line":180,"column":107,"offset":6288},"end":{"line":180,"column":109,"offset":6290}}},{"type":"text","value":", callback2","position":{"start":{"line":180,"column":109,"offset":6290},"end":{"line":180,"column":120,"offset":6301}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":120,"offset":6301},"end":{"line":180,"column":122,"offset":6303}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":122,"offset":6303},"end":{"line":180,"column":125,"offset":6306}}},{"type":"text","value":")","position":{"start":{"line":180,"column":125,"offset":6306},"end":{"line":180,"column":127,"offset":6308}}},{"type":"text","value":")","position":{"start":{"line":180,"column":127,"offset":6308},"end":{"line":180,"column":129,"offset":6310}}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":180,"column":129,"offset":6310},"end":{"line":180,"column":180,"offset":6361}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":180,"offset":6361},"end":{"line":180,"column":182,"offset":6363}}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":180,"column":182,"offset":6363},"end":{"line":180,"column":195,"offset":6376}}},{"type":"text","value":")","position":{"start":{"line":180,"column":195,"offset":6376},"end":{"line":180,"column":197,"offset":6378}}},{"type":"text","value":" =","position":{"start":{"line":180,"column":197,"offset":6378},"end":{"line":180,"column":199,"offset":6380}}},{"type":"text","value":">","position":{"start":{"line":180,"column":199,"offset":6380},"end":{"line":180,"column":203,"offset":6384}}},{"type":"text","value":" Math.max","position":{"start":{"line":180,"column":203,"offset":6384},"end":{"line":180,"column":212,"offset":6393}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":212,"offset":6393},"end":{"line":180,"column":214,"offset":6395}}},{"type":"text","value":"cb1","position":{"start":{"line":180,"column":214,"offset":6395},"end":{"line":180,"column":217,"offset":6398}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":217,"offset":6398},"end":{"line":180,"column":219,"offset":6400}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":219,"offset":6400},"end":{"line":180,"column":222,"offset":6403}}},{"type":"text","value":")","position":{"start":{"line":180,"column":222,"offset":6403},"end":{"line":180,"column":224,"offset":6405}}},{"type":"text","value":", cb2","position":{"start":{"line":180,"column":224,"offset":6405},"end":{"line":180,"column":229,"offset":6410}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":229,"offset":6410},"end":{"line":180,"column":231,"offset":6412}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":231,"offset":6412},"end":{"line":180,"column":234,"offset":6415}}},{"type":"text","value":")","position":{"start":{"line":180,"column":234,"offset":6415},"end":{"line":180,"column":236,"offset":6417}}},{"type":"text","value":")","position":{"start":{"line":180,"column":236,"offset":6417},"end":{"line":180,"column":238,"offset":6419}}},{"type":"text","value":";","position":{"start":{"line":180,"column":238,"offset":6419},"end":{"line":180,"column":239,"offset":6420}}}],"position":{"start":{"line":180,"column":1,"offset":6182},"end":{"line":180,"column":239,"offset":6420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```js\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n"}],"position":{"start":{"line":182,"column":1,"offset":6424},"end":{"line":203,"column":4,"offset":7096}}}],"position":{"start":{"line":182,"column":1,"offset":6424},"end":{"line":203,"column":4,"offset":7096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":205,"column":3,"offset":7102},"end":{"line":205,"column":125,"offset":7224}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#filter"}],"position":{"start":{"line":205,"column":125,"offset":7224},"end":{"line":205,"column":139,"offset":7238}}},{"type":"text","value":".","position":{"start":{"line":205,"column":139,"offset":7238},"end":{"line":205,"column":140,"offset":7239}}}],"position":{"start":{"line":205,"column":3,"offset":7102},"end":{"line":205,"column":140,"offset":7239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n"}],"position":{"start":{"line":207,"column":5,"offset":7247},"end":{"line":216,"column":8,"offset":7513}}}],"position":{"start":{"line":207,"column":5,"offset":7247},"end":{"line":216,"column":8,"offset":7513}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7100},"end":{"line":217,"column":1,"offset":7515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":218,"column":3,"offset":7519},"end":{"line":218,"column":124,"offset":7640}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#every"}],"position":{"start":{"line":218,"column":124,"offset":7640},"end":{"line":218,"column":137,"offset":7653}}},{"type":"text","value":".","position":{"start":{"line":218,"column":137,"offset":7653},"end":{"line":218,"column":138,"offset":7654}}}],"position":{"start":{"line":218,"column":3,"offset":7519},"end":{"line":218,"column":138,"offset":7654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":220,"column":5,"offset":7662},"end":{"line":238,"column":8,"offset":8165}}}],"position":{"start":{"line":220,"column":5,"offset":7662},"end":{"line":238,"column":8,"offset":8165}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":7517},"end":{"line":238,"column":8,"offset":8165}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7100},"end":{"line":238,"column":8,"offset":8165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":240,"column":5,"offset":8173},"end":{"line":240,"column":26,"offset":8194}}}],"position":{"start":{"line":240,"column":1,"offset":8169},"end":{"line":240,"column":26,"offset":8194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":242,"column":3,"offset":8200},"end":{"line":242,"column":35,"offset":8232}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":242,"column":35,"offset":8232},"end":{"line":242,"column":42,"offset":8239}}},{"type":"text","value":", ","position":{"start":{"line":242,"column":42,"offset":8239},"end":{"line":242,"column":44,"offset":8241}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":242,"column":44,"offset":8241},"end":{"line":242,"column":49,"offset":8246}}},{"type":"text","value":", and ","position":{"start":{"line":242,"column":49,"offset":8246},"end":{"line":242,"column":55,"offset":8252}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":242,"column":55,"offset":8252},"end":{"line":242,"column":60,"offset":8257}}},{"type":"text","value":" declarations","position":{"start":{"line":242,"column":60,"offset":8257},"end":{"line":242,"column":73,"offset":8270}}}],"position":{"start":{"line":242,"column":3,"offset":8200},"end":{"line":242,"column":73,"offset":8270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":243,"column":7,"offset":8278},"end":{"line":243,"column":14,"offset":8285}}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":243,"column":14,"offset":8285},"end":{"line":243,"column":58,"offset":8329}}}],"position":{"start":{"line":243,"column":5,"offset":8276},"end":{"line":243,"column":58,"offset":8329}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":244,"column":7,"offset":8337},"end":{"line":244,"column":12,"offset":8342}}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":244,"column":12,"offset":8342},"end":{"line":244,"column":53,"offset":8383}}}],"position":{"start":{"line":244,"column":5,"offset":8335},"end":{"line":244,"column":53,"offset":8383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":245,"column":7,"offset":8391},"end":{"line":245,"column":12,"offset":8396}}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":245,"column":12,"offset":8396},"end":{"line":245,"column":123,"offset":8507}}}],"position":{"start":{"line":245,"column":5,"offset":8389},"end":{"line":245,"column":123,"offset":8507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":246,"column":7,"offset":8515},"end":{"line":246,"column":97,"offset":8605}}}],"position":{"start":{"line":246,"column":5,"offset":8513},"end":{"line":246,"column":97,"offset":8605}}},{"type":"text","value":"\n"}],"position":{"start":{"line":243,"column":5,"offset":8276},"end":{"line":246,"column":97,"offset":8605}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8198},"end":{"line":246,"column":97,"offset":8605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":247,"column":3,"offset":8609},"end":{"line":247,"column":34,"offset":8640}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":247,"column":34,"offset":8640},"end":{"line":247,"column":41,"offset":8647}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":41,"offset":8647},"end":{"line":247,"column":43,"offset":8649}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":247,"column":43,"offset":8649},"end":{"line":247,"column":48,"offset":8654}}},{"type":"text","value":", and ","position":{"start":{"line":247,"column":48,"offset":8654},"end":{"line":247,"column":54,"offset":8660}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":247,"column":54,"offset":8660},"end":{"line":247,"column":59,"offset":8665}}},{"type":"text","value":" declarations","position":{"start":{"line":247,"column":59,"offset":8665},"end":{"line":247,"column":72,"offset":8678}}}],"position":{"start":{"line":247,"column":3,"offset":8609},"end":{"line":247,"column":72,"offset":8678}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":248,"column":7,"offset":8686},"end":{"line":248,"column":12,"offset":8691}}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":248,"column":12,"offset":8691},"end":{"line":248,"column":93,"offset":8772}}},{"type":"text","value":"(","position":{"start":{"line":248,"column":93,"offset":8772},"end":{"line":248,"column":95,"offset":8774}}},{"type":"text","value":"but not assignment","position":{"start":{"line":248,"column":95,"offset":8774},"end":{"line":248,"column":113,"offset":8792}}},{"type":"text","value":")","position":{"start":{"line":248,"column":113,"offset":8792},"end":{"line":248,"column":115,"offset":8794}}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":248,"column":115,"offset":8794},"end":{"line":248,"column":128,"offset":8807}}}],"position":{"start":{"line":248,"column":7,"offset":8686},"end":{"line":248,"column":128,"offset":8807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":249,"column":11,"offset":8819},"end":{"line":249,"column":83,"offset":8891}}}],"position":{"start":{"line":249,"column":9,"offset":8817},"end":{"line":249,"column":83,"offset":8891}}},{"type":"text","value":"\n"}],"position":{"start":{"line":249,"column":9,"offset":8817},"end":{"line":249,"column":83,"offset":8891}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8684},"end":{"line":249,"column":83,"offset":8891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":250,"column":7,"offset":8899},"end":{"line":250,"column":12,"offset":8904}}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":250,"column":12,"offset":8904},"end":{"line":250,"column":64,"offset":8956}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":250,"column":64,"offset":8956},"end":{"line":250,"column":69,"offset":8961}}},{"type":"text","value":" or ","position":{"start":{"line":250,"column":69,"offset":8961},"end":{"line":250,"column":73,"offset":8965}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":250,"column":73,"offset":8965},"end":{"line":250,"column":80,"offset":8972}}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":250,"column":80,"offset":8972},"end":{"line":250,"column":141,"offset":9033}}}],"position":{"start":{"line":250,"column":5,"offset":8897},"end":{"line":250,"column":141,"offset":9033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":251,"column":7,"offset":9041},"end":{"line":251,"column":14,"offset":9048}}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":251,"column":14,"offset":9048},"end":{"line":251,"column":153,"offset":9187}}}],"position":{"start":{"line":251,"column":5,"offset":9039},"end":{"line":251,"column":153,"offset":9187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":252,"column":7,"offset":9195},"end":{"line":252,"column":82,"offset":9270}}}],"position":{"start":{"line":252,"column":5,"offset":9193},"end":{"line":252,"column":82,"offset":9270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":253,"column":7,"offset":9278},"end":{"line":253,"column":121,"offset":9392}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":253,"column":121,"offset":9392},"end":{"line":253,"column":132,"offset":9403}}},{"type":"text","value":" like ","position":{"start":{"line":253,"column":132,"offset":9403},"end":{"line":253,"column":138,"offset":9409}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":253,"column":138,"offset":9409},"end":{"line":253,"column":143,"offset":9414}}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":253,"column":143,"offset":9414},"end":{"line":253,"column":248,"offset":9519}}}],"position":{"start":{"line":253,"column":5,"offset":9276},"end":{"line":253,"column":248,"offset":9519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":254,"column":7,"offset":9527},"end":{"line":254,"column":25,"offset":9545}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":254,"column":25,"offset":9545},"end":{"line":254,"column":30,"offset":9550}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":30,"offset":9550},"end":{"line":254,"column":34,"offset":9554}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":254,"column":34,"offset":9554},"end":{"line":254,"column":39,"offset":9559}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":39,"offset":9559},"end":{"line":254,"column":43,"offset":9563}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":254,"column":43,"offset":9563},"end":{"line":254,"column":50,"offset":9570}}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":254,"column":50,"offset":9570},"end":{"line":254,"column":111,"offset":9631}}}],"position":{"start":{"line":254,"column":7,"offset":9527},"end":{"line":254,"column":111,"offset":9631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":255,"column":11,"offset":9643},"end":{"line":255,"column":86,"offset":9718}}},{"type":"text","value":"(","position":{"start":{"line":255,"column":86,"offset":9718},"end":{"line":255,"column":88,"offset":9720}}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":255,"column":88,"offset":9720},"end":{"line":255,"column":146,"offset":9778}}},{"type":"text","value":")","position":{"start":{"line":255,"column":146,"offset":9778},"end":{"line":255,"column":148,"offset":9780}}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":255,"column":148,"offset":9780},"end":{"line":255,"column":240,"offset":9872}}}],"position":{"start":{"line":255,"column":9,"offset":9641},"end":{"line":255,"column":240,"offset":9872}}},{"type":"text","value":"\n"}],"position":{"start":{"line":255,"column":9,"offset":9641},"end":{"line":255,"column":240,"offset":9872}}},{"type":"text","value":"\n"}],"position":{"start":{"line":254,"column":5,"offset":9525},"end":{"line":255,"column":240,"offset":9872}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8684},"end":{"line":255,"column":240,"offset":9872}}},{"type":"text","value":"\n"}],"position":{"start":{"line":247,"column":1,"offset":8607},"end":{"line":255,"column":240,"offset":9872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":256,"column":3,"offset":9876},"end":{"line":256,"column":110,"offset":9983}}}],"position":{"start":{"line":256,"column":3,"offset":9876},"end":{"line":256,"column":110,"offset":9983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":257,"column":7,"offset":9991},"end":{"line":257,"column":98,"offset":10082}}}],"position":{"start":{"line":257,"column":5,"offset":9989},"end":{"line":257,"column":98,"offset":10082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":258,"column":7,"offset":10090},"end":{"line":258,"column":42,"offset":10125}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"window"}],"position":{"start":{"line":258,"column":42,"offset":10125},"end":{"line":258,"column":50,"offset":10133}}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":258,"column":50,"offset":10133},"end":{"line":258,"column":81,"offset":10164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":258,"column":81,"offset":10164},"end":{"line":258,"column":89,"offset":10172}}},{"type":"text","value":" object in Node.js","position":{"start":{"line":258,"column":89,"offset":10172},"end":{"line":258,"column":107,"offset":10190}}}],"position":{"start":{"line":258,"column":7,"offset":10090},"end":{"line":258,"column":107,"offset":10190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":259,"column":11,"offset":10202},"end":{"line":259,"column":97,"offset":10288}}}],"position":{"start":{"line":259,"column":9,"offset":10200},"end":{"line":259,"column":97,"offset":10288}}},{"type":"text","value":"\n"}],"position":{"start":{"line":259,"column":9,"offset":10200},"end":{"line":259,"column":97,"offset":10288}}},{"type":"text","value":"\n"}],"position":{"start":{"line":258,"column":5,"offset":10088},"end":{"line":259,"column":97,"offset":10288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":260,"column":7,"offset":10296},"end":{"line":260,"column":80,"offset":10369}}}],"position":{"start":{"line":260,"column":7,"offset":10296},"end":{"line":260,"column":80,"offset":10369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":261,"column":11,"offset":10381},"end":{"line":261,"column":57,"offset":10427}}}],"position":{"start":{"line":261,"column":9,"offset":10379},"end":{"line":261,"column":57,"offset":10427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":262,"column":11,"offset":10439},"end":{"line":262,"column":157,"offset":10585}}},{"type":"text","value":"(","position":{"start":{"line":262,"column":157,"offset":10585},"end":{"line":262,"column":159,"offset":10587}}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":262,"column":159,"offset":10587},"end":{"line":262,"column":182,"offset":10610}}},{"type":"text","value":")","position":{"start":{"line":262,"column":182,"offset":10610},"end":{"line":262,"column":184,"offset":10612}}}],"position":{"start":{"line":262,"column":9,"offset":10437},"end":{"line":262,"column":184,"offset":10612}}},{"type":"text","value":"\n"}],"position":{"start":{"line":261,"column":9,"offset":10379},"end":{"line":262,"column":184,"offset":10612}}},{"type":"text","value":"\n"}],"position":{"start":{"line":260,"column":5,"offset":10294},"end":{"line":262,"column":184,"offset":10612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"for blocks ","position":{"start":{"line":263,"column":7,"offset":10620},"end":{"line":263,"column":18,"offset":10631}}},{"type":"text","value":"(","position":{"start":{"line":263,"column":18,"offset":10631},"end":{"line":263,"column":20,"offset":10633}}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":263,"column":20,"offset":10633},"end":{"line":263,"column":44,"offset":10657}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{}"}],"position":{"start":{"line":263,"column":44,"offset":10657},"end":{"line":263,"column":48,"offset":10661}}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":263,"column":48,"offset":10661},"end":{"line":263,"column":72,"offset":10685}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}],"position":{"start":{"line":263,"column":72,"offset":10685},"end":{"line":263,"column":77,"offset":10690}}},{"type":"text","value":" loops","position":{"start":{"line":263,"column":77,"offset":10690},"end":{"line":263,"column":83,"offset":10696}}},{"type":"text","value":")","position":{"start":{"line":263,"column":83,"offset":10696},"end":{"line":263,"column":85,"offset":10698}}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":263,"column":85,"offset":10698},"end":{"line":263,"column":116,"offset":10729}}}],"position":{"start":{"line":263,"column":5,"offset":10618},"end":{"line":263,"column":116,"offset":10729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":264,"column":7,"offset":10737},"end":{"line":264,"column":71,"offset":10801}}}],"position":{"start":{"line":264,"column":7,"offset":10737},"end":{"line":264,"column":71,"offset":10801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":265,"column":11,"offset":10813},"end":{"line":265,"column":153,"offset":10955}}}],"position":{"start":{"line":265,"column":9,"offset":10811},"end":{"line":265,"column":153,"offset":10955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":266,"column":11,"offset":10967},"end":{"line":266,"column":61,"offset":11017}}}],"position":{"start":{"line":266,"column":9,"offset":10965},"end":{"line":266,"column":61,"offset":11017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":267,"column":11,"offset":11029},"end":{"line":267,"column":68,"offset":11086}}}],"position":{"start":{"line":267,"column":9,"offset":11027},"end":{"line":267,"column":68,"offset":11086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":265,"column":9,"offset":10811},"end":{"line":267,"column":68,"offset":11086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":264,"column":5,"offset":10735},"end":{"line":267,"column":68,"offset":11086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":257,"column":5,"offset":9989},"end":{"line":267,"column":68,"offset":11086}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":9874},"end":{"line":267,"column":68,"offset":11086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":268,"column":3,"offset":11090},"end":{"line":268,"column":27,"offset":11114}}}],"position":{"start":{"line":268,"column":3,"offset":11090},"end":{"line":268,"column":27,"offset":11114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":270,"column":5,"offset":11122},"end":{"line":270,"column":7,"offset":11124}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":7,"offset":11124},"end":{"line":270,"column":9,"offset":11126}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":9,"offset":11126},"end":{"line":270,"column":11,"offset":11128}}},{"type":"text","value":"javascript","position":{"start":{"line":270,"column":11,"offset":11128},"end":{"line":270,"column":21,"offset":11138}}}],"position":{"start":{"line":270,"column":5,"offset":11122},"end":{"line":270,"column":21,"offset":11138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":272,"column":5,"offset":11146},"end":{"line":272,"column":25,"offset":11166}}},{"type":"text","value":"(","position":{"start":{"line":272,"column":25,"offset":11166},"end":{"line":272,"column":27,"offset":11168}}},{"type":"text","value":"param1, param2","position":{"start":{"line":272,"column":27,"offset":11168},"end":{"line":272,"column":41,"offset":11182}}},{"type":"text","value":")","position":{"start":{"line":272,"column":41,"offset":11182},"end":{"line":272,"column":43,"offset":11184}}},{"type":"text","value":" =","position":{"start":{"line":272,"column":43,"offset":11184},"end":{"line":272,"column":45,"offset":11186}}},{"type":"text","value":">","position":{"start":{"line":272,"column":45,"offset":11186},"end":{"line":272,"column":49,"offset":11190}}},{"type":"text","value":" {","position":{"start":{"line":272,"column":49,"offset":11190},"end":{"line":272,"column":51,"offset":11192}}}],"position":{"start":{"line":272,"column":5,"offset":11146},"end":{"line":272,"column":51,"offset":11192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":274,"column":5,"offset":11200},"end":{"line":274,"column":31,"offset":11226}}}],"position":{"start":{"line":274,"column":5,"offset":11200},"end":{"line":274,"column":31,"offset":11226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return sum;","position":{"start":{"line":276,"column":5,"offset":11234},"end":{"line":276,"column":16,"offset":11245}}}],"position":{"start":{"line":276,"column":5,"offset":11234},"end":{"line":276,"column":16,"offset":11245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":278,"column":5,"offset":11253},"end":{"line":278,"column":6,"offset":11254}}}],"position":{"start":{"line":278,"column":5,"offset":11253},"end":{"line":278,"column":6,"offset":11254}}},{"type":"text","value":"\n"}],"position":{"start":{"line":268,"column":1,"offset":11088},"end":{"line":278,"column":6,"offset":11254}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8198},"end":{"line":278,"column":6,"offset":11254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":280,"column":1,"offset":11258},"end":{"line":280,"column":84,"offset":11341}}},{"type":"text","value":">","position":{"start":{"line":280,"column":84,"offset":11341},"end":{"line":280,"column":88,"offset":11345}}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":280,"column":88,"offset":11345},"end":{"line":280,"column":118,"offset":11375}}}],"position":{"start":{"line":280,"column":1,"offset":11258},"end":{"line":280,"column":118,"offset":11375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":282,"column":1,"offset":11379},"end":{"line":282,"column":96,"offset":11474}}},{"type":"text","value":">","position":{"start":{"line":282,"column":96,"offset":11474},"end":{"line":282,"column":100,"offset":11478}}},{"type":"text","value":" param + 1;","position":{"start":{"line":282,"column":100,"offset":11478},"end":{"line":282,"column":111,"offset":11489}}}],"position":{"start":{"line":282,"column":1,"offset":11379},"end":{"line":282,"column":111,"offset":11489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":284,"column":1,"offset":11493},"end":{"line":284,"column":103,"offset":11595}}},{"type":"text","value":">","position":{"start":{"line":284,"column":103,"offset":11595},"end":{"line":284,"column":107,"offset":11599}}},{"type":"text","value":" param + 1;","position":{"start":{"line":284,"column":107,"offset":11599},"end":{"line":284,"column":118,"offset":11610}}}],"position":{"start":{"line":284,"column":1,"offset":11493},"end":{"line":284,"column":118,"offset":11610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":286,"column":1,"offset":11614},"end":{"line":286,"column":3,"offset":11616}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":3,"offset":11616},"end":{"line":286,"column":5,"offset":11618}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":5,"offset":11618},"end":{"line":286,"column":7,"offset":11620}}}],"position":{"start":{"line":286,"column":1,"offset":11614},"end":{"line":286,"column":7,"offset":11620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":288,"column":3,"offset":11626},"end":{"line":288,"column":48,"offset":11671}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":288,"column":48,"offset":11671},"end":{"line":288,"column":54,"offset":11677}}},{"type":"text","value":" without executing the code","position":{"start":{"line":288,"column":54,"offset":11677},"end":{"line":288,"column":81,"offset":11704}}}],"position":{"start":{"line":288,"column":3,"offset":11626},"end":{"line":288,"column":81,"offset":11704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":290,"column":7,"offset":11714},"end":{"line":290,"column":83,"offset":11790}}}],"position":{"start":{"line":290,"column":5,"offset":11712},"end":{"line":290,"column":83,"offset":11790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":291,"column":7,"offset":11798},"end":{"line":291,"column":73,"offset":11864}}},{"type":"text","value":"(","position":{"start":{"line":291,"column":73,"offset":11864},"end":{"line":291,"column":75,"offset":11866}}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":291,"column":75,"offset":11866},"end":{"line":291,"column":109,"offset":11900}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":291,"column":109,"offset":11900},"end":{"line":291,"column":124,"offset":11915}}},{"type":"text","value":")","position":{"start":{"line":291,"column":124,"offset":11915},"end":{"line":291,"column":126,"offset":11917}}}],"position":{"start":{"line":291,"column":5,"offset":11796},"end":{"line":291,"column":126,"offset":11917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":292,"column":7,"offset":11925},"end":{"line":292,"column":147,"offset":12065}}}],"position":{"start":{"line":292,"column":5,"offset":11923},"end":{"line":292,"column":147,"offset":12065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":293,"column":7,"offset":12073},"end":{"line":293,"column":69,"offset":12135}}}],"position":{"start":{"line":293,"column":7,"offset":12073},"end":{"line":293,"column":69,"offset":12135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":295,"column":9,"offset":12147},"end":{"line":295,"column":11,"offset":12149}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":11,"offset":12149},"end":{"line":295,"column":13,"offset":12151}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":13,"offset":12151},"end":{"line":295,"column":15,"offset":12153}}},{"type":"text","value":"javascript","position":{"start":{"line":295,"column":15,"offset":12153},"end":{"line":295,"column":25,"offset":12163}}}],"position":{"start":{"line":295,"column":9,"offset":12147},"end":{"line":295,"column":25,"offset":12163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let obj = {","position":{"start":{"line":297,"column":9,"offset":12175},"end":{"line":297,"column":20,"offset":12186}}}],"position":{"start":{"line":297,"column":9,"offset":12175},"end":{"line":297,"column":20,"offset":12186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":299,"column":9,"offset":12198},"end":{"line":299,"column":27,"offset":12216}}}],"position":{"start":{"line":299,"column":9,"offset":12198},"end":{"line":299,"column":27,"offset":12216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":301,"column":9,"offset":12228},"end":{"line":301,"column":31,"offset":12250}}},{"type":"text","value":"(","position":{"start":{"line":301,"column":31,"offset":12250},"end":{"line":301,"column":33,"offset":12252}}},{"type":"text","value":")","position":{"start":{"line":301,"column":33,"offset":12252},"end":{"line":301,"column":35,"offset":12254}}},{"type":"text","value":" {","position":{"start":{"line":301,"column":35,"offset":12254},"end":{"line":301,"column":37,"offset":12256}}}],"position":{"start":{"line":301,"column":9,"offset":12228},"end":{"line":301,"column":37,"offset":12256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return this.name;","position":{"start":{"line":303,"column":9,"offset":12268},"end":{"line":303,"column":26,"offset":12285}}}],"position":{"start":{"line":303,"column":9,"offset":12268},"end":{"line":303,"column":26,"offset":12285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":305,"column":9,"offset":12297},"end":{"line":305,"column":72,"offset":12360}}}],"position":{"start":{"line":305,"column":9,"offset":12297},"end":{"line":305,"column":72,"offset":12360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":307,"column":9,"offset":12372},"end":{"line":307,"column":11,"offset":12374}}}],"position":{"start":{"line":307,"column":9,"offset":12372},"end":{"line":307,"column":11,"offset":12374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":5,"offset":12071},"end":{"line":307,"column":11,"offset":12374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":5,"offset":11712},"end":{"line":307,"column":11,"offset":12374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11624},"end":{"line":307,"column":11,"offset":12374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11624},"end":{"line":307,"column":11,"offset":12374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":309,"column":1,"offset":12378},"end":{"line":309,"column":4,"offset":12381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":311,"column":1,"offset":12385},"end":{"line":311,"column":16,"offset":12400}}},{"type":"text","value":"(","position":{"start":{"line":311,"column":16,"offset":12400},"end":{"line":311,"column":18,"offset":12402}}},{"type":"text","value":")","position":{"start":{"line":311,"column":18,"offset":12402},"end":{"line":311,"column":20,"offset":12404}}},{"type":"text","value":" =","position":{"start":{"line":311,"column":20,"offset":12404},"end":{"line":311,"column":22,"offset":12406}}},{"type":"text","value":">","position":{"start":{"line":311,"column":22,"offset":12406},"end":{"line":311,"column":26,"offset":12410}}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":311,"column":26,"offset":12410},"end":{"line":311,"column":212,"offset":12596}}}],"position":{"start":{"line":311,"column":1,"offset":12385},"end":{"line":311,"column":212,"offset":12596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n"}],"position":{"start":{"line":313,"column":1,"offset":12600},"end":{"line":352,"column":4,"offset":15752}}}],"position":{"start":{"line":313,"column":1,"offset":12600},"end":{"line":352,"column":4,"offset":15752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":354,"column":1,"offset":15756},"end":{"line":354,"column":2,"offset":15757}}}],"position":{"start":{"line":354,"column":1,"offset":15756},"end":{"line":354,"column":2,"offset":15757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n---\n\n\n```js\n\n\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n"}],"position":{"start":{"line":356,"column":1,"offset":15761},"end":{"line":422,"column":4,"offset":18780}}}],"position":{"start":{"line":356,"column":1,"offset":15761},"end":{"line":422,"column":4,"offset":18780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":424,"column":3,"offset":18786},"end":{"line":424,"column":35,"offset":18818}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":424,"column":35,"offset":18818},"end":{"line":424,"column":41,"offset":18824}}},{"type":"text","value":" on an object literal","position":{"start":{"line":424,"column":41,"offset":18824},"end":{"line":424,"column":62,"offset":18845}}}],"position":{"start":{"line":424,"column":3,"offset":18786},"end":{"line":424,"column":62,"offset":18845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"when we use ","position":{"start":{"line":425,"column":7,"offset":18853},"end":{"line":425,"column":19,"offset":18865}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":425,"column":19,"offset":18865},"end":{"line":425,"column":25,"offset":18871}}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":425,"column":25,"offset":18871},"end":{"line":425,"column":91,"offset":18937}}}],"position":{"start":{"line":425,"column":7,"offset":18853},"end":{"line":425,"column":91,"offset":18937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":426,"column":11,"offset":18949},"end":{"line":426,"column":108,"offset":19046}}}],"position":{"start":{"line":426,"column":9,"offset":18947},"end":{"line":426,"column":108,"offset":19046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":427,"column":11,"offset":19058},"end":{"line":427,"column":37,"offset":19084}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.method(args)"}],"position":{"start":{"line":427,"column":37,"offset":19084},"end":{"line":427,"column":58,"offset":19105}}},{"type":"text","value":" ","position":{"start":{"line":427,"column":58,"offset":19105},"end":{"line":427,"column":59,"offset":19106}}},{"type":"text","value":"(","position":{"start":{"line":427,"column":59,"offset":19106},"end":{"line":427,"column":61,"offset":19108}}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":427,"column":61,"offset":19108},"end":{"line":427,"column":89,"offset":19136}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#push"}],"position":{"start":{"line":427,"column":89,"offset":19136},"end":{"line":427,"column":101,"offset":19148}}},{"type":"text","value":", or ","position":{"start":{"line":427,"column":101,"offset":19148},"end":{"line":427,"column":106,"offset":19153}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"String#toUpperCase"}],"position":{"start":{"line":427,"column":106,"offset":19153},"end":{"line":427,"column":126,"offset":19173}}},{"type":"text","value":")","position":{"start":{"line":427,"column":126,"offset":19173},"end":{"line":427,"column":128,"offset":19175}}}],"position":{"start":{"line":427,"column":9,"offset":19056},"end":{"line":427,"column":128,"offset":19175}}},{"type":"text","value":"\n"}],"position":{"start":{"line":426,"column":9,"offset":18947},"end":{"line":427,"column":128,"offset":19175}}},{"type":"text","value":"\n"}],"position":{"start":{"line":425,"column":5,"offset":18851},"end":{"line":427,"column":128,"offset":19175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":428,"column":7,"offset":19183},"end":{"line":428,"column":53,"offset":19229}}}],"position":{"start":{"line":428,"column":5,"offset":19181},"end":{"line":428,"column":53,"offset":19229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":429,"column":7,"offset":19237},"end":{"line":429,"column":85,"offset":19315}}}],"position":{"start":{"line":429,"column":5,"offset":19235},"end":{"line":429,"column":85,"offset":19315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":430,"column":7,"offset":19323},"end":{"line":430,"column":114,"offset":19430}}}],"position":{"start":{"line":430,"column":5,"offset":19321},"end":{"line":430,"column":114,"offset":19430}}},{"type":"text","value":"\n"}],"position":{"start":{"line":425,"column":5,"offset":18851},"end":{"line":430,"column":114,"offset":19430}}},{"type":"text","value":"\n"}],"position":{"start":{"line":424,"column":1,"offset":18784},"end":{"line":430,"column":114,"offset":19430}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":431,"column":3,"offset":19434},"end":{"line":431,"column":24,"offset":19455}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":431,"column":24,"offset":19455},"end":{"line":431,"column":39,"offset":19470}}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":431,"column":39,"offset":19470},"end":{"line":431,"column":85,"offset":19516}}}],"position":{"start":{"line":431,"column":3,"offset":19434},"end":{"line":431,"column":85,"offset":19516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":433,"column":7,"offset":19526},"end":{"line":433,"column":131,"offset":19650}}}],"position":{"start":{"line":433,"column":5,"offset":19524},"end":{"line":433,"column":131,"offset":19650}}},{"type":"text","value":"\n"}],"position":{"start":{"line":433,"column":5,"offset":19524},"end":{"line":433,"column":131,"offset":19650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n"}],"position":{"start":{"line":435,"column":5,"offset":19658},"end":{"line":448,"column":8,"offset":20082}}}],"position":{"start":{"line":435,"column":5,"offset":19658},"end":{"line":448,"column":8,"offset":20082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":450,"column":5,"offset":20090},"end":{"line":450,"column":7,"offset":20092}}},{"type":"text","value":"`","position":{"start":{"line":450,"column":7,"offset":20092},"end":{"line":450,"column":9,"offset":20094}}}],"position":{"start":{"line":450,"column":5,"offset":20090},"end":{"line":450,"column":9,"offset":20094}}},{"type":"text","value":"\n"}],"position":{"start":{"line":431,"column":1,"offset":19432},"end":{"line":450,"column":9,"offset":20094}}},{"type":"text","value":"\n"}],"position":{"start":{"line":424,"column":1,"offset":18784},"end":{"line":450,"column":9,"offset":20094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":452,"column":1,"offset":20098},"end":{"line":452,"column":4,"offset":20101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":454,"column":1,"offset":20105},"end":{"line":454,"column":4,"offset":20108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":456,"column":1,"offset":20112},"end":{"line":483,"column":4,"offset":22079}}}],"position":{"start":{"line":456,"column":1,"offset":20112},"end":{"line":483,"column":4,"offset":22079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":485,"column":3,"offset":22085},"end":{"line":485,"column":58,"offset":22140}}}],"position":{"start":{"line":485,"column":3,"offset":22085},"end":{"line":485,"column":58,"offset":22140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":486,"column":7,"offset":22148},"end":{"line":486,"column":103,"offset":22244}}}],"position":{"start":{"line":486,"column":5,"offset":22146},"end":{"line":486,"column":103,"offset":22244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":487,"column":7,"offset":22252},"end":{"line":487,"column":103,"offset":22348}}}],"position":{"start":{"line":487,"column":5,"offset":22250},"end":{"line":487,"column":103,"offset":22348}}},{"type":"text","value":"\n"}],"position":{"start":{"line":486,"column":5,"offset":22146},"end":{"line":487,"column":103,"offset":22348}}},{"type":"text","value":"\n"}],"position":{"start":{"line":485,"column":1,"offset":22083},"end":{"line":487,"column":103,"offset":22348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":488,"column":3,"offset":22352},"end":{"line":488,"column":53,"offset":22402}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":488,"column":53,"offset":22402},"end":{"line":488,"column":59,"offset":22408}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":488,"column":59,"offset":22408},"end":{"line":488,"column":181,"offset":22530}}}],"position":{"start":{"line":488,"column":3,"offset":22352},"end":{"line":488,"column":181,"offset":22530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n"}],"position":{"start":{"line":490,"column":5,"offset":22538},"end":{"line":500,"column":8,"offset":22796}}}],"position":{"start":{"line":490,"column":5,"offset":22538},"end":{"line":500,"column":8,"offset":22796}}},{"type":"text","value":"\n"}],"position":{"start":{"line":488,"column":1,"offset":22350},"end":{"line":500,"column":8,"offset":22796}}},{"type":"text","value":"\n"}],"position":{"start":{"line":485,"column":1,"offset":22083},"end":{"line":500,"column":8,"offset":22796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":502,"column":1,"offset":22800},"end":{"line":502,"column":29,"offset":22828}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":502,"column":29,"offset":22828},"end":{"line":502,"column":44,"offset":22843}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":502,"column":44,"offset":22843},"end":{"line":502,"column":105,"offset":22904}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":502,"column":105,"offset":22904},"end":{"line":502,"column":111,"offset":22910}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":502,"column":111,"offset":22910},"end":{"line":502,"column":148,"offset":22947}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":502,"column":148,"offset":22947},"end":{"line":502,"column":154,"offset":22953}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":502,"column":154,"offset":22953},"end":{"line":502,"column":274,"offset":23073}}}],"position":{"start":{"line":502,"column":1,"offset":22800},"end":{"line":502,"column":274,"offset":23073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":504,"column":1,"offset":23077},"end":{"line":504,"column":4,"offset":23080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":506,"column":1,"offset":23084},"end":{"line":506,"column":40,"offset":23123}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":40,"offset":23123},"end":{"line":506,"column":42,"offset":23125}}},{"type":"text","value":"sayMeow","position":{"start":{"line":506,"column":42,"offset":23125},"end":{"line":506,"column":49,"offset":23132}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":49,"offset":23132},"end":{"line":506,"column":51,"offset":23134}}},{"type":"text","value":")","position":{"start":{"line":506,"column":51,"offset":23134},"end":{"line":506,"column":53,"offset":23136}}},{"type":"text","value":")","position":{"start":{"line":506,"column":53,"offset":23136},"end":{"line":506,"column":55,"offset":23138}}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":506,"column":55,"offset":23138},"end":{"line":506,"column":98,"offset":23181}}}],"position":{"start":{"line":506,"column":1,"offset":23084},"end":{"line":506,"column":98,"offset":23181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":508,"column":1,"offset":23185},"end":{"line":508,"column":69,"offset":23253}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":508,"column":69,"offset":23253},"end":{"line":508,"column":75,"offset":23259}}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":508,"column":75,"offset":23259},"end":{"line":508,"column":125,"offset":23309}}},{"type":"text","value":"(","position":{"start":{"line":508,"column":125,"offset":23309},"end":{"line":508,"column":127,"offset":23311}}},{"type":"text","value":"cat","position":{"start":{"line":508,"column":127,"offset":23311},"end":{"line":508,"column":130,"offset":23314}}},{"type":"text","value":")","position":{"start":{"line":508,"column":130,"offset":23314},"end":{"line":508,"column":132,"offset":23316}}},{"type":"text","value":";","position":{"start":{"line":508,"column":132,"offset":23316},"end":{"line":508,"column":133,"offset":23317}}}],"position":{"start":{"line":508,"column":1,"offset":23185},"end":{"line":508,"column":133,"offset":23317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundCat","position":{"start":{"line":510,"column":1,"offset":23321},"end":{"line":510,"column":9,"offset":23329}}},{"type":"text","value":"(","position":{"start":{"line":510,"column":9,"offset":23329},"end":{"line":510,"column":11,"offset":23331}}},{"type":"text","value":")","position":{"start":{"line":510,"column":11,"offset":23331},"end":{"line":510,"column":13,"offset":23333}}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":510,"column":13,"offset":23333},"end":{"line":510,"column":31,"offset":23351}}}],"position":{"start":{"line":510,"column":1,"offset":23321},"end":{"line":510,"column":31,"offset":23351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":512,"column":1,"offset":23355},"end":{"line":539,"column":4,"offset":25324}}}],"position":{"start":{"line":512,"column":1,"offset":23355},"end":{"line":539,"column":4,"offset":25324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":541,"column":3,"offset":25330},"end":{"line":541,"column":58,"offset":25385}}}],"position":{"start":{"line":541,"column":3,"offset":25330},"end":{"line":541,"column":58,"offset":25385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":542,"column":7,"offset":25393},"end":{"line":542,"column":103,"offset":25489}}}],"position":{"start":{"line":542,"column":5,"offset":25391},"end":{"line":542,"column":103,"offset":25489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":543,"column":7,"offset":25497},"end":{"line":543,"column":103,"offset":25593}}}],"position":{"start":{"line":543,"column":5,"offset":25495},"end":{"line":543,"column":103,"offset":25593}}},{"type":"text","value":"\n"}],"position":{"start":{"line":542,"column":5,"offset":25391},"end":{"line":543,"column":103,"offset":25593}}},{"type":"text","value":"\n"}],"position":{"start":{"line":541,"column":1,"offset":25328},"end":{"line":543,"column":103,"offset":25593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":544,"column":3,"offset":25597},"end":{"line":544,"column":53,"offset":25647}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":544,"column":53,"offset":25647},"end":{"line":544,"column":59,"offset":25653}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":544,"column":59,"offset":25653},"end":{"line":544,"column":181,"offset":25775}}}],"position":{"start":{"line":544,"column":3,"offset":25597},"end":{"line":544,"column":181,"offset":25775}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":546,"column":5,"offset":25783},"end":{"line":546,"column":7,"offset":25785}}},{"type":"text","value":"`","position":{"start":{"line":546,"column":7,"offset":25785},"end":{"line":546,"column":9,"offset":25787}}},{"type":"text","value":"`","position":{"start":{"line":546,"column":9,"offset":25787},"end":{"line":546,"column":11,"offset":25789}}},{"type":"text","value":"javascript","position":{"start":{"line":546,"column":11,"offset":25789},"end":{"line":546,"column":21,"offset":25799}}}],"position":{"start":{"line":546,"column":5,"offset":25783},"end":{"line":546,"column":21,"offset":25799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let cat = {","position":{"start":{"line":548,"column":5,"offset":25807},"end":{"line":548,"column":16,"offset":25818}}}],"position":{"start":{"line":548,"column":5,"offset":25807},"end":{"line":548,"column":16,"offset":25818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purr: function ","position":{"start":{"line":550,"column":5,"offset":25826},"end":{"line":550,"column":20,"offset":25841}}},{"type":"text","value":"(","position":{"start":{"line":550,"column":20,"offset":25841},"end":{"line":550,"column":22,"offset":25843}}},{"type":"text","value":")","position":{"start":{"line":550,"column":22,"offset":25843},"end":{"line":550,"column":24,"offset":25845}}},{"type":"text","value":" {","position":{"start":{"line":550,"column":24,"offset":25845},"end":{"line":550,"column":26,"offset":25847}}}],"position":{"start":{"line":550,"column":5,"offset":25826},"end":{"line":550,"column":26,"offset":25847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":552,"column":5,"offset":25855},"end":{"line":552,"column":16,"offset":25866}}},{"type":"text","value":"(","position":{"start":{"line":552,"column":16,"offset":25866},"end":{"line":552,"column":18,"offset":25868}}},{"type":"text","value":"\"meow\"","position":{"start":{"line":552,"column":18,"offset":25868},"end":{"line":552,"column":24,"offset":25874}}},{"type":"text","value":")","position":{"start":{"line":552,"column":24,"offset":25874},"end":{"line":552,"column":26,"offset":25876}}},{"type":"text","value":";","position":{"start":{"line":552,"column":26,"offset":25876},"end":{"line":552,"column":27,"offset":25877}}}],"position":{"start":{"line":552,"column":5,"offset":25855},"end":{"line":552,"column":27,"offset":25877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":554,"column":5,"offset":25885},"end":{"line":554,"column":7,"offset":25887}}}],"position":{"start":{"line":554,"column":5,"offset":25885},"end":{"line":554,"column":7,"offset":25887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":556,"column":5,"offset":25895},"end":{"line":556,"column":24,"offset":25914}}},{"type":"text","value":"(","position":{"start":{"line":556,"column":24,"offset":25914},"end":{"line":556,"column":26,"offset":25916}}},{"type":"text","value":")","position":{"start":{"line":556,"column":26,"offset":25916},"end":{"line":556,"column":28,"offset":25918}}},{"type":"text","value":" {","position":{"start":{"line":556,"column":28,"offset":25918},"end":{"line":556,"column":30,"offset":25920}}}],"position":{"start":{"line":556,"column":5,"offset":25895},"end":{"line":556,"column":30,"offset":25920}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this.purr","position":{"start":{"line":558,"column":5,"offset":25928},"end":{"line":558,"column":14,"offset":25937}}},{"type":"text","value":"(","position":{"start":{"line":558,"column":14,"offset":25937},"end":{"line":558,"column":16,"offset":25939}}},{"type":"text","value":")","position":{"start":{"line":558,"column":16,"offset":25939},"end":{"line":558,"column":18,"offset":25941}}},{"type":"text","value":";","position":{"start":{"line":558,"column":18,"offset":25941},"end":{"line":558,"column":19,"offset":25942}}}],"position":{"start":{"line":558,"column":5,"offset":25928},"end":{"line":558,"column":19,"offset":25942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":560,"column":5,"offset":25950},"end":{"line":560,"column":7,"offset":25952}}}],"position":{"start":{"line":560,"column":5,"offset":25950},"end":{"line":560,"column":7,"offset":25952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"};","position":{"start":{"line":562,"column":5,"offset":25960},"end":{"line":562,"column":7,"offset":25962}}}],"position":{"start":{"line":562,"column":5,"offset":25960},"end":{"line":562,"column":7,"offset":25962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":544,"column":1,"offset":25595},"end":{"line":562,"column":7,"offset":25962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":541,"column":1,"offset":25328},"end":{"line":562,"column":7,"offset":25962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":564,"column":1,"offset":25966},"end":{"line":564,"column":18,"offset":25983}}},{"type":"text","value":"(","position":{"start":{"line":564,"column":18,"offset":25983},"end":{"line":564,"column":20,"offset":25985}}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":564,"column":20,"offset":25985},"end":{"line":564,"column":38,"offset":26003}}},{"type":"text","value":")","position":{"start":{"line":564,"column":38,"offset":26003},"end":{"line":564,"column":40,"offset":26005}}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":564,"column":40,"offset":26005},"end":{"line":564,"column":100,"offset":26065}}}],"position":{"start":{"line":564,"column":1,"offset":25966},"end":{"line":564,"column":100,"offset":26065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":566,"column":1,"offset":26069},"end":{"line":566,"column":3,"offset":26071}}},{"type":"text","value":"`","position":{"start":{"line":566,"column":3,"offset":26071},"end":{"line":566,"column":5,"offset":26073}}},{"type":"text","value":"`","position":{"start":{"line":566,"column":5,"offset":26073},"end":{"line":566,"column":7,"offset":26075}}}],"position":{"start":{"line":566,"column":1,"offset":26069},"end":{"line":566,"column":7,"offset":26075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":568,"column":3,"offset":26081},"end":{"line":568,"column":31,"offset":26109}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":568,"column":31,"offset":26109},"end":{"line":568,"column":46,"offset":26124}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":568,"column":46,"offset":26124},"end":{"line":568,"column":107,"offset":26185}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":568,"column":107,"offset":26185},"end":{"line":568,"column":113,"offset":26191}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":568,"column":113,"offset":26191},"end":{"line":568,"column":150,"offset":26228}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":568,"column":150,"offset":26228},"end":{"line":568,"column":156,"offset":26234}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":568,"column":156,"offset":26234},"end":{"line":568,"column":276,"offset":26354}}}],"position":{"start":{"line":568,"column":1,"offset":26079},"end":{"line":568,"column":276,"offset":26354}}},{"type":"text","value":"\n"}],"position":{"start":{"line":568,"column":1,"offset":26079},"end":{"line":568,"column":276,"offset":26354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"POJOs","position":{"start":{"line":570,"column":5,"offset":26362},"end":{"line":570,"column":10,"offset":26367}}}],"position":{"start":{"line":570,"column":1,"offset":26358},"end":{"line":570,"column":10,"offset":26367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":572,"column":6,"offset":26376},"end":{"line":572,"column":58,"offset":26428}}}],"position":{"start":{"line":572,"column":1,"offset":26371},"end":{"line":572,"column":58,"offset":26428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":574,"column":1,"offset":26432},"end":{"line":574,"column":240,"offset":26671}}}],"position":{"start":{"line":574,"column":1,"offset":26432},"end":{"line":574,"column":240,"offset":26671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":576,"column":3,"offset":26677},"end":{"line":576,"column":22,"offset":26696}}}],"position":{"start":{"line":576,"column":1,"offset":26675},"end":{"line":576,"column":22,"offset":26696}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":577,"column":3,"offset":26700},"end":{"line":577,"column":19,"offset":26716}}}],"position":{"start":{"line":577,"column":1,"offset":26698},"end":{"line":577,"column":19,"offset":26716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":578,"column":3,"offset":26720},"end":{"line":578,"column":24,"offset":26741}}}],"position":{"start":{"line":578,"column":1,"offset":26718},"end":{"line":578,"column":24,"offset":26741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":579,"column":3,"offset":26745},"end":{"line":579,"column":21,"offset":26763}}}],"position":{"start":{"line":579,"column":1,"offset":26743},"end":{"line":579,"column":21,"offset":26763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":580,"column":3,"offset":26767},"end":{"line":580,"column":21,"offset":26785}}}],"position":{"start":{"line":580,"column":1,"offset":26765},"end":{"line":580,"column":21,"offset":26785}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":581,"column":3,"offset":26789},"end":{"line":581,"column":20,"offset":26806}}}],"position":{"start":{"line":581,"column":1,"offset":26787},"end":{"line":581,"column":20,"offset":26806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":582,"column":3,"offset":26810},"end":{"line":582,"column":21,"offset":26828}}}],"position":{"start":{"line":582,"column":1,"offset":26808},"end":{"line":582,"column":21,"offset":26828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":583,"column":3,"offset":26832},"end":{"line":583,"column":23,"offset":26852}}}],"position":{"start":{"line":583,"column":1,"offset":26830},"end":{"line":583,"column":23,"offset":26852}}},{"type":"text","value":"\n"}],"position":{"start":{"line":576,"column":1,"offset":26675},"end":{"line":583,"column":23,"offset":26852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":585,"column":6,"offset":26861},"end":{"line":585,"column":35,"offset":26890}}},{"type":"text","value":"[","position":{"start":{"line":585,"column":35,"offset":26890},"end":{"line":585,"column":37,"offset":26892}}},{"type":"text","value":"]","position":{"start":{"line":585,"column":37,"offset":26892},"end":{"line":585,"column":39,"offset":26894}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":585,"column":39,"offset":26894},"end":{"line":585,"column":74,"offset":26929}}}],"position":{"start":{"line":585,"column":1,"offset":26856},"end":{"line":585,"column":74,"offset":26929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n"}],"position":{"start":{"line":587,"column":1,"offset":26933},"end":{"line":597,"column":4,"offset":27283}}}],"position":{"start":{"line":587,"column":1,"offset":26933},"end":{"line":597,"column":4,"offset":27283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":599,"column":6,"offset":27292},"end":{"line":599,"column":72,"offset":27358}}}],"position":{"start":{"line":599,"column":1,"offset":27287},"end":{"line":599,"column":72,"offset":27358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n"}],"position":{"start":{"line":601,"column":1,"offset":27362},"end":{"line":608,"column":4,"offset":27549}}}],"position":{"start":{"line":601,"column":1,"offset":27362},"end":{"line":608,"column":4,"offset":27549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":610,"column":6,"offset":27558},"end":{"line":610,"column":20,"offset":27572}}},{"type":"text","value":"[","position":{"start":{"line":610,"column":20,"offset":27572},"end":{"line":610,"column":22,"offset":27574}}},{"type":"text","value":"key","position":{"start":{"line":610,"column":22,"offset":27574},"end":{"line":610,"column":25,"offset":27577}}},{"type":"text","value":"]","position":{"start":{"line":610,"column":25,"offset":27577},"end":{"line":610,"column":27,"offset":27579}}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":610,"column":27,"offset":27579},"end":{"line":610,"column":118,"offset":27670}}}],"position":{"start":{"line":610,"column":1,"offset":27553},"end":{"line":610,"column":118,"offset":27670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":612,"column":1,"offset":27674},"end":{"line":612,"column":4,"offset":27677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n"}],"position":{"start":{"line":615,"column":1,"offset":27683},"end":{"line":627,"column":4,"offset":27980}}}],"position":{"start":{"line":615,"column":1,"offset":27683},"end":{"line":627,"column":4,"offset":27980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":629,"column":6,"offset":27989},"end":{"line":629,"column":60,"offset":28043}}}],"position":{"start":{"line":629,"column":1,"offset":27984},"end":{"line":629,"column":60,"offset":28043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":631,"column":1,"offset":28047},"end":{"line":631,"column":4,"offset":28050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n"}],"position":{"start":{"line":634,"column":1,"offset":28056},"end":{"line":647,"column":4,"offset":28332}}}],"position":{"start":{"line":634,"column":1,"offset":28056},"end":{"line":647,"column":4,"offset":28332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":649,"column":6,"offset":28341},"end":{"line":649,"column":54,"offset":28389}}}],"position":{"start":{"line":649,"column":1,"offset":28336},"end":{"line":649,"column":54,"offset":28389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n"}],"position":{"start":{"line":651,"column":1,"offset":28393},"end":{"line":659,"column":4,"offset":28562}}}],"position":{"start":{"line":651,"column":1,"offset":28393},"end":{"line":659,"column":4,"offset":28562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":661,"column":6,"offset":28571},"end":{"line":661,"column":98,"offset":28663}}}],"position":{"start":{"line":661,"column":1,"offset":28566},"end":{"line":661,"column":98,"offset":28663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":663,"column":1,"offset":28667},"end":{"line":663,"column":4,"offset":28670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n"}],"position":{"start":{"line":666,"column":1,"offset":28676},"end":{"line":682,"column":4,"offset":28999}}}],"position":{"start":{"line":666,"column":1,"offset":28676},"end":{"line":682,"column":4,"offset":28999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":684,"column":6,"offset":29008},"end":{"line":684,"column":68,"offset":29070}}}],"position":{"start":{"line":684,"column":1,"offset":29003},"end":{"line":684,"column":68,"offset":29070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n"}],"position":{"start":{"line":686,"column":1,"offset":29074},"end":{"line":699,"column":4,"offset":29366}}}],"position":{"start":{"line":686,"column":1,"offset":29074},"end":{"line":699,"column":4,"offset":29366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":701,"column":6,"offset":29375},"end":{"line":701,"column":60,"offset":29429}}}],"position":{"start":{"line":701,"column":1,"offset":29370},"end":{"line":701,"column":60,"offset":29429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n"}],"position":{"start":{"line":703,"column":1,"offset":29433},"end":{"line":708,"column":4,"offset":29522}}}],"position":{"start":{"line":703,"column":1,"offset":29433},"end":{"line":708,"column":4,"offset":29522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":710,"column":6,"offset":29531},"end":{"line":710,"column":60,"offset":29585}}}],"position":{"start":{"line":710,"column":1,"offset":29526},"end":{"line":710,"column":60,"offset":29585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n"}],"position":{"start":{"line":712,"column":1,"offset":29589},"end":{"line":731,"column":4,"offset":29941}}}],"position":{"start":{"line":712,"column":1,"offset":29589},"end":{"line":731,"column":4,"offset":29941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":733,"column":6,"offset":29950},"end":{"line":733,"column":139,"offset":30083}}}],"position":{"start":{"line":733,"column":1,"offset":29945},"end":{"line":733,"column":139,"offset":30083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":735,"column":1,"offset":30087},"end":{"line":735,"column":4,"offset":30090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n"}],"position":{"start":{"line":738,"column":1,"offset":30096},"end":{"line":754,"column":4,"offset":30468}}}],"position":{"start":{"line":738,"column":1,"offset":30096},"end":{"line":754,"column":4,"offset":30468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":756,"column":1,"offset":30472},"end":{"line":756,"column":4,"offset":30475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":758,"column":5,"offset":30483},"end":{"line":758,"column":23,"offset":30501}}}],"position":{"start":{"line":758,"column":1,"offset":30479},"end":{"line":758,"column":23,"offset":30501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":760,"column":6,"offset":30510},"end":{"line":760,"column":73,"offset":30577}}}],"position":{"start":{"line":760,"column":1,"offset":30505},"end":{"line":760,"column":73,"offset":30577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":762,"column":6,"offset":30586},"end":{"line":762,"column":72,"offset":30652}}}],"position":{"start":{"line":762,"column":1,"offset":30581},"end":{"line":762,"column":72,"offset":30652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var a = 'a';\n"}],"position":{"start":{"line":764,"column":1,"offset":30656},"end":{"line":766,"column":4,"offset":30680}}}],"position":{"start":{"line":764,"column":1,"offset":30656},"end":{"line":766,"column":4,"offset":30680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":768,"column":3,"offset":30686},"end":{"line":768,"column":8,"offset":30691}}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":768,"column":8,"offset":30691},"end":{"line":768,"column":65,"offset":30748}}}],"position":{"start":{"line":768,"column":1,"offset":30684},"end":{"line":768,"column":65,"offset":30748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":769,"column":3,"offset":30752},"end":{"line":769,"column":8,"offset":30757}}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":769,"column":8,"offset":30757},"end":{"line":769,"column":88,"offset":30837}}}],"position":{"start":{"line":769,"column":1,"offset":30750},"end":{"line":769,"column":88,"offset":30837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We consider ","position":{"start":{"line":770,"column":3,"offset":30841},"end":{"line":770,"column":15,"offset":30853}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":770,"column":15,"offset":30853},"end":{"line":770,"column":20,"offset":30858}}},{"type":"text","value":" to be ","position":{"start":{"line":770,"column":20,"offset":30858},"end":{"line":770,"column":27,"offset":30865}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"deprecated","position":{"start":{"line":770,"column":28,"offset":30866},"end":{"line":770,"column":38,"offset":30876}}}],"position":{"start":{"line":770,"column":27,"offset":30865},"end":{"line":770,"column":39,"offset":30877}}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":770,"column":39,"offset":30877},"end":{"line":770,"column":76,"offset":30914}}}],"position":{"start":{"line":770,"column":1,"offset":30839},"end":{"line":770,"column":76,"offset":30914}}},{"type":"text","value":"\n"}],"position":{"start":{"line":768,"column":1,"offset":30684},"end":{"line":770,"column":76,"offset":30914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let b = 'b';\n"}],"position":{"start":{"line":772,"column":1,"offset":30918},"end":{"line":774,"column":4,"offset":30942}}}],"position":{"start":{"line":772,"column":1,"offset":30918},"end":{"line":774,"column":4,"offset":30942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":776,"column":3,"offset":30948},"end":{"line":776,"column":8,"offset":30953}}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":776,"column":8,"offset":30953},"end":{"line":776,"column":67,"offset":31012}}}],"position":{"start":{"line":776,"column":1,"offset":30946},"end":{"line":776,"column":67,"offset":31012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":777,"column":3,"offset":31016},"end":{"line":777,"column":8,"offset":31021}}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":777,"column":8,"offset":31021},"end":{"line":777,"column":43,"offset":31056}}}],"position":{"start":{"line":777,"column":1,"offset":31014},"end":{"line":777,"column":43,"offset":31056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":778,"column":3,"offset":31060},"end":{"line":778,"column":27,"offset":31084}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":778,"column":27,"offset":31084},"end":{"line":778,"column":32,"offset":31089}}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":778,"column":32,"offset":31089},"end":{"line":778,"column":51,"offset":31108}}}],"position":{"start":{"line":778,"column":1,"offset":31058},"end":{"line":778,"column":51,"offset":31108}}},{"type":"text","value":"\n"}],"position":{"start":{"line":776,"column":1,"offset":30946},"end":{"line":778,"column":51,"offset":31108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const c = 'c';\n"}],"position":{"start":{"line":780,"column":1,"offset":31112},"end":{"line":782,"column":4,"offset":31138}}}],"position":{"start":{"line":780,"column":1,"offset":31112},"end":{"line":782,"column":4,"offset":31138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":784,"column":3,"offset":31144},"end":{"line":784,"column":10,"offset":31151}}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":784,"column":10,"offset":31151},"end":{"line":784,"column":36,"offset":31177}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":784,"column":36,"offset":31177},"end":{"line":784,"column":41,"offset":31182}}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":784,"column":41,"offset":31182},"end":{"line":784,"column":67,"offset":31208}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"initialize","position":{"start":{"line":784,"column":69,"offset":31210},"end":{"line":784,"column":79,"offset":31220}}}],"position":{"start":{"line":784,"column":67,"offset":31208},"end":{"line":784,"column":81,"offset":31222}}},{"type":"text","value":" a variable.","position":{"start":{"line":784,"column":81,"offset":31222},"end":{"line":784,"column":93,"offset":31234}}}],"position":{"start":{"line":784,"column":1,"offset":31142},"end":{"line":784,"column":93,"offset":31234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":785,"column":3,"offset":31238},"end":{"line":785,"column":54,"offset":31289}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":785,"column":54,"offset":31289},"end":{"line":785,"column":61,"offset":31296}}},{"type":"text","value":" variable.","position":{"start":{"line":785,"column":61,"offset":31296},"end":{"line":785,"column":71,"offset":31306}}}],"position":{"start":{"line":785,"column":1,"offset":31236},"end":{"line":785,"column":71,"offset":31306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":786,"column":3,"offset":31310},"end":{"line":786,"column":10,"offset":31317}}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":786,"column":10,"offset":31317},"end":{"line":786,"column":46,"offset":31353}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":786,"column":46,"offset":31353},"end":{"line":786,"column":51,"offset":31358}}},{"type":"text","value":" does.","position":{"start":{"line":786,"column":51,"offset":31358},"end":{"line":786,"column":57,"offset":31364}}}],"position":{"start":{"line":786,"column":1,"offset":31308},"end":{"line":786,"column":57,"offset":31364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":784,"column":1,"offset":31142},"end":{"line":786,"column":57,"offset":31364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":788,"column":6,"offset":31373},"end":{"line":788,"column":116,"offset":31483}}}],"position":{"start":{"line":788,"column":1,"offset":31368},"end":{"line":788,"column":116,"offset":31483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":790,"column":1,"offset":31487},"end":{"line":790,"column":15,"offset":31501}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":790,"column":15,"offset":31501},"end":{"line":790,"column":20,"offset":31506}}},{"type":"text","value":" function, inside which ","position":{"start":{"line":790,"column":20,"offset":31506},"end":{"line":790,"column":44,"offset":31530}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":790,"column":44,"offset":31530},"end":{"line":790,"column":49,"offset":31535}}},{"type":"text","value":" and ","position":{"start":{"line":790,"column":49,"offset":31535},"end":{"line":790,"column":54,"offset":31540}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bar"}],"position":{"start":{"line":790,"column":54,"offset":31540},"end":{"line":790,"column":59,"offset":31545}}},{"type":"text","value":" have ","position":{"start":{"line":790,"column":59,"offset":31545},"end":{"line":790,"column":65,"offset":31551}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":790,"column":65,"offset":31551},"end":{"line":790,"column":81,"offset":31567}}},{"type":"text","value":". ","position":{"start":{"line":790,"column":81,"offset":31567},"end":{"line":790,"column":83,"offset":31569}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":790,"column":83,"offset":31569},"end":{"line":790,"column":86,"offset":31572}}},{"type":"text","value":" and ","position":{"start":{"line":790,"column":86,"offset":31572},"end":{"line":790,"column":91,"offset":31577}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":790,"column":91,"offset":31577},"end":{"line":790,"column":96,"offset":31582}}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":790,"column":96,"offset":31582},"end":{"line":790,"column":132,"offset":31618}}}],"position":{"start":{"line":790,"column":1,"offset":31487},"end":{"line":790,"column":132,"offset":31618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n"}],"position":{"start":{"line":792,"column":1,"offset":31622},"end":{"line":810,"column":4,"offset":31922}}}],"position":{"start":{"line":792,"column":1,"offset":31622},"end":{"line":810,"column":4,"offset":31922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":812,"column":1,"offset":31926},"end":{"line":812,"column":25,"offset":31950}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":812,"column":25,"offset":31950},"end":{"line":812,"column":30,"offset":31955}}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":812,"column":30,"offset":31955},"end":{"line":812,"column":103,"offset":32028}}}],"position":{"start":{"line":812,"column":1,"offset":31926},"end":{"line":812,"column":103,"offset":32028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":814,"column":1,"offset":32032},"end":{"line":814,"column":15,"offset":32046}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":814,"column":15,"offset":32046},"end":{"line":814,"column":20,"offset":32051}}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":814,"column":20,"offset":32051},"end":{"line":814,"column":47,"offset":32078}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":814,"column":47,"offset":32078},"end":{"line":814,"column":52,"offset":32083}}},{"type":"text","value":" has ","position":{"start":{"line":814,"column":52,"offset":32083},"end":{"line":814,"column":57,"offset":32088}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":814,"column":57,"offset":32088},"end":{"line":814,"column":73,"offset":32104}}},{"type":"text","value":".","position":{"start":{"line":814,"column":73,"offset":32104},"end":{"line":814,"column":74,"offset":32105}}}],"position":{"start":{"line":814,"column":1,"offset":32032},"end":{"line":814,"column":74,"offset":32105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":816,"column":1,"offset":32109},"end":{"line":816,"column":4,"offset":32112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n"}],"position":{"start":{"line":819,"column":1,"offset":32118},"end":{"line":829,"column":4,"offset":32251}}}],"position":{"start":{"line":819,"column":1,"offset":32118},"end":{"line":829,"column":4,"offset":32251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":831,"column":1,"offset":32255},"end":{"line":831,"column":15,"offset":32269}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"func1"}],"position":{"start":{"line":831,"column":15,"offset":32269},"end":{"line":831,"column":22,"offset":32276}}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":831,"column":22,"offset":32276},"end":{"line":831,"column":55,"offset":32309}}}],"position":{"start":{"line":831,"column":1,"offset":32255},"end":{"line":831,"column":55,"offset":32309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n"}],"position":{"start":{"line":833,"column":1,"offset":32313},"end":{"line":848,"column":4,"offset":32583}}}],"position":{"start":{"line":833,"column":1,"offset":32313},"end":{"line":848,"column":4,"offset":32583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":850,"column":6,"offset":32592},"end":{"line":850,"column":70,"offset":32656}}}],"position":{"start":{"line":850,"column":1,"offset":32587},"end":{"line":850,"column":70,"offset":32656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n"}],"position":{"start":{"line":852,"column":1,"offset":32660},"end":{"line":862,"column":4,"offset":32846}}}],"position":{"start":{"line":852,"column":1,"offset":32660},"end":{"line":862,"column":4,"offset":32846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":864,"column":6,"offset":32855},"end":{"line":864,"column":33,"offset":32882}}}],"position":{"start":{"line":864,"column":1,"offset":32850},"end":{"line":864,"column":33,"offset":32882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const returnValue = (val) => val;\n"}],"position":{"start":{"line":866,"column":1,"offset":32886},"end":{"line":868,"column":4,"offset":32931}}}],"position":{"start":{"line":866,"column":1,"offset":32886},"end":{"line":868,"column":4,"offset":32931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":870,"column":1,"offset":32935},"end":{"line":870,"column":59,"offset":32993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":870,"column":59,"offset":32993},"end":{"line":870,"column":64,"offset":32998}}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":870,"column":64,"offset":32998},"end":{"line":870,"column":93,"offset":33027}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":870,"column":93,"offset":33027},"end":{"line":870,"column":98,"offset":33032}}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":870,"column":98,"offset":33032},"end":{"line":870,"column":135,"offset":33069}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return val"}],"position":{"start":{"line":870,"column":135,"offset":33069},"end":{"line":870,"column":147,"offset":33081}}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":870,"column":147,"offset":33081},"end":{"line":870,"column":188,"offset":33122}}}],"position":{"start":{"line":870,"column":1,"offset":32935},"end":{"line":870,"column":188,"offset":33122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":872,"column":1,"offset":33126},"end":{"line":872,"column":28,"offset":33153}}}],"position":{"start":{"line":872,"column":1,"offset":33126},"end":{"line":872,"column":28,"offset":33153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const returnValue = (val) => {\n    return val;\n};\n"}],"position":{"start":{"line":874,"column":1,"offset":33157},"end":{"line":878,"column":4,"offset":33220}}}],"position":{"start":{"line":874,"column":1,"offset":33157},"end":{"line":878,"column":4,"offset":33220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":880,"column":6,"offset":33229},"end":{"line":880,"column":54,"offset":33277}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":880,"column":54,"offset":33277},"end":{"line":880,"column":60,"offset":33283}}},{"type":"text","value":" without executing the code","position":{"start":{"line":880,"column":60,"offset":33283},"end":{"line":880,"column":87,"offset":33310}}}],"position":{"start":{"line":880,"column":1,"offset":33224},"end":{"line":880,"column":87,"offset":33310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":882,"column":1,"offset":33314},"end":{"line":882,"column":4,"offset":33317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":885,"column":1,"offset":33323},"end":{"line":897,"column":4,"offset":33492}}}],"position":{"start":{"line":885,"column":1,"offset":33323},"end":{"line":897,"column":4,"offset":33492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we use a ","position":{"start":{"line":899,"column":1,"offset":33496},"end":{"line":899,"column":13,"offset":33508}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function declaration","position":{"start":{"line":899,"column":14,"offset":33509},"end":{"line":899,"column":34,"offset":33529}}}],"position":{"start":{"line":899,"column":13,"offset":33508},"end":{"line":899,"column":35,"offset":33530}}},{"type":"text","value":" style function, the ","position":{"start":{"line":899,"column":35,"offset":33530},"end":{"line":899,"column":56,"offset":33551}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":899,"column":56,"offset":33551},"end":{"line":899,"column":62,"offset":33557}}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":899,"column":62,"offset":33557},"end":{"line":899,"column":86,"offset":33581}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":899,"column":86,"offset":33581},"end":{"line":899,"column":94,"offset":33589}}},{"type":"text","value":" object ","position":{"start":{"line":899,"column":94,"offset":33589},"end":{"line":899,"column":102,"offset":33597}}},{"type":"text","value":"(","position":{"start":{"line":899,"column":102,"offset":33597},"end":{"line":899,"column":104,"offset":33599}}},{"type":"text","value":"i.e. ","position":{"start":{"line":899,"column":104,"offset":33599},"end":{"line":899,"column":109,"offset":33604}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object [global]"}],"position":{"start":{"line":899,"column":109,"offset":33604},"end":{"line":899,"column":126,"offset":33621}}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":899,"column":126,"offset":33621},"end":{"line":899,"column":142,"offset":33637}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Window"}],"position":{"start":{"line":899,"column":142,"offset":33637},"end":{"line":899,"column":150,"offset":33645}}},{"type":"text","value":" in your browser","position":{"start":{"line":899,"column":150,"offset":33645},"end":{"line":899,"column":166,"offset":33661}}},{"type":"text","value":")","position":{"start":{"line":899,"column":166,"offset":33661},"end":{"line":899,"column":168,"offset":33663}}},{"type":"text","value":".","position":{"start":{"line":899,"column":168,"offset":33663},"end":{"line":899,"column":169,"offset":33664}}}],"position":{"start":{"line":899,"column":1,"offset":33496},"end":{"line":899,"column":169,"offset":33664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":901,"column":1,"offset":33668},"end":{"line":907,"column":4,"offset":33799}}}],"position":{"start":{"line":901,"column":1,"offset":33668},"end":{"line":907,"column":4,"offset":33799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":909,"column":1,"offset":33803},"end":{"line":909,"column":27,"offset":33829}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"fat arrow","position":{"start":{"line":909,"column":28,"offset":33830},"end":{"line":909,"column":37,"offset":33839}}}],"position":{"start":{"line":909,"column":27,"offset":33829},"end":{"line":909,"column":38,"offset":33840}}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":909,"column":38,"offset":33840},"end":{"line":909,"column":102,"offset":33904}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":909,"column":102,"offset":33904},"end":{"line":909,"column":108,"offset":33910}}},{"type":"text","value":" becomes","position":{"start":{"line":909,"column":108,"offset":33910},"end":{"line":909,"column":116,"offset":33918}}}],"position":{"start":{"line":909,"column":1,"offset":33803},"end":{"line":909,"column":116,"offset":33918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":911,"column":6,"offset":33927},"end":{"line":911,"column":66,"offset":33987}}}],"position":{"start":{"line":911,"column":1,"offset":33922},"end":{"line":911,"column":66,"offset":33987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n"}],"position":{"start":{"line":913,"column":1,"offset":33991},"end":{"line":924,"column":4,"offset":34238}}}],"position":{"start":{"line":913,"column":1,"offset":33991},"end":{"line":924,"column":4,"offset":34238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":926,"column":6,"offset":34247},"end":{"line":926,"column":38,"offset":34279}}},{"type":"text","value":"#","position":{"start":{"line":926,"column":38,"offset":34279},"end":{"line":926,"column":40,"offset":34281}}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":926,"column":40,"offset":34281},"end":{"line":926,"column":86,"offset":34327}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":926,"column":86,"offset":34327},"end":{"line":926,"column":92,"offset":34333}}}],"position":{"start":{"line":926,"column":1,"offset":34242},"end":{"line":926,"column":92,"offset":34333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n"}],"position":{"start":{"line":928,"column":1,"offset":34337},"end":{"line":941,"column":4,"offset":34679}}}],"position":{"start":{"line":928,"column":1,"offset":34337},"end":{"line":941,"column":4,"offset":34679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":943,"column":6,"offset":34688},"end":{"line":943,"column":45,"offset":34727}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":943,"column":45,"offset":34727},"end":{"line":943,"column":51,"offset":34733}}},{"type":"text","value":" refers to","position":{"start":{"line":943,"column":51,"offset":34733},"end":{"line":943,"column":61,"offset":34743}}}],"position":{"start":{"line":943,"column":1,"offset":34683},"end":{"line":943,"column":61,"offset":34743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":945,"column":1,"offset":34747},"end":{"line":945,"column":4,"offset":34750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n"}],"position":{"start":{"line":948,"column":1,"offset":34756},"end":{"line":968,"column":4,"offset":35186}}}],"position":{"start":{"line":948,"column":1,"offset":34756},"end":{"line":968,"column":4,"offset":35186}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":969,"column":1,"offset":35188}}}}