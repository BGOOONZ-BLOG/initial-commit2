{"expireTime":9007200903816782000,"key":"transformer-remark-markdown-ast-98ed10283c6a24962fd3a98f275b8db6--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Array.prototype.forEach()","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":28,"offset":29},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":28,"offset":29},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":5,"offset":37},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":4,"column":5,"offset":37},"end":{"line":4,"column":16,"offset":48},"indent":[]}},{"type":"text","value":" method executes a provided function once for each array element.","position":{"start":{"line":4,"column":16,"offset":48},"end":{"line":4,"column":81,"offset":113},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":33},"end":{"line":4,"column":81,"offset":113},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":6,"column":4,"offset":120},"end":{"line":6,"column":10,"offset":126},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":117},"end":{"line":6,"column":10,"offset":126},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Arrow function\nforEach((element) => { ... } )\nforEach((element, index) => { ... } )\nforEach((element, index, array) => { ... } )\n\n// Callback function\nforEach(callbackFn)\nforEach(callbackFn, thisArg)\n\n// Inline callback function\nforEach(function callbackFn(element) { ... })\nforEach(function callbackFn(element, index) { ... })\nforEach(function callbackFn(element, index, array){ ... })\nforEach(function callbackFn(element, index, array) { ... }, thisArg)","position":{"start":{"line":8,"column":1,"offset":130},"end":{"line":21,"column":73,"offset":649},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameters","position":{"start":{"line":23,"column":5,"offset":657},"end":{"line":23,"column":15,"offset":667},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":653},"end":{"line":23,"column":15,"offset":667},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":25,"column":1,"offset":671},"end":{"line":25,"column":13,"offset":683},"indent":[]}},{"type":"text","value":"\nFunction to execute on each element. It accepts between one and three arguments:","position":{"start":{"line":25,"column":13,"offset":683},"end":{"line":26,"column":81,"offset":765},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":671},"end":{"line":26,"column":81,"offset":765},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"element","position":{"start":{"line":28,"column":1,"offset":769},"end":{"line":28,"column":10,"offset":778},"indent":[]}},{"type":"text","value":"\nThe current element being processed in the array.","position":{"start":{"line":28,"column":10,"offset":778},"end":{"line":29,"column":50,"offset":829},"indent":[1]}}],"position":{"start":{"line":28,"column":1,"offset":769},"end":{"line":29,"column":50,"offset":829},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"index","position":{"start":{"line":31,"column":1,"offset":833},"end":{"line":31,"column":8,"offset":840},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":31,"column":8,"offset":840},"end":{"line":31,"column":9,"offset":841},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":31,"column":9,"offset":841},"end":{"line":31,"column":45,"offset":877},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":31,"column":45,"offset":877},"end":{"line":31,"column":53,"offset":885},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":31,"column":53,"offset":885},"end":{"line":31,"column":60,"offset":892},"indent":[]}},{"type":"text","value":"\nThe index of ","position":{"start":{"line":31,"column":60,"offset":892},"end":{"line":32,"column":14,"offset":907},"indent":[1]}},{"type":"inlineCode","value":"element","position":{"start":{"line":32,"column":14,"offset":907},"end":{"line":32,"column":23,"offset":916},"indent":[]}},{"type":"text","value":" in the array.","position":{"start":{"line":32,"column":23,"offset":916},"end":{"line":32,"column":37,"offset":930},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":833},"end":{"line":32,"column":37,"offset":930},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"array","position":{"start":{"line":34,"column":1,"offset":934},"end":{"line":34,"column":8,"offset":941},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":34,"column":8,"offset":941},"end":{"line":34,"column":9,"offset":942},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":34,"column":9,"offset":942},"end":{"line":34,"column":45,"offset":978},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":34,"column":45,"offset":978},"end":{"line":34,"column":53,"offset":986},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":34,"column":53,"offset":986},"end":{"line":34,"column":60,"offset":993},"indent":[]}},{"type":"text","value":"\nThe array ","position":{"start":{"line":34,"column":60,"offset":993},"end":{"line":35,"column":11,"offset":1005},"indent":[1]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":35,"column":11,"offset":1005},"end":{"line":35,"column":22,"offset":1016},"indent":[]}},{"type":"text","value":" was called upon.","position":{"start":{"line":35,"column":22,"offset":1016},"end":{"line":35,"column":39,"offset":1033},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":934},"end":{"line":35,"column":39,"offset":1033},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"thisArg","position":{"start":{"line":37,"column":1,"offset":1037},"end":{"line":37,"column":10,"offset":1046},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":37,"column":10,"offset":1046},"end":{"line":37,"column":11,"offset":1047},"indent":[]}},{"type":"html","value":"<span class=\"badge inline optional\">","position":{"start":{"line":37,"column":11,"offset":1047},"end":{"line":37,"column":47,"offset":1083},"indent":[]}},{"type":"text","value":"Optional","position":{"start":{"line":37,"column":47,"offset":1083},"end":{"line":37,"column":55,"offset":1091},"indent":[]}},{"type":"html","value":"</span>","position":{"start":{"line":37,"column":55,"offset":1091},"end":{"line":37,"column":62,"offset":1098},"indent":[]}},{"type":"text","value":"\nValue to use as ","position":{"start":{"line":37,"column":62,"offset":1098},"end":{"line":38,"column":17,"offset":1116},"indent":[1]}},{"type":"inlineCode","value":"this","position":{"start":{"line":38,"column":17,"offset":1116},"end":{"line":38,"column":23,"offset":1122},"indent":[]}},{"type":"text","value":" when executing ","position":{"start":{"line":38,"column":23,"offset":1122},"end":{"line":38,"column":39,"offset":1138},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":38,"column":39,"offset":1138},"end":{"line":38,"column":51,"offset":1150},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":38,"column":51,"offset":1150},"end":{"line":38,"column":52,"offset":1151},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1037},"end":{"line":38,"column":52,"offset":1151},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return value","position":{"start":{"line":40,"column":5,"offset":1159},"end":{"line":40,"column":17,"offset":1171},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1155},"end":{"line":40,"column":17,"offset":1171},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":42,"column":1,"offset":1175},"end":{"line":42,"column":12,"offset":1186},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":42,"column":12,"offset":1186},"end":{"line":42,"column":13,"offset":1187},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1175},"end":{"line":42,"column":13,"offset":1187},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":44,"column":4,"offset":1194},"end":{"line":44,"column":15,"offset":1205},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1191},"end":{"line":44,"column":15,"offset":1205},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":46,"column":1,"offset":1209},"end":{"line":46,"column":12,"offset":1220},"indent":[]}},{"type":"text","value":" calls a provided ","position":{"start":{"line":46,"column":12,"offset":1220},"end":{"line":46,"column":30,"offset":1238},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":46,"column":30,"offset":1238},"end":{"line":46,"column":42,"offset":1250},"indent":[]}},{"type":"text","value":" function once for each element in an array in ascending index order. It is not invoked for index properties that have been deleted or are uninitialized. (For sparse arrays, ","position":{"start":{"line":46,"column":42,"offset":1250},"end":{"line":46,"column":216,"offset":1424},"indent":[]}},{"type":"link","title":null,"url":"#sparsearray","children":[{"type":"text","value":"see example below","position":{"start":{"line":46,"column":217,"offset":1425},"end":{"line":46,"column":234,"offset":1442},"indent":[]}}],"position":{"start":{"line":46,"column":216,"offset":1424},"end":{"line":46,"column":249,"offset":1457},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":46,"column":249,"offset":1457},"end":{"line":46,"column":251,"offset":1459},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1209},"end":{"line":46,"column":251,"offset":1459},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":48,"column":1,"offset":1463},"end":{"line":48,"column":13,"offset":1475},"indent":[]}},{"type":"text","value":" is invoked with three arguments:","position":{"start":{"line":48,"column":13,"offset":1475},"end":{"line":48,"column":46,"offset":1508},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1463},"end":{"line":48,"column":46,"offset":1508},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the value of the element","position":{"start":{"line":50,"column":5,"offset":1516},"end":{"line":50,"column":29,"offset":1540},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1516},"end":{"line":50,"column":29,"offset":1540},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1512},"end":{"line":50,"column":29,"offset":1540},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the index of the element","position":{"start":{"line":51,"column":5,"offset":1546},"end":{"line":51,"column":29,"offset":1570},"indent":[]}}],"position":{"start":{"line":51,"column":5,"offset":1546},"end":{"line":51,"column":29,"offset":1570},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1542},"end":{"line":51,"column":29,"offset":1570},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the Array object being traversed","position":{"start":{"line":52,"column":5,"offset":1576},"end":{"line":52,"column":37,"offset":1608},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":1576},"end":{"line":52,"column":37,"offset":1608},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1572},"end":{"line":52,"column":37,"offset":1608},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1512},"end":{"line":52,"column":37,"offset":1608},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If a ","position":{"start":{"line":54,"column":1,"offset":1612},"end":{"line":54,"column":6,"offset":1617},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":54,"column":6,"offset":1617},"end":{"line":54,"column":15,"offset":1626},"indent":[]}},{"type":"text","value":" parameter is provided to ","position":{"start":{"line":54,"column":15,"offset":1626},"end":{"line":54,"column":41,"offset":1652},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":54,"column":41,"offset":1652},"end":{"line":54,"column":52,"offset":1663},"indent":[]}},{"type":"text","value":", it will be used as callback's ","position":{"start":{"line":54,"column":52,"offset":1663},"end":{"line":54,"column":84,"offset":1695},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":54,"column":84,"offset":1695},"end":{"line":54,"column":90,"offset":1701},"indent":[]}},{"type":"text","value":" value. The ","position":{"start":{"line":54,"column":90,"offset":1701},"end":{"line":54,"column":102,"offset":1713},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":54,"column":102,"offset":1713},"end":{"line":54,"column":111,"offset":1722},"indent":[]}},{"type":"text","value":" value ultimately observable by ","position":{"start":{"line":54,"column":111,"offset":1722},"end":{"line":54,"column":143,"offset":1754},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":54,"column":143,"offset":1754},"end":{"line":54,"column":155,"offset":1766},"indent":[]}},{"type":"text","value":" is determined according to ","position":{"start":{"line":54,"column":155,"offset":1766},"end":{"line":54,"column":183,"offset":1794},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"text","value":"the usual rules for determining the ","position":{"start":{"line":54,"column":184,"offset":1795},"end":{"line":54,"column":220,"offset":1831},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":54,"column":220,"offset":1831},"end":{"line":54,"column":226,"offset":1837},"indent":[]}},{"type":"text","value":" seen by a function","position":{"start":{"line":54,"column":226,"offset":1837},"end":{"line":54,"column":245,"offset":1856},"indent":[]}}],"position":{"start":{"line":54,"column":183,"offset":1794},"end":{"line":54,"column":268,"offset":1879},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":54,"column":268,"offset":1879},"end":{"line":54,"column":269,"offset":1880},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1612},"end":{"line":54,"column":269,"offset":1880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The range of elements processed by ","position":{"start":{"line":56,"column":1,"offset":1884},"end":{"line":56,"column":36,"offset":1919},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":56,"column":36,"offset":1919},"end":{"line":56,"column":47,"offset":1930},"indent":[]}},{"type":"text","value":" is set before the first invocation of ","position":{"start":{"line":56,"column":47,"offset":1930},"end":{"line":56,"column":86,"offset":1969},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":56,"column":86,"offset":1969},"end":{"line":56,"column":98,"offset":1981},"indent":[]}},{"type":"text","value":". Elements which are appended to the array after the call to ","position":{"start":{"line":56,"column":98,"offset":1981},"end":{"line":56,"column":159,"offset":2042},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":56,"column":159,"offset":2042},"end":{"line":56,"column":170,"offset":2053},"indent":[]}},{"type":"text","value":" begins will not be visited by ","position":{"start":{"line":56,"column":170,"offset":2053},"end":{"line":56,"column":201,"offset":2084},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":56,"column":201,"offset":2084},"end":{"line":56,"column":213,"offset":2096},"indent":[]}},{"type":"text","value":". If existing elements of the array are changed or deleted, their value as passed to ","position":{"start":{"line":56,"column":213,"offset":2096},"end":{"line":56,"column":298,"offset":2181},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":56,"column":298,"offset":2181},"end":{"line":56,"column":310,"offset":2193},"indent":[]}},{"type":"text","value":" will be the value at the time ","position":{"start":{"line":56,"column":310,"offset":2193},"end":{"line":56,"column":341,"offset":2224},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":56,"column":341,"offset":2224},"end":{"line":56,"column":352,"offset":2235},"indent":[]}},{"type":"text","value":" visits them; elements that are deleted before being visited are not visited. If elements that are already visited are removed (e.g. using ","position":{"start":{"line":56,"column":352,"offset":2235},"end":{"line":56,"column":491,"offset":2374},"indent":[]}},{"type":"link","title":null,"url":"shift","children":[{"type":"inlineCode","value":"shift()","position":{"start":{"line":56,"column":492,"offset":2375},"end":{"line":56,"column":501,"offset":2384},"indent":[]}}],"position":{"start":{"line":56,"column":491,"offset":2374},"end":{"line":56,"column":509,"offset":2392},"indent":[]}},{"type":"text","value":") during the iteration, later elements will be skipped. (","position":{"start":{"line":56,"column":509,"offset":2392},"end":{"line":56,"column":566,"offset":2449},"indent":[]}},{"type":"link","title":null,"url":"#Modifying_the_array_during_iteration","children":[{"type":"text","value":"See this example, below","position":{"start":{"line":56,"column":567,"offset":2450},"end":{"line":56,"column":590,"offset":2473},"indent":[]}}],"position":{"start":{"line":56,"column":566,"offset":2449},"end":{"line":56,"column":630,"offset":2513},"indent":[]}},{"type":"text","value":".)","position":{"start":{"line":56,"column":630,"offset":2513},"end":{"line":56,"column":632,"offset":2515},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1884},"end":{"line":56,"column":632,"offset":2515},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":58,"column":1,"offset":2519},"end":{"line":58,"column":12,"offset":2530},"indent":[]}},{"type":"text","value":" executes the ","position":{"start":{"line":58,"column":12,"offset":2530},"end":{"line":58,"column":26,"offset":2544},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":58,"column":26,"offset":2544},"end":{"line":58,"column":38,"offset":2556},"indent":[]}},{"type":"text","value":" function once for each array element; unlike ","position":{"start":{"line":58,"column":38,"offset":2556},"end":{"line":58,"column":84,"offset":2602},"indent":[]}},{"type":"link","title":null,"url":"map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":58,"column":85,"offset":2603},"end":{"line":58,"column":92,"offset":2610},"indent":[]}}],"position":{"start":{"line":58,"column":84,"offset":2602},"end":{"line":58,"column":98,"offset":2616},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":58,"column":98,"offset":2616},"end":{"line":58,"column":102,"offset":2620},"indent":[]}},{"type":"link","title":null,"url":"reduce","children":[{"type":"inlineCode","value":"reduce()","position":{"start":{"line":58,"column":103,"offset":2621},"end":{"line":58,"column":113,"offset":2631},"indent":[]}}],"position":{"start":{"line":58,"column":102,"offset":2620},"end":{"line":58,"column":122,"offset":2640},"indent":[]}},{"type":"text","value":" it always returns the value ","position":{"start":{"line":58,"column":122,"offset":2640},"end":{"line":58,"column":151,"offset":2669},"indent":[]}},{"type":"link","title":null,"url":"../undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":58,"column":152,"offset":2670},"end":{"line":58,"column":163,"offset":2681},"indent":[]}}],"position":{"start":{"line":58,"column":151,"offset":2669},"end":{"line":58,"column":178,"offset":2696},"indent":[]}},{"type":"text","value":" and is not chainable. The typical use case is to execute side effects at the end of a chain.","position":{"start":{"line":58,"column":178,"offset":2696},"end":{"line":58,"column":271,"offset":2789},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2519},"end":{"line":58,"column":271,"offset":2789},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":60,"column":1,"offset":2793},"end":{"line":60,"column":12,"offset":2804},"indent":[]}},{"type":"text","value":" does not mutate the array on which it is called. (However, ","position":{"start":{"line":60,"column":12,"offset":2804},"end":{"line":60,"column":72,"offset":2864},"indent":[]}},{"type":"inlineCode","value":"callbackFn","position":{"start":{"line":60,"column":72,"offset":2864},"end":{"line":60,"column":84,"offset":2876},"indent":[]}},{"type":"text","value":" may do so)","position":{"start":{"line":60,"column":84,"offset":2876},"end":{"line":60,"column":95,"offset":2887},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2793},"end":{"line":60,"column":95,"offset":2887},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":62,"column":3,"offset":2893},"end":{"line":62,"column":8,"offset":2898},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2891},"end":{"line":62,"column":10,"offset":2900},"indent":[]}},{"type":"text","value":" There is no way to stop or break a ","position":{"start":{"line":62,"column":10,"offset":2900},"end":{"line":62,"column":46,"offset":2936},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":62,"column":46,"offset":2936},"end":{"line":62,"column":57,"offset":2947},"indent":[]}},{"type":"text","value":" loop other than by throwing an exception. If you need such behavior, the ","position":{"start":{"line":62,"column":57,"offset":2947},"end":{"line":62,"column":131,"offset":3021},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":62,"column":131,"offset":3021},"end":{"line":62,"column":142,"offset":3032},"indent":[]}},{"type":"text","value":" method is the wrong tool.","position":{"start":{"line":62,"column":142,"offset":3032},"end":{"line":62,"column":168,"offset":3058},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2891},"end":{"line":62,"column":168,"offset":3058},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Early termination may be accomplished with:","position":{"start":{"line":64,"column":1,"offset":3062},"end":{"line":64,"column":44,"offset":3105},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":3062},"end":{"line":64,"column":44,"offset":3105},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A simple ","position":{"start":{"line":66,"column":3,"offset":3111},"end":{"line":66,"column":12,"offset":3120},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for","children":[{"type":"text","value":"for","position":{"start":{"line":66,"column":13,"offset":3121},"end":{"line":66,"column":16,"offset":3124},"indent":[]}}],"position":{"start":{"line":66,"column":12,"offset":3120},"end":{"line":66,"column":39,"offset":3147},"indent":[]}},{"type":"text","value":" loop","position":{"start":{"line":66,"column":39,"offset":3147},"end":{"line":66,"column":44,"offset":3152},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":3111},"end":{"line":66,"column":44,"offset":3152},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3109},"end":{"line":66,"column":44,"offset":3152},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":67,"column":3,"offset":3156},"end":{"line":67,"column":5,"offset":3158},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for...of","children":[{"type":"text","value":"for...of","position":{"start":{"line":67,"column":6,"offset":3159},"end":{"line":67,"column":14,"offset":3167},"indent":[]}}],"position":{"start":{"line":67,"column":5,"offset":3158},"end":{"line":67,"column":42,"offset":3195},"indent":[]}},{"type":"text","value":" / ","position":{"start":{"line":67,"column":42,"offset":3195},"end":{"line":67,"column":45,"offset":3198},"indent":[]}},{"type":"link","title":null,"url":"../../statements/for...in","children":[{"type":"text","value":"for...in","position":{"start":{"line":67,"column":46,"offset":3199},"end":{"line":67,"column":54,"offset":3207},"indent":[]}}],"position":{"start":{"line":67,"column":45,"offset":3198},"end":{"line":67,"column":82,"offset":3235},"indent":[]}},{"type":"text","value":" loops","position":{"start":{"line":67,"column":82,"offset":3235},"end":{"line":67,"column":88,"offset":3241},"indent":[]}}],"position":{"start":{"line":67,"column":3,"offset":3156},"end":{"line":67,"column":88,"offset":3241},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3154},"end":{"line":67,"column":88,"offset":3241},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"every","children":[{"type":"inlineCode","value":"Array.prototype.every()","position":{"start":{"line":68,"column":4,"offset":3246},"end":{"line":68,"column":29,"offset":3271},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":3245},"end":{"line":68,"column":37,"offset":3279},"indent":[]}}],"position":{"start":{"line":68,"column":3,"offset":3245},"end":{"line":68,"column":37,"offset":3279},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3243},"end":{"line":68,"column":37,"offset":3279},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"some","children":[{"type":"inlineCode","value":"Array.prototype.some()","position":{"start":{"line":69,"column":4,"offset":3284},"end":{"line":69,"column":28,"offset":3308},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":3283},"end":{"line":69,"column":35,"offset":3315},"indent":[]}}],"position":{"start":{"line":69,"column":3,"offset":3283},"end":{"line":69,"column":35,"offset":3315},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":3281},"end":{"line":69,"column":35,"offset":3315},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"find","children":[{"type":"inlineCode","value":"Array.prototype.find()","position":{"start":{"line":70,"column":4,"offset":3320},"end":{"line":70,"column":28,"offset":3344},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":3319},"end":{"line":70,"column":35,"offset":3351},"indent":[]}}],"position":{"start":{"line":70,"column":3,"offset":3319},"end":{"line":70,"column":35,"offset":3351},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3317},"end":{"line":70,"column":35,"offset":3351},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"findindex","children":[{"type":"inlineCode","value":"Array.prototype.findIndex()","position":{"start":{"line":71,"column":4,"offset":3356},"end":{"line":71,"column":33,"offset":3385},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":3355},"end":{"line":71,"column":45,"offset":3397},"indent":[]}}],"position":{"start":{"line":71,"column":3,"offset":3355},"end":{"line":71,"column":45,"offset":3397},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":3353},"end":{"line":71,"column":45,"offset":3397},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":3109},"end":{"line":71,"column":45,"offset":3397},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Array methods: ","position":{"start":{"line":73,"column":1,"offset":3401},"end":{"line":73,"column":16,"offset":3416},"indent":[]}},{"type":"link","title":null,"url":"every","children":[{"type":"inlineCode","value":"every()","position":{"start":{"line":73,"column":17,"offset":3417},"end":{"line":73,"column":26,"offset":3426},"indent":[]}}],"position":{"start":{"line":73,"column":16,"offset":3416},"end":{"line":73,"column":34,"offset":3434},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":73,"column":34,"offset":3434},"end":{"line":73,"column":36,"offset":3436},"indent":[]}},{"type":"link","title":null,"url":"some","children":[{"type":"inlineCode","value":"some()","position":{"start":{"line":73,"column":37,"offset":3437},"end":{"line":73,"column":45,"offset":3445},"indent":[]}}],"position":{"start":{"line":73,"column":36,"offset":3436},"end":{"line":73,"column":52,"offset":3452},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":73,"column":52,"offset":3452},"end":{"line":73,"column":54,"offset":3454},"indent":[]}},{"type":"link","title":null,"url":"find","children":[{"type":"inlineCode","value":"find()","position":{"start":{"line":73,"column":55,"offset":3455},"end":{"line":73,"column":63,"offset":3463},"indent":[]}}],"position":{"start":{"line":73,"column":54,"offset":3454},"end":{"line":73,"column":70,"offset":3470},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":73,"column":70,"offset":3470},"end":{"line":73,"column":76,"offset":3476},"indent":[]}},{"type":"link","title":null,"url":"findindex","children":[{"type":"inlineCode","value":"findIndex()","position":{"start":{"line":73,"column":77,"offset":3477},"end":{"line":73,"column":90,"offset":3490},"indent":[]}}],"position":{"start":{"line":73,"column":76,"offset":3476},"end":{"line":73,"column":102,"offset":3502},"indent":[]}},{"type":"text","value":" test the array elements with a predicate returning a truthy value to determine if further iteration is required.","position":{"start":{"line":73,"column":102,"offset":3502},"end":{"line":73,"column":215,"offset":3615},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3401},"end":{"line":73,"column":215,"offset":3615},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":75,"column":3,"offset":3621},"end":{"line":75,"column":8,"offset":3626},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3619},"end":{"line":75,"column":10,"offset":3628},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":75,"column":10,"offset":3628},"end":{"line":75,"column":11,"offset":3629},"indent":[]}},{"type":"inlineCode","value":"forEach","position":{"start":{"line":75,"column":11,"offset":3629},"end":{"line":75,"column":20,"offset":3638},"indent":[]}},{"type":"text","value":" expects a synchronous function.","position":{"start":{"line":75,"column":20,"offset":3638},"end":{"line":75,"column":52,"offset":3670},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3619},"end":{"line":75,"column":52,"offset":3670},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach","position":{"start":{"line":77,"column":1,"offset":3674},"end":{"line":77,"column":10,"offset":3683},"indent":[]}},{"type":"text","value":" does not wait for promises. Make sure you are aware of the implications while using promises (or async functions) as ","position":{"start":{"line":77,"column":10,"offset":3683},"end":{"line":77,"column":128,"offset":3801},"indent":[]}},{"type":"inlineCode","value":"forEach","position":{"start":{"line":77,"column":128,"offset":3801},"end":{"line":77,"column":137,"offset":3810},"indent":[]}},{"type":"text","value":" callback.","position":{"start":{"line":77,"column":137,"offset":3810},"end":{"line":77,"column":147,"offset":3820},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3674},"end":{"line":77,"column":147,"offset":3820},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let ratings = [5, 4, 5];\nlet sum = 0;\n\nlet sumFunction = async function (a, b)\n{\n  return a + b\n}\n\nratings.forEach(async function(rating) {\n  sum = await sumFunction(sum, rating)\n})\n\nconsole.log(sum)\n// Naively expected output: 14\n// Actual output: 0","position":{"start":{"line":79,"column":1,"offset":3824},"end":{"line":93,"column":24,"offset":4136},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Polyfill","position":{"start":{"line":95,"column":4,"offset":4143},"end":{"line":95,"column":12,"offset":4151},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4140},"end":{"line":95,"column":12,"offset":4151},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":97,"column":1,"offset":4155},"end":{"line":97,"column":12,"offset":4166},"indent":[]}},{"type":"text","value":" was added to the ECMA-262 standard in the 5","position":{"start":{"line":97,"column":12,"offset":4166},"end":{"line":97,"column":56,"offset":4210},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":97,"column":56,"offset":4210},"end":{"line":97,"column":61,"offset":4215},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":97,"column":61,"offset":4215},"end":{"line":97,"column":63,"offset":4217},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":97,"column":63,"offset":4217},"end":{"line":97,"column":69,"offset":4223},"indent":[]}},{"type":"text","value":" edition, and it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of ","position":{"start":{"line":97,"column":69,"offset":4223},"end":{"line":97,"column":252,"offset":4406},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":97,"column":252,"offset":4406},"end":{"line":97,"column":263,"offset":4417},"indent":[]}},{"type":"text","value":" in implementations which do not natively support it.","position":{"start":{"line":97,"column":263,"offset":4417},"end":{"line":97,"column":316,"offset":4470},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":4155},"end":{"line":97,"column":316,"offset":4470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This algorithm is exactly the one specified in ECMA-262, 5","position":{"start":{"line":99,"column":1,"offset":4474},"end":{"line":99,"column":59,"offset":4532},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":99,"column":59,"offset":4532},"end":{"line":99,"column":64,"offset":4537},"indent":[]}},{"type":"text","value":"th","position":{"start":{"line":99,"column":64,"offset":4537},"end":{"line":99,"column":66,"offset":4539},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":99,"column":66,"offset":4539},"end":{"line":99,"column":72,"offset":4545},"indent":[]}},{"type":"text","value":" edition, assuming ","position":{"start":{"line":99,"column":72,"offset":4545},"end":{"line":99,"column":91,"offset":4564},"indent":[]}},{"type":"link","title":null,"url":"../object","children":[{"type":"inlineCode","value":"Object","position":{"start":{"line":99,"column":92,"offset":4565},"end":{"line":99,"column":100,"offset":4573},"indent":[]}}],"position":{"start":{"line":99,"column":91,"offset":4564},"end":{"line":99,"column":112,"offset":4585},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":99,"column":112,"offset":4585},"end":{"line":99,"column":117,"offset":4590},"indent":[]}},{"type":"link","title":null,"url":"../typeerror","children":[{"type":"inlineCode","value":"TypeError","position":{"start":{"line":99,"column":118,"offset":4591},"end":{"line":99,"column":129,"offset":4602},"indent":[]}}],"position":{"start":{"line":99,"column":117,"offset":4590},"end":{"line":99,"column":144,"offset":4617},"indent":[]}},{"type":"text","value":" have their original values and that ","position":{"start":{"line":99,"column":144,"offset":4617},"end":{"line":99,"column":181,"offset":4654},"indent":[]}},{"type":"inlineCode","value":"fun.call","position":{"start":{"line":99,"column":181,"offset":4654},"end":{"line":99,"column":191,"offset":4664},"indent":[]}},{"type":"text","value":" evaluates to the original value of ","position":{"start":{"line":99,"column":191,"offset":4664},"end":{"line":99,"column":227,"offset":4700},"indent":[]}},{"type":"link","title":null,"url":"../function/call","children":[{"type":"inlineCode","value":"Function.prototype.call()","position":{"start":{"line":99,"column":228,"offset":4701},"end":{"line":99,"column":255,"offset":4728},"indent":[]}}],"position":{"start":{"line":99,"column":227,"offset":4700},"end":{"line":99,"column":274,"offset":4747},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":99,"column":274,"offset":4747},"end":{"line":99,"column":275,"offset":4748},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4474},"end":{"line":99,"column":275,"offset":4748},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: https://es5.github.io/#x15.4.4.18\n\nif (!Array.prototype['forEach']) {\n\n  Array.prototype.forEach = function(callback, thisArg) {\n\n    if (this == null) { throw new TypeError('Array.prototype.forEach called on null or undefined'); }\n\n    var T, k;\n    // 1. Let O be the result of calling toObject() passing the\n    // |this| value as the argument.\n    var O = Object(this);\n\n    // 2. Let lenValue be the result of calling the Get() internal\n    // method of O with the argument \"length\".\n    // 3. Let len be toUint32(lenValue).\n    var len = O.length >>> 0;\n\n    // 4. If isCallable(callback) is false, throw a TypeError exception.\n    // See: https://es5.github.com/#x9.11\n    if (typeof callback !== \"function\") { throw new TypeError(callback + ' is not a function'); }\n\n    // 5. If thisArg was supplied, let T be thisArg; else let\n    // T be undefined.\n    if (arguments.length > 1) { T = thisArg; }\n\n    // 6. Let k be 0\n    k = 0;\n\n    // 7. Repeat, while k < len\n    while (k < len) {\n\n      var kValue;\n\n      // a. Let Pk be ToString(k).\n      //    This is implicit for LHS operands of the in operator\n      // b. Let kPresent be the result of calling the HasProperty\n      //    internal method of O with argument Pk.\n      //    This step can be combined with c\n      // c. If kPresent is true, then\n      if (k in O) {\n\n        // i. Let kValue be the result of calling the Get internal\n        // method of O with argument Pk.\n        kValue = O[k];\n\n        // ii. Call the Call internal method of callback with T as\n        // the this value and argument list containing kValue, k, and O.\n        callback.call(T, kValue, k, O);\n      }\n      // d. Increase k by 1.\n      k++;\n    }\n    // 8. return undefined\n  };\n}","position":{"start":{"line":101,"column":1,"offset":4752},"end":{"line":157,"column":6,"offset":6787},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":159,"column":4,"offset":6794},"end":{"line":159,"column":12,"offset":6802},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":6791},"end":{"line":159,"column":12,"offset":6802},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"No operation for uninitialized values (sparse arrays)","position":{"start":{"line":161,"column":5,"offset":6810},"end":{"line":161,"column":58,"offset":6863},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":6806},"end":{"line":161,"column":58,"offset":6863},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const arraySparse = [1,3,,7]\nlet numCallbackRuns = 0\n\narraySparse.forEach(function(element) {\n  console.log(element)\n  numCallbackRuns++\n})\n\nconsole.log(\"numCallbackRuns: \", numCallbackRuns)\n\n// 1\n// 3\n// 7\n// numCallbackRuns: 3\n// comment: as you can see the missing value between 3 and 7 didn't invoke callback function.","position":{"start":{"line":163,"column":1,"offset":6867},"end":{"line":177,"column":98,"offset":7251},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Converting a for loop to forEach","position":{"start":{"line":179,"column":5,"offset":7259},"end":{"line":179,"column":37,"offset":7291},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":7255},"end":{"line":179,"column":37,"offset":7291},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const items = ['item1', 'item2', 'item3']\nconst copyItems = []\n\n// before\nfor (let i = 0; i < items.length; i++) {\n  copyItems.push(items[i])\n}\n\n// after\nitems.forEach(function(item){\n  copyItems.push(item)\n})","position":{"start":{"line":181,"column":1,"offset":7295},"end":{"line":192,"column":7,"offset":7555},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Printing the contents of an array","position":{"start":{"line":194,"column":5,"offset":7563},"end":{"line":194,"column":38,"offset":7596},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":7559},"end":{"line":194,"column":38,"offset":7596},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":196,"column":3,"offset":7602},"end":{"line":196,"column":8,"offset":7607},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":7600},"end":{"line":196,"column":10,"offset":7609},"indent":[]}},{"type":"text","value":" In order to display the content of an array in the console, you can use ","position":{"start":{"line":196,"column":10,"offset":7609},"end":{"line":196,"column":83,"offset":7682},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Console/table","children":[{"type":"inlineCode","value":"console.table()","position":{"start":{"line":196,"column":84,"offset":7683},"end":{"line":196,"column":101,"offset":7700},"indent":[]}}],"position":{"start":{"line":196,"column":83,"offset":7682},"end":{"line":196,"column":166,"offset":7765},"indent":[]}},{"type":"text","value":", which prints a formatted version of the array.","position":{"start":{"line":196,"column":166,"offset":7765},"end":{"line":196,"column":214,"offset":7813},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":7600},"end":{"line":196,"column":214,"offset":7813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example illustrates an alternative approach, using ","position":{"start":{"line":198,"column":1,"offset":7817},"end":{"line":198,"column":66,"offset":7882},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":198,"column":66,"offset":7882},"end":{"line":198,"column":77,"offset":7893},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":198,"column":77,"offset":7893},"end":{"line":198,"column":78,"offset":7894},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":7817},"end":{"line":198,"column":78,"offset":7894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following code logs a line for each element in an array:","position":{"start":{"line":200,"column":1,"offset":7898},"end":{"line":200,"column":61,"offset":7958},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":7898},"end":{"line":200,"column":61,"offset":7958},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function logArrayElements(element, index, array) {\n  console.log('a[' + index + '] = ' + element)\n}\n\n// Notice that index 2 is skipped, since there is no item at\n// that position in the array...\n[2, 5, , 9].forEach(logArrayElements)\n// logs:\n// a[0] = 2\n// a[1] = 5\n// a[3] = 9","position":{"start":{"line":202,"column":1,"offset":7962},"end":{"line":212,"column":16,"offset":8289},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using thisArg","position":{"start":{"line":214,"column":5,"offset":8297},"end":{"line":214,"column":18,"offset":8310},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":8293},"end":{"line":214,"column":18,"offset":8310},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following (contrived) example updates an object's properties from each entry in the array:","position":{"start":{"line":216,"column":1,"offset":8314},"end":{"line":216,"column":95,"offset":8408},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":8314},"end":{"line":216,"column":95,"offset":8408},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function Counter() {\n  this.sum = 0\n  this.count = 0\n}\nCounter.prototype.add = function(array) {\n  array.forEach(function countEntry(entry) {\n    this.sum += entry\n    ++this.count\n  }, this)\n}\n\nconst obj = new Counter()\nobj.add([2, 5, 9])\nobj.count\n// 3\nobj.sum\n// 16","position":{"start":{"line":218,"column":1,"offset":8412},"end":{"line":234,"column":10,"offset":8760},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Since the ","position":{"start":{"line":236,"column":1,"offset":8764},"end":{"line":236,"column":11,"offset":8774},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":236,"column":11,"offset":8774},"end":{"line":236,"column":20,"offset":8783},"indent":[]}},{"type":"text","value":" parameter (","position":{"start":{"line":236,"column":20,"offset":8783},"end":{"line":236,"column":32,"offset":8795},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":236,"column":32,"offset":8795},"end":{"line":236,"column":38,"offset":8801},"indent":[]}},{"type":"text","value":") is provided to ","position":{"start":{"line":236,"column":38,"offset":8801},"end":{"line":236,"column":55,"offset":8818},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":236,"column":55,"offset":8818},"end":{"line":236,"column":66,"offset":8829},"indent":[]}},{"type":"text","value":", it is passed to ","position":{"start":{"line":236,"column":66,"offset":8829},"end":{"line":236,"column":84,"offset":8847},"indent":[]}},{"type":"inlineCode","value":"callback","position":{"start":{"line":236,"column":84,"offset":8847},"end":{"line":236,"column":94,"offset":8857},"indent":[]}},{"type":"text","value":" each time it's invoked. The callback uses it as its ","position":{"start":{"line":236,"column":94,"offset":8857},"end":{"line":236,"column":147,"offset":8910},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":236,"column":147,"offset":8910},"end":{"line":236,"column":153,"offset":8916},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":236,"column":153,"offset":8916},"end":{"line":236,"column":160,"offset":8923},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":8764},"end":{"line":236,"column":160,"offset":8923},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":238,"column":3,"offset":8929},"end":{"line":238,"column":8,"offset":8934},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":8927},"end":{"line":238,"column":10,"offset":8936},"indent":[]}},{"type":"text","value":" If passing the callback function used an ","position":{"start":{"line":238,"column":10,"offset":8936},"end":{"line":238,"column":52,"offset":8978},"indent":[]}},{"type":"link","title":null,"url":"../../functions/arrow_functions","children":[{"type":"text","value":"arrow function expression","position":{"start":{"line":238,"column":53,"offset":8979},"end":{"line":238,"column":78,"offset":9004},"indent":[]}}],"position":{"start":{"line":238,"column":52,"offset":8978},"end":{"line":238,"column":112,"offset":9038},"indent":[]}},{"type":"text","value":", the ","position":{"start":{"line":238,"column":112,"offset":9038},"end":{"line":238,"column":118,"offset":9044},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":238,"column":118,"offset":9044},"end":{"line":238,"column":127,"offset":9053},"indent":[]}},{"type":"text","value":" parameter could be omitted, since all arrow functions lexically bind the ","position":{"start":{"line":238,"column":127,"offset":9053},"end":{"line":238,"column":201,"offset":9127},"indent":[]}},{"type":"link","title":null,"url":"../../operators/this","children":[{"type":"inlineCode","value":"this","position":{"start":{"line":238,"column":202,"offset":9128},"end":{"line":238,"column":208,"offset":9134},"indent":[]}}],"position":{"start":{"line":238,"column":201,"offset":9127},"end":{"line":238,"column":231,"offset":9157},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":238,"column":231,"offset":9157},"end":{"line":238,"column":238,"offset":9164},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":8927},"end":{"line":238,"column":238,"offset":9164},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"An object copy function","position":{"start":{"line":240,"column":5,"offset":9172},"end":{"line":240,"column":28,"offset":9195},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":9168},"end":{"line":240,"column":28,"offset":9195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following code creates a copy of a given object.","position":{"start":{"line":242,"column":1,"offset":9199},"end":{"line":242,"column":53,"offset":9251},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":9199},"end":{"line":242,"column":53,"offset":9251},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are different ways to create a copy of an object. The following is just one way and is presented to explain how ","position":{"start":{"line":244,"column":1,"offset":9255},"end":{"line":244,"column":119,"offset":9373},"indent":[]}},{"type":"inlineCode","value":"Array.prototype.forEach()","position":{"start":{"line":244,"column":119,"offset":9373},"end":{"line":244,"column":146,"offset":9400},"indent":[]}},{"type":"text","value":" works by using ECMAScript 5 ","position":{"start":{"line":244,"column":146,"offset":9400},"end":{"line":244,"column":175,"offset":9429},"indent":[]}},{"type":"inlineCode","value":"Object.*","position":{"start":{"line":244,"column":175,"offset":9429},"end":{"line":244,"column":185,"offset":9439},"indent":[]}},{"type":"text","value":" meta property functions.","position":{"start":{"line":244,"column":185,"offset":9439},"end":{"line":244,"column":210,"offset":9464},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":9255},"end":{"line":244,"column":210,"offset":9464},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function copy(obj) {\n  const copy = Object.create(Object.getPrototypeOf(obj))\n  const propNames = Object.getOwnPropertyNames(obj)\n\n  propNames.forEach(function(name) {\n    const desc = Object.getOwnPropertyDescriptor(obj, name)\n    Object.defineProperty(copy, name, desc)\n  })\n\n  return copy\n}\n\nconst obj1 = { a: 1, b: 2 }\nconst obj2 = copy(obj1) // obj2 looks like obj1 now","position":{"start":{"line":246,"column":1,"offset":9468},"end":{"line":259,"column":56,"offset":9899},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Modifying the array during iteration","position":{"start":{"line":261,"column":5,"offset":9907},"end":{"line":261,"column":41,"offset":9943},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":9903},"end":{"line":261,"column":41,"offset":9943},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example logs ","position":{"start":{"line":263,"column":1,"offset":9947},"end":{"line":263,"column":28,"offset":9974},"indent":[]}},{"type":"inlineCode","value":"one","position":{"start":{"line":263,"column":28,"offset":9974},"end":{"line":263,"column":33,"offset":9979},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":263,"column":33,"offset":9979},"end":{"line":263,"column":35,"offset":9981},"indent":[]}},{"type":"inlineCode","value":"two","position":{"start":{"line":263,"column":35,"offset":9981},"end":{"line":263,"column":40,"offset":9986},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":263,"column":40,"offset":9986},"end":{"line":263,"column":42,"offset":9988},"indent":[]}},{"type":"inlineCode","value":"four","position":{"start":{"line":263,"column":42,"offset":9988},"end":{"line":263,"column":48,"offset":9994},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":263,"column":48,"offset":9994},"end":{"line":263,"column":49,"offset":9995},"indent":[]}}],"position":{"start":{"line":263,"column":1,"offset":9947},"end":{"line":263,"column":49,"offset":9995},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the entry containing the value ","position":{"start":{"line":265,"column":1,"offset":9999},"end":{"line":265,"column":37,"offset":10035},"indent":[]}},{"type":"inlineCode","value":"two","position":{"start":{"line":265,"column":37,"offset":10035},"end":{"line":265,"column":42,"offset":10040},"indent":[]}},{"type":"text","value":" is reached, the first entry of the whole array is shifted off—resulting in all remaining entries moving up one position. Because element ","position":{"start":{"line":265,"column":42,"offset":10040},"end":{"line":265,"column":180,"offset":10178},"indent":[]}},{"type":"inlineCode","value":"four","position":{"start":{"line":265,"column":180,"offset":10178},"end":{"line":265,"column":186,"offset":10184},"indent":[]}},{"type":"text","value":" is now at an earlier position in the array, ","position":{"start":{"line":265,"column":186,"offset":10184},"end":{"line":265,"column":231,"offset":10229},"indent":[]}},{"type":"inlineCode","value":"three","position":{"start":{"line":265,"column":231,"offset":10229},"end":{"line":265,"column":238,"offset":10236},"indent":[]}},{"type":"text","value":" will be skipped.","position":{"start":{"line":265,"column":238,"offset":10236},"end":{"line":265,"column":255,"offset":10253},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":9999},"end":{"line":265,"column":255,"offset":10253},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"forEach()","position":{"start":{"line":267,"column":1,"offset":10257},"end":{"line":267,"column":12,"offset":10268},"indent":[]}},{"type":"text","value":" does not make a copy of the array before iterating.","position":{"start":{"line":267,"column":12,"offset":10268},"end":{"line":267,"column":64,"offset":10320},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":10257},"end":{"line":267,"column":64,"offset":10320},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"let words = ['one', 'two', 'three', 'four']\nwords.forEach(function(word) {\n  console.log(word)\n  if (word === 'two') {\n    words.shift() //'one' will delete from array\n  }\n}) // one // two // four\n\nconsole.log(words);  //['two', 'three', 'four']","position":{"start":{"line":269,"column":1,"offset":10324},"end":{"line":277,"column":52,"offset":10609},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Flatten an array","position":{"start":{"line":279,"column":5,"offset":10617},"end":{"line":279,"column":21,"offset":10633},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":10613},"end":{"line":279,"column":21,"offset":10633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The following example is only here for learning purpose. If you want to flatten an array using built-in methods you can use ","position":{"start":{"line":281,"column":1,"offset":10637},"end":{"line":281,"column":125,"offset":10761},"indent":[]}},{"type":"link","title":null,"url":"flat","children":[{"type":"inlineCode","value":"Array.prototype.flat()","position":{"start":{"line":281,"column":126,"offset":10762},"end":{"line":281,"column":150,"offset":10786},"indent":[]}}],"position":{"start":{"line":281,"column":125,"offset":10761},"end":{"line":281,"column":157,"offset":10793},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":281,"column":157,"offset":10793},"end":{"line":281,"column":158,"offset":10794},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":10637},"end":{"line":281,"column":158,"offset":10794},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function flatten(arr) {\n  const result = []\n\n  arr.forEach(function(i) {\n    if (Array.isArray(i)) {\n      result.push(...flatten(i))\n    } else {\n      result.push(i)\n    }\n  })\n\n  return result\n}\n\n// Usage\nconst nested = [1, 2, 3, [4, 5, [6, 7], 8, 9]]\n\nflatten(nested) // [1, 2, 3, 4, 5, 6, 7, 8, 9]","position":{"start":{"line":283,"column":1,"offset":10798},"end":{"line":300,"column":51,"offset":11173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":301,"column":1,"offset":11175}}}}