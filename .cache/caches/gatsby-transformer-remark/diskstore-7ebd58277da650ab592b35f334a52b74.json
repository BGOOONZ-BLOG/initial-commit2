{"expireTime":9007200904306550000,"key":"transformer-remark-markdown-html-ast-48b7bfd1b39a36ed9a72825824a30c74--","val":{"type":"root","children":[{"type":"raw","value":"<details>","position":{"start":{"line":6,"column":1,"offset":5},"end":{"line":6,"column":10,"offset":14}}},{"type":"text","value":"\n"},{"type":"raw","value":"<summary> Description</summary>   ","position":{"start":{"line":8,"column":1,"offset":16},"end":{"line":8,"column":35,"offset":50}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":10,"column":6,"offset":57},"end":{"line":10,"column":13,"offset":64}}}],"position":{"start":{"line":10,"column":3,"offset":54},"end":{"line":10,"column":13,"offset":64}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global fetch() method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":11,"column":3,"offset":67},"end":{"line":11,"column":269,"offset":333}}}],"position":{"start":{"line":11,"column":3,"offset":67},"end":{"line":11,"column":269,"offset":333}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":52},"end":{"line":11,"column":269,"offset":333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":13,"column":1,"offset":335},"end":{"line":13,"column":4,"offset":338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":14,"column":1,"offset":339},"end":{"line":14,"column":5,"offset":343}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"children":[{"type":"text","value":"Fetch API","position":{"start":{"line":14,"column":6,"offset":344},"end":{"line":14,"column":15,"offset":353}}}],"position":{"start":{"line":14,"column":5,"offset":343},"end":{"line":14,"column":76,"offset":414}}},{"type":"text","value":" provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global ","position":{"start":{"line":14,"column":76,"offset":414},"end":{"line":14,"column":226,"offset":564}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":14,"column":227,"offset":565},"end":{"line":14,"column":236,"offset":574}}}],"position":{"start":{"line":14,"column":226,"offset":564},"end":{"line":14,"column":293,"offset":631}}},{"type":"text","value":" method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":14,"column":293,"offset":631},"end":{"line":14,"column":389,"offset":727}}}],"position":{"start":{"line":14,"column":1,"offset":339},"end":{"line":14,"column":389,"offset":727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This kind of functionality was previously achieved using ","position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":16,"column":58,"offset":786}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"XMLHttpRequest"}],"position":{"start":{"line":16,"column":59,"offset":787},"end":{"line":16,"column":75,"offset":803}}}],"position":{"start":{"line":16,"column":58,"offset":786},"end":{"line":16,"column":141,"offset":869}}},{"type":"text","value":". Fetch provides a better alternative that can be easily used by other technologies such as ","position":{"start":{"line":16,"column":141,"offset":869},"end":{"line":16,"column":233,"offset":961}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"Service Workers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Service Workers"}],"position":{"start":{"line":16,"column":234,"offset":962},"end":{"line":16,"column":251,"offset":979}}}],"position":{"start":{"line":16,"column":233,"offset":961},"end":{"line":16,"column":339,"offset":1067}}},{"type":"text","value":". Fetch also provides a single logical place to define other HTTP-related concepts such as ","position":{"start":{"line":16,"column":339,"offset":1067},"end":{"line":16,"column":430,"offset":1158}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},"children":[{"type":"text","value":"CORS","position":{"start":{"line":16,"column":431,"offset":1159},"end":{"line":16,"column":435,"offset":1163}}}],"position":{"start":{"line":16,"column":430,"offset":1158},"end":{"line":16,"column":492,"offset":1220}}},{"type":"text","value":" and extensions to HTTP.","position":{"start":{"line":16,"column":492,"offset":1220},"end":{"line":16,"column":516,"offset":1244}}}],"position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":16,"column":516,"offset":1244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":18,"column":1,"offset":1246},"end":{"line":18,"column":5,"offset":1250}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch"}],"position":{"start":{"line":18,"column":5,"offset":1250},"end":{"line":18,"column":12,"offset":1257}}},{"type":"text","value":" specification differs from ","position":{"start":{"line":18,"column":12,"offset":1257},"end":{"line":18,"column":40,"offset":1285}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jQuery.ajax()"}],"position":{"start":{"line":18,"column":40,"offset":1285},"end":{"line":18,"column":55,"offset":1300}}},{"type":"text","value":" in the following significant ways:","position":{"start":{"line":18,"column":55,"offset":1300},"end":{"line":18,"column":90,"offset":1335}}}],"position":{"start":{"line":18,"column":1,"offset":1246},"end":{"line":18,"column":90,"offset":1335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The Promise returned from ","position":{"start":{"line":20,"column":5,"offset":1341},"end":{"line":20,"column":31,"offset":1367}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":20,"column":31,"offset":1367},"end":{"line":20,"column":40,"offset":1376}}},{"type":"text","value":" ","position":{"start":{"line":20,"column":40,"offset":1376},"end":{"line":20,"column":41,"offset":1377}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't reject on HTTP error status","position":{"start":{"line":20,"column":43,"offset":1379},"end":{"line":20,"column":76,"offset":1412}}}],"position":{"start":{"line":20,"column":41,"offset":1377},"end":{"line":20,"column":78,"offset":1414}}},{"type":"text","value":" even if the response is an HTTP 404 or 500. Instead, as soon as the server responds with headers, the Promise will resolve normally (with the ","position":{"start":{"line":20,"column":78,"offset":1414},"end":{"line":20,"column":221,"offset":1557}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok","title":"ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ok"}],"position":{"start":{"line":20,"column":222,"offset":1558},"end":{"line":20,"column":226,"offset":1562}}}],"position":{"start":{"line":20,"column":221,"offset":1557},"end":{"line":20,"column":294,"offset":1630}}},{"type":"text","value":" property of the response set to false if the response isn't in the range 200 -299), and it will only reject on network failure or if anything prevented the request from completing.","position":{"start":{"line":20,"column":294,"offset":1630},"end":{"line":20,"column":475,"offset":1811}}}],"position":{"start":{"line":20,"column":1,"offset":1337},"end":{"line":20,"column":475,"offset":1811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":21,"column":5,"offset":1816},"end":{"line":21,"column":14,"offset":1825}}},{"type":"text","value":" ","position":{"start":{"line":21,"column":14,"offset":1825},"end":{"line":21,"column":15,"offset":1826}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't send cross-origin cookies","position":{"start":{"line":21,"column":17,"offset":1828},"end":{"line":21,"column":48,"offset":1859}}}],"position":{"start":{"line":21,"column":15,"offset":1826},"end":{"line":21,"column":50,"offset":1861}}},{"type":"text","value":" unless you set the ","position":{"start":{"line":21,"column":50,"offset":1861},"end":{"line":21,"column":70,"offset":1881}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"credentials","position":{"start":{"line":21,"column":71,"offset":1882},"end":{"line":21,"column":82,"offset":1893}}}],"position":{"start":{"line":21,"column":70,"offset":1881},"end":{"line":21,"column":83,"offset":1894}}},{"type":"text","value":" ","position":{"start":{"line":21,"column":83,"offset":1894},"end":{"line":21,"column":84,"offset":1895}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters"},"children":[{"type":"text","value":"init option","position":{"start":{"line":21,"column":85,"offset":1896},"end":{"line":21,"column":96,"offset":1907}}}],"position":{"start":{"line":21,"column":84,"offset":1895},"end":{"line":21,"column":164,"offset":1975}}},{"type":"text","value":". (Since ","position":{"start":{"line":21,"column":164,"offset":1975},"end":{"line":21,"column":173,"offset":1984}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/whatwg/fetch/pull/585"},"children":[{"type":"text","value":"April 2018","position":{"start":{"line":21,"column":174,"offset":1985},"end":{"line":21,"column":184,"offset":1995}}}],"position":{"start":{"line":21,"column":173,"offset":1984},"end":{"line":21,"column":227,"offset":2038}}},{"type":"text","value":". The spec changed the default credentials policy to ","position":{"start":{"line":21,"column":227,"offset":2038},"end":{"line":21,"column":280,"offset":2091}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"same-origin"}],"position":{"start":{"line":21,"column":280,"offset":2091},"end":{"line":21,"column":293,"offset":2104}}},{"type":"text","value":". Firefox changed since 61.0b13.)","position":{"start":{"line":21,"column":293,"offset":2104},"end":{"line":21,"column":326,"offset":2137}}}],"position":{"start":{"line":21,"column":1,"offset":1812},"end":{"line":21,"column":326,"offset":2137}}},{"type":"text","value":"\n"}],"position":{"start":{"line":20,"column":1,"offset":1337},"end":{"line":21,"column":326,"offset":2137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A basic fetch request is really simple to set up. Have a look at the following code:","position":{"start":{"line":23,"column":1,"offset":2139},"end":{"line":23,"column":85,"offset":2223}}}],"position":{"start":{"line":23,"column":1,"offset":2139},"end":{"line":23,"column":85,"offset":2223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('http://example.com/movies.json')\n  .then(response => response.json())\n  .then(data => console.log(data));\n"}],"position":{"start":{"line":25,"column":1,"offset":2225},"end":{"line":29,"column":4,"offset":2347}}}],"position":{"start":{"line":25,"column":1,"offset":2225},"end":{"line":29,"column":4,"offset":2347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we are fetching a JSON file across the network and printing it to the console. The simplest use of ","position":{"start":{"line":31,"column":1,"offset":2349},"end":{"line":31,"column":105,"offset":2453}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":31,"column":105,"offset":2453},"end":{"line":31,"column":114,"offset":2462}}},{"type":"text","value":" takes one argument — the path to the resource you want to fetch — and does not directly return the JSON response body but instead returns a promise that resolves with a ","position":{"start":{"line":31,"column":114,"offset":2462},"end":{"line":31,"column":284,"offset":2632}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":31,"column":285,"offset":2633},"end":{"line":31,"column":295,"offset":2643}}}],"position":{"start":{"line":31,"column":284,"offset":2632},"end":{"line":31,"column":355,"offset":2703}}},{"type":"text","value":" object.","position":{"start":{"line":31,"column":355,"offset":2703},"end":{"line":31,"column":363,"offset":2711}}}],"position":{"start":{"line":31,"column":1,"offset":2349},"end":{"line":31,"column":363,"offset":2711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":33,"column":1,"offset":2713},"end":{"line":33,"column":5,"offset":2717}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":33,"column":6,"offset":2718},"end":{"line":33,"column":16,"offset":2728}}}],"position":{"start":{"line":33,"column":5,"offset":2717},"end":{"line":33,"column":76,"offset":2788}}},{"type":"text","value":" object, in turn, does not directly contain the actual JSON response body but is instead a representation of the entire HTTP response. So, to extract the JSON body content from the ","position":{"start":{"line":33,"column":76,"offset":2788},"end":{"line":33,"column":257,"offset":2969}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":33,"column":258,"offset":2970},"end":{"line":33,"column":268,"offset":2980}}}],"position":{"start":{"line":33,"column":257,"offset":2969},"end":{"line":33,"column":328,"offset":3040}}},{"type":"text","value":" object, we use the ","position":{"start":{"line":33,"column":328,"offset":3040},"end":{"line":33,"column":348,"offset":3060}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/json","title":"json()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"json()"}],"position":{"start":{"line":33,"column":349,"offset":3061},"end":{"line":33,"column":357,"offset":3069}}}],"position":{"start":{"line":33,"column":348,"offset":3060},"end":{"line":33,"column":431,"offset":3143}}},{"type":"text","value":" method, which returns a second promise that resolves with the result of parsing the response body text as JSON.","position":{"start":{"line":33,"column":431,"offset":3143},"end":{"line":33,"column":543,"offset":3255}}}],"position":{"start":{"line":33,"column":1,"offset":2713},"end":{"line":33,"column":543,"offset":3255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":35,"column":3,"offset":3259},"end":{"line":35,"column":8,"offset":3264}}}],"position":{"start":{"line":35,"column":1,"offset":3257},"end":{"line":35,"column":10,"offset":3266}}},{"type":"text","value":" See the ","position":{"start":{"line":35,"column":10,"offset":3266},"end":{"line":35,"column":19,"offset":3275}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#body"},"children":[{"type":"text","value":"Body","position":{"start":{"line":35,"column":20,"offset":3276},"end":{"line":35,"column":24,"offset":3280}}}],"position":{"start":{"line":35,"column":19,"offset":3275},"end":{"line":35,"column":102,"offset":3358}}},{"type":"text","value":" section for similar methods to extract other types of body content.","position":{"start":{"line":35,"column":102,"offset":3358},"end":{"line":35,"column":170,"offset":3426}}}],"position":{"start":{"line":35,"column":1,"offset":3257},"end":{"line":35,"column":170,"offset":3426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fetch requests are controlled by the ","position":{"start":{"line":37,"column":1,"offset":3428},"end":{"line":37,"column":38,"offset":3465}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"connect-src"}],"position":{"start":{"line":37,"column":38,"offset":3465},"end":{"line":37,"column":51,"offset":3478}}},{"type":"text","value":" directive of ","position":{"start":{"line":37,"column":51,"offset":3478},"end":{"line":37,"column":65,"offset":3492}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"},"children":[{"type":"text","value":"Content Security Policy","position":{"start":{"line":37,"column":66,"offset":3493},"end":{"line":37,"column":89,"offset":3516}}}],"position":{"start":{"line":37,"column":65,"offset":3492},"end":{"line":37,"column":173,"offset":3600}}},{"type":"text","value":" rather than the directive of the resources it's retrieving.","position":{"start":{"line":37,"column":173,"offset":3600},"end":{"line":37,"column":233,"offset":3660}}}],"position":{"start":{"line":37,"column":1,"offset":3428},"end":{"line":37,"column":233,"offset":3660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options","title":"Permalink to Supplying request options"},"children":[{"type":"text","value":"Supplying request options","position":{"start":{"line":39,"column":6,"offset":3667},"end":{"line":39,"column":31,"offset":3692}}}],"position":{"start":{"line":39,"column":5,"offset":3666},"end":{"line":39,"column":171,"offset":3832}}}],"position":{"start":{"line":39,"column":1,"offset":3662},"end":{"line":39,"column":171,"offset":3832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":41,"column":1,"offset":3834},"end":{"line":41,"column":5,"offset":3838}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":41,"column":5,"offset":3838},"end":{"line":41,"column":14,"offset":3847}}},{"type":"text","value":" method can optionally accept a second parameter, an ","position":{"start":{"line":41,"column":14,"offset":3847},"end":{"line":41,"column":67,"offset":3900}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":41,"column":67,"offset":3900},"end":{"line":41,"column":73,"offset":3906}}},{"type":"text","value":" object that allows you to control a number of different settings:","position":{"start":{"line":41,"column":73,"offset":3906},"end":{"line":41,"column":139,"offset":3972}}}],"position":{"start":{"line":41,"column":1,"offset":3834},"end":{"line":41,"column":139,"offset":3972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See ","position":{"start":{"line":43,"column":1,"offset":3974},"end":{"line":43,"column":5,"offset":3978}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":43,"column":6,"offset":3979},"end":{"line":43,"column":15,"offset":3988}}}],"position":{"start":{"line":43,"column":5,"offset":3978},"end":{"line":43,"column":72,"offset":4045}}},{"type":"text","value":" for the full options available, and more details.","position":{"start":{"line":43,"column":72,"offset":4045},"end":{"line":43,"column":122,"offset":4095}}}],"position":{"start":{"line":43,"column":1,"offset":3974},"end":{"line":43,"column":122,"offset":4095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"js\n// Example POST method implementation:\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\npostData('https://example.com/answer', { answer: 42 })\n  .then(data => {\n    console.log(data); // JSON data parsed by `data.json()` call\n  });\n"}],"position":{"start":{"line":45,"column":1,"offset":4097},"end":{"line":70,"column":4,"offset":5196}}}],"position":{"start":{"line":45,"column":1,"offset":4097},"end":{"line":70,"column":4,"offset":5196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that ","position":{"start":{"line":72,"column":1,"offset":5198},"end":{"line":72,"column":11,"offset":5208}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mode: \"no-cors\""}],"position":{"start":{"line":72,"column":11,"offset":5208},"end":{"line":72,"column":28,"offset":5225}}},{"type":"text","value":" only allows a limited set of headers in the request:","position":{"start":{"line":72,"column":28,"offset":5225},"end":{"line":72,"column":81,"offset":5278}}}],"position":{"start":{"line":72,"column":1,"offset":5198},"end":{"line":72,"column":81,"offset":5278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept"}],"position":{"start":{"line":74,"column":5,"offset":5284},"end":{"line":74,"column":13,"offset":5292}}}],"position":{"start":{"line":74,"column":1,"offset":5280},"end":{"line":74,"column":13,"offset":5292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept-Language"}],"position":{"start":{"line":75,"column":5,"offset":5297},"end":{"line":75,"column":22,"offset":5314}}}],"position":{"start":{"line":75,"column":1,"offset":5293},"end":{"line":75,"column":22,"offset":5314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Language"}],"position":{"start":{"line":76,"column":5,"offset":5319},"end":{"line":76,"column":23,"offset":5337}}}],"position":{"start":{"line":76,"column":1,"offset":5315},"end":{"line":76,"column":23,"offset":5337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Type"}],"position":{"start":{"line":77,"column":5,"offset":5342},"end":{"line":77,"column":19,"offset":5356}}},{"type":"text","value":" with a value of ","position":{"start":{"line":77,"column":19,"offset":5356},"end":{"line":77,"column":36,"offset":5373}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"application/x-www-form-urlencoded"}],"position":{"start":{"line":77,"column":36,"offset":5373},"end":{"line":77,"column":71,"offset":5408}}},{"type":"text","value":", ","position":{"start":{"line":77,"column":71,"offset":5408},"end":{"line":77,"column":73,"offset":5410}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"multipart/form-data"}],"position":{"start":{"line":77,"column":73,"offset":5410},"end":{"line":77,"column":94,"offset":5431}}},{"type":"text","value":", or ","position":{"start":{"line":77,"column":94,"offset":5431},"end":{"line":77,"column":99,"offset":5436}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text/plain"}],"position":{"start":{"line":77,"column":99,"offset":5436},"end":{"line":77,"column":111,"offset":5448}}}],"position":{"start":{"line":77,"column":1,"offset":5338},"end":{"line":77,"column":111,"offset":5448}}},{"type":"text","value":"\n"}],"position":{"start":{"line":74,"column":1,"offset":5280},"end":{"line":77,"column":111,"offset":5448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#sending_a_request_with_credentials_included","title":"Permalink to Sending a request with credentials included"},"children":[{"type":"text","value":"Sending a request with credentials included","position":{"start":{"line":79,"column":6,"offset":5455},"end":{"line":79,"column":49,"offset":5498}}}],"position":{"start":{"line":79,"column":5,"offset":5454},"end":{"line":79,"column":225,"offset":5674}}}],"position":{"start":{"line":79,"column":1,"offset":5450},"end":{"line":79,"column":225,"offset":5674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To cause browsers to send a request with credentials included on both same-origin and cross-origin calls, add ","position":{"start":{"line":81,"column":1,"offset":5676},"end":{"line":81,"column":111,"offset":5786}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":81,"column":111,"offset":5786},"end":{"line":81,"column":135,"offset":5810}}},{"type":"text","value":" to the ","position":{"start":{"line":81,"column":135,"offset":5810},"end":{"line":81,"column":143,"offset":5818}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":81,"column":143,"offset":5818},"end":{"line":81,"column":149,"offset":5824}}},{"type":"text","value":" object you pass to the ","position":{"start":{"line":81,"column":149,"offset":5824},"end":{"line":81,"column":173,"offset":5848}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":81,"column":173,"offset":5848},"end":{"line":81,"column":182,"offset":5857}}},{"type":"text","value":" method.","position":{"start":{"line":81,"column":182,"offset":5857},"end":{"line":81,"column":190,"offset":5865}}}],"position":{"start":{"line":81,"column":1,"offset":5676},"end":{"line":81,"column":190,"offset":5865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('https://example.com', {\n  credentials: 'include'\n});\n"}],"position":{"start":{"line":83,"column":1,"offset":5867},"end":{"line":88,"column":4,"offset":5937}}}],"position":{"start":{"line":83,"column":1,"offset":5867},"end":{"line":88,"column":4,"offset":5937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":90,"column":3,"offset":5941},"end":{"line":90,"column":8,"offset":5946}}}],"position":{"start":{"line":90,"column":1,"offset":5939},"end":{"line":90,"column":10,"offset":5948}}},{"type":"text","value":" ","position":{"start":{"line":90,"column":10,"offset":5948},"end":{"line":90,"column":11,"offset":5949}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Access-Control-Allow-Origin"}],"position":{"start":{"line":90,"column":11,"offset":5949},"end":{"line":90,"column":40,"offset":5978}}},{"type":"text","value":" is prohibited from using a wildcard for requests with ","position":{"start":{"line":90,"column":40,"offset":5978},"end":{"line":90,"column":95,"offset":6033}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":90,"column":95,"offset":6033},"end":{"line":90,"column":119,"offset":6057}}},{"type":"text","value":". In such cases, the exact origin must be provided; even if you are using a CORS unblocker extension, the requests will still fail.","position":{"start":{"line":90,"column":119,"offset":6057},"end":{"line":90,"column":250,"offset":6188}}}],"position":{"start":{"line":90,"column":1,"offset":5939},"end":{"line":90,"column":250,"offset":6188}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":92,"column":3,"offset":6192},"end":{"line":92,"column":8,"offset":6197}}}],"position":{"start":{"line":92,"column":1,"offset":6190},"end":{"line":92,"column":10,"offset":6199}}},{"type":"text","value":" Browsers should not send credentials in ","position":{"start":{"line":92,"column":10,"offset":6199},"end":{"line":92,"column":51,"offset":6240}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"preflight requests","position":{"start":{"line":92,"column":52,"offset":6241},"end":{"line":92,"column":70,"offset":6259}}}],"position":{"start":{"line":92,"column":51,"offset":6240},"end":{"line":92,"column":71,"offset":6260}}},{"type":"text","value":" irrespective of this setting. For more information see: ","position":{"start":{"line":92,"column":71,"offset":6260},"end":{"line":92,"column":128,"offset":6317}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#requests_with_credentials"},"children":[{"type":"text","value":"CORS > Requests with credentials","position":{"start":{"line":92,"column":129,"offset":6318},"end":{"line":92,"column":161,"offset":6350}}}],"position":{"start":{"line":92,"column":128,"offset":6317},"end":{"line":92,"column":244,"offset":6433}}},{"type":"text","value":".","position":{"start":{"line":92,"column":244,"offset":6433},"end":{"line":92,"column":245,"offset":6434}}}],"position":{"start":{"line":92,"column":1,"offset":6190},"end":{"line":92,"column":245,"offset":6434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you only want to send credentials if the request URL is on the same origin as the calling script, add ","position":{"start":{"line":94,"column":1,"offset":6436},"end":{"line":94,"column":106,"offset":6541}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'same-origin'"}],"position":{"start":{"line":94,"column":106,"offset":6541},"end":{"line":94,"column":134,"offset":6569}}},{"type":"text","value":".","position":{"start":{"line":94,"column":134,"offset":6569},"end":{"line":94,"column":135,"offset":6570}}}],"position":{"start":{"line":94,"column":1,"offset":6436},"end":{"line":94,"column":135,"offset":6570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// The calling script is on the origin 'https://example.com'\n\nfetch('https://example.com', {\n  credentials: 'same-origin'\n});\n"}],"position":{"start":{"line":96,"column":1,"offset":6572},"end":{"line":103,"column":4,"offset":6708}}}],"position":{"start":{"line":96,"column":1,"offset":6572},"end":{"line":103,"column":4,"offset":6708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To instead ensure browsers don't include credentials in the request, use ","position":{"start":{"line":105,"column":1,"offset":6710},"end":{"line":105,"column":74,"offset":6783}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'omit'"}],"position":{"start":{"line":105,"column":74,"offset":6783},"end":{"line":105,"column":95,"offset":6804}}},{"type":"text","value":".","position":{"start":{"line":105,"column":95,"offset":6804},"end":{"line":105,"column":96,"offset":6805}}}],"position":{"start":{"line":105,"column":1,"offset":6710},"end":{"line":105,"column":96,"offset":6805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('https://example.com', {\n  credentials: 'omit'\n})\n"}],"position":{"start":{"line":107,"column":1,"offset":6807},"end":{"line":112,"column":4,"offset":6873}}}],"position":{"start":{"line":107,"column":1,"offset":6807},"end":{"line":112,"column":4,"offset":6873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_json_data","title":"Permalink to Uploading JSON data"},"children":[{"type":"text","value":"Uploading JSON data","position":{"start":{"line":114,"column":6,"offset":6880},"end":{"line":114,"column":25,"offset":6899}}}],"position":{"start":{"line":114,"column":5,"offset":6879},"end":{"line":114,"column":153,"offset":7027}}}],"position":{"start":{"line":114,"column":1,"offset":6875},"end":{"line":114,"column":153,"offset":7027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":116,"column":1,"offset":7029},"end":{"line":116,"column":5,"offset":7033}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":116,"column":6,"offset":7034},"end":{"line":116,"column":15,"offset":7043}}}],"position":{"start":{"line":116,"column":5,"offset":7033},"end":{"line":116,"column":72,"offset":7100}}},{"type":"text","value":" to POST JSON-encoded data.","position":{"start":{"line":116,"column":72,"offset":7100},"end":{"line":116,"column":99,"offset":7127}}}],"position":{"start":{"line":116,"column":1,"offset":7029},"end":{"line":116,"column":99,"offset":7127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const data = { username: 'example' };\n\nfetch('https://example.com/profile', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n.then(response => response.json())\n.then(data => {\n  console.log('Success:', data);\n})\n.catch((error) => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":118,"column":1,"offset":7129},"end":{"line":136,"column":4,"offset":7483}}}],"position":{"start":{"line":118,"column":1,"offset":7129},"end":{"line":136,"column":4,"offset":7483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_a_file","title":"Permalink to Uploading a file"},"children":[{"type":"text","value":"Uploading a file","position":{"start":{"line":138,"column":6,"offset":7490},"end":{"line":138,"column":22,"offset":7506}}}],"position":{"start":{"line":138,"column":5,"offset":7489},"end":{"line":138,"column":144,"offset":7628}}}],"position":{"start":{"line":138,"column":1,"offset":7485},"end":{"line":138,"column":144,"offset":7628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":140,"column":1,"offset":7630},"end":{"line":140,"column":37,"offset":7666}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" />"}],"position":{"start":{"line":140,"column":37,"offset":7666},"end":{"line":140,"column":60,"offset":7689}}},{"type":"text","value":" input element, ","position":{"start":{"line":140,"column":60,"offset":7689},"end":{"line":140,"column":76,"offset":7705}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":140,"column":77,"offset":7706},"end":{"line":140,"column":89,"offset":7718}}}],"position":{"start":{"line":140,"column":76,"offset":7705},"end":{"line":140,"column":171,"offset":7800}}},{"type":"text","value":" and ","position":{"start":{"line":140,"column":171,"offset":7800},"end":{"line":140,"column":176,"offset":7805}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":140,"column":177,"offset":7806},"end":{"line":140,"column":186,"offset":7815}}}],"position":{"start":{"line":140,"column":176,"offset":7805},"end":{"line":140,"column":243,"offset":7872}}},{"type":"text","value":".","position":{"start":{"line":140,"column":243,"offset":7872},"end":{"line":140,"column":244,"offset":7873}}}],"position":{"start":{"line":140,"column":1,"offset":7630},"end":{"line":140,"column":244,"offset":7873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const formData = new FormData();\nconst fileField = document.querySelector('input[type=\"file\"]');\n\nformData.append('username', 'abc123');\nformData.append('avatar', fileField.files[0]);\n\nfetch('https://example.com/profile/avatar', {\n  method: 'PUT',\n  body: formData\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":142,"column":1,"offset":7875},"end":{"line":161,"column":4,"offset":8300}}}],"position":{"start":{"line":142,"column":1,"offset":7875},"end":{"line":161,"column":4,"offset":8300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_multiple_files","title":"Permalink to Uploading multiple files"},"children":[{"type":"text","value":"Uploading multiple files","position":{"start":{"line":163,"column":6,"offset":8307},"end":{"line":163,"column":30,"offset":8331}}}],"position":{"start":{"line":163,"column":5,"offset":8306},"end":{"line":163,"column":168,"offset":8469}}}],"position":{"start":{"line":163,"column":1,"offset":8302},"end":{"line":163,"column":168,"offset":8469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":165,"column":1,"offset":8471},"end":{"line":165,"column":37,"offset":8507}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" multiple />"}],"position":{"start":{"line":165,"column":37,"offset":8507},"end":{"line":165,"column":69,"offset":8539}}},{"type":"text","value":" input element, ","position":{"start":{"line":165,"column":69,"offset":8539},"end":{"line":165,"column":85,"offset":8555}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":165,"column":86,"offset":8556},"end":{"line":165,"column":98,"offset":8568}}}],"position":{"start":{"line":165,"column":85,"offset":8555},"end":{"line":165,"column":180,"offset":8650}}},{"type":"text","value":" and ","position":{"start":{"line":165,"column":180,"offset":8650},"end":{"line":165,"column":185,"offset":8655}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":165,"column":186,"offset":8656},"end":{"line":165,"column":195,"offset":8665}}}],"position":{"start":{"line":165,"column":185,"offset":8655},"end":{"line":165,"column":252,"offset":8722}}},{"type":"text","value":".","position":{"start":{"line":165,"column":252,"offset":8722},"end":{"line":165,"column":253,"offset":8723}}}],"position":{"start":{"line":165,"column":1,"offset":8471},"end":{"line":165,"column":253,"offset":8723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const formData = new FormData();\nconst photos = document.querySelector('input[type=\"file\"][multiple]');\n\nformData.append('title', 'My Vegas Vacation');\nfor (let i = 0; i < photos.files.length; i++) {\n  formData.append(`photos_${i}`, photos.files[i]);\n}\n\nfetch('https://example.com/posts', {\n  method: 'POST',\n  body: formData,\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":167,"column":1,"offset":8725},"end":{"line":188,"column":4,"offset":9212}}}],"position":{"start":{"line":167,"column":1,"offset":8725},"end":{"line":188,"column":4,"offset":9212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#processing_a_text_file_line_by_line","title":"Permalink to Processing a text file line by line"},"children":[{"type":"text","value":"Processing a text file line by line","position":{"start":{"line":190,"column":6,"offset":9219},"end":{"line":190,"column":41,"offset":9254}}}],"position":{"start":{"line":190,"column":5,"offset":9218},"end":{"line":190,"column":201,"offset":9414}}}],"position":{"start":{"line":190,"column":1,"offset":9214},"end":{"line":190,"column":201,"offset":9414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The chunks that are read from a response are not broken neatly at line boundaries and are Uint8Arrays, not strings. If you want to fetch a text file and process it line by line, it is up to you to handle these complications. The following example shows one way to do this by creating a line iterator (for simplicity, it assumes the text is UTF-8, and doesn't handle fetch errors).","position":{"start":{"line":192,"column":1,"offset":9416},"end":{"line":192,"column":381,"offset":9796}}}],"position":{"start":{"line":192,"column":1,"offset":9416},"end":{"line":192,"column":381,"offset":9796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"async function* makeTextFileLineIterator(fileURL) {\n  const utf8Decoder = new TextDecoder('utf-8');\n  const response = await fetch(fileURL);\n  const reader = response.body.getReader();\n  let { value: chunk, done: readerDone } = await reader.read();\n  chunk = chunk ? utf8Decoder.decode(chunk) : '';\n\n  const re = /\\n|\\r|\\r\\n/gm;\n  let startIndex = 0;\n  let result;\n\n  for (;;) {\n    let result = re.exec(chunk);\n    if (!result) {\n      if (readerDone) {\n        break;\n      }\n      let remainder = chunk.substr(startIndex);\n      ({ value: chunk, done: readerDone } = await reader.read());\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '');\n      startIndex = re.lastIndex = 0;\n      continue;\n    }\n    yield chunk.substring(startIndex, result.index);\n    startIndex = re.lastIndex;\n  }\n  if (startIndex < chunk.length) {\n    // last line didn't end in a newline char\n    yield chunk.substr(startIndex);\n  }\n}\n\nasync function run() {\n  for await (let line of makeTextFileLineIterator(urlOfFile)) {\n    processLine(line);\n  }\n}\n\nrun();\n"}],"position":{"start":{"line":194,"column":1,"offset":9798},"end":{"line":235,"column":4,"offset":10863}}}],"position":{"start":{"line":194,"column":1,"offset":9798},"end":{"line":235,"column":4,"offset":10863}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#checking_that_the_fetch_was_successful","title":"Permalink to Checking that the fetch was successful"},"children":[{"type":"text","value":"Checking that the fetch was successful","position":{"start":{"line":237,"column":6,"offset":10870},"end":{"line":237,"column":44,"offset":10908}}}],"position":{"start":{"line":237,"column":5,"offset":10869},"end":{"line":237,"column":210,"offset":11074}}}],"position":{"start":{"line":237,"column":1,"offset":10865},"end":{"line":237,"column":210,"offset":11074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A ","position":{"start":{"line":239,"column":1,"offset":11076},"end":{"line":239,"column":3,"offset":11078}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":239,"column":4,"offset":11079},"end":{"line":239,"column":13,"offset":11088}}}],"position":{"start":{"line":239,"column":3,"offset":11078},"end":{"line":239,"column":70,"offset":11145}}},{"type":"text","value":" promise will reject with a ","position":{"start":{"line":239,"column":70,"offset":11145},"end":{"line":239,"column":98,"offset":11173}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":239,"column":99,"offset":11174},"end":{"line":239,"column":110,"offset":11185}}}],"position":{"start":{"line":239,"column":98,"offset":11173},"end":{"line":239,"column":203,"offset":11278}}},{"type":"text","value":" when a network error is encountered or CORS is misconfigured on the server-side, although this usually means permission issues or similar — a 404 does not constitute a network error, for example. An accurate check for a successful ","position":{"start":{"line":239,"column":203,"offset":11278},"end":{"line":239,"column":435,"offset":11510}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":239,"column":435,"offset":11510},"end":{"line":239,"column":444,"offset":11519}}},{"type":"text","value":" would include checking that the promise resolved, then checking that the ","position":{"start":{"line":239,"column":444,"offset":11519},"end":{"line":239,"column":518,"offset":11593}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response.ok"}],"position":{"start":{"line":239,"column":519,"offset":11594},"end":{"line":239,"column":532,"offset":11607}}}],"position":{"start":{"line":239,"column":518,"offset":11593},"end":{"line":239,"column":595,"offset":11670}}},{"type":"text","value":" property has a value of true. The code would look something like this:","position":{"start":{"line":239,"column":595,"offset":11670},"end":{"line":239,"column":666,"offset":11741}}}],"position":{"start":{"line":239,"column":1,"offset":11076},"end":{"line":239,"column":666,"offset":11741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch('flowers.jpg')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not OK');\n    }\n    return response.blob();\n  })\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  })\n  .catch(error => {\n    console.error('There has been a problem with your fetch operation:', error);\n  });\n"}],"position":{"start":{"line":241,"column":1,"offset":11743},"end":{"line":255,"column":4,"offset":12089}}}],"position":{"start":{"line":241,"column":1,"offset":11743},"end":{"line":255,"column":4,"offset":12089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_your_own_request_object","title":"Permalink to Supplying your own request object"},"children":[{"type":"text","value":"Supplying your own request object","position":{"start":{"line":257,"column":6,"offset":12096},"end":{"line":257,"column":39,"offset":12129}}}],"position":{"start":{"line":257,"column":5,"offset":12095},"end":{"line":257,"column":195,"offset":12285}}}],"position":{"start":{"line":257,"column":1,"offset":12091},"end":{"line":257,"column":195,"offset":12285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of passing a path to the resource you want to request into the ","position":{"start":{"line":259,"column":1,"offset":12287},"end":{"line":259,"column":72,"offset":12358}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":259,"column":72,"offset":12358},"end":{"line":259,"column":81,"offset":12367}}},{"type":"text","value":" call, you can create a request object using the ","position":{"start":{"line":259,"column":81,"offset":12367},"end":{"line":259,"column":130,"offset":12416}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/Request","title":"Request()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":259,"column":131,"offset":12417},"end":{"line":259,"column":142,"offset":12428}}}],"position":{"start":{"line":259,"column":130,"offset":12416},"end":{"line":259,"column":221,"offset":12507}}},{"type":"text","value":" constructor, and pass that in as a ","position":{"start":{"line":259,"column":221,"offset":12507},"end":{"line":259,"column":257,"offset":12543}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":259,"column":257,"offset":12543},"end":{"line":259,"column":266,"offset":12552}}},{"type":"text","value":" method argument:","position":{"start":{"line":259,"column":266,"offset":12552},"end":{"line":259,"column":283,"offset":12569}}}],"position":{"start":{"line":259,"column":1,"offset":12287},"end":{"line":259,"column":283,"offset":12569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers();\n\nconst myRequest = new Request('flowers.jpg', {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'cors',\n  cache: 'default',\n});\n\nfetch(myRequest)\n  .then(response => response.blob())\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  });\n"}],"position":{"start":{"line":261,"column":1,"offset":12571},"end":{"line":276,"column":4,"offset":12866}}}],"position":{"start":{"line":261,"column":1,"offset":12571},"end":{"line":276,"column":4,"offset":12866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":278,"column":1,"offset":12868},"end":{"line":278,"column":12,"offset":12879}}},{"type":"text","value":" accepts exactly the same parameters as the ","position":{"start":{"line":278,"column":12,"offset":12879},"end":{"line":278,"column":56,"offset":12923}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":278,"column":56,"offset":12923},"end":{"line":278,"column":65,"offset":12932}}},{"type":"text","value":" method. You can even pass in an existing request object to create a copy of it:","position":{"start":{"line":278,"column":65,"offset":12932},"end":{"line":278,"column":145,"offset":13012}}}],"position":{"start":{"line":278,"column":1,"offset":12868},"end":{"line":278,"column":145,"offset":13012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const anotherRequest = new Request(myRequest, myInit);\n"}],"position":{"start":{"line":280,"column":1,"offset":13014},"end":{"line":282,"column":4,"offset":13076}}}],"position":{"start":{"line":280,"column":1,"offset":13014},"end":{"line":282,"column":4,"offset":13076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is pretty useful, as request and response bodies are one use only. Making a copy like this allows you to make use of the request/response again while varying the ","position":{"start":{"line":284,"column":1,"offset":13078},"end":{"line":284,"column":168,"offset":13245}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":284,"column":168,"offset":13245},"end":{"line":284,"column":174,"offset":13251}}},{"type":"text","value":" options if desired. The copy must be made before the body is read, and reading the body in the copy will also mark it as read in the original request.","position":{"start":{"line":284,"column":174,"offset":13251},"end":{"line":284,"column":325,"offset":13402}}}],"position":{"start":{"line":284,"column":1,"offset":13078},"end":{"line":284,"column":325,"offset":13402}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":286,"column":3,"offset":13406},"end":{"line":286,"column":8,"offset":13411}}}],"position":{"start":{"line":286,"column":1,"offset":13404},"end":{"line":286,"column":10,"offset":13413}}},{"type":"text","value":" There is also a ","position":{"start":{"line":286,"column":10,"offset":13413},"end":{"line":286,"column":27,"offset":13430}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/clone","title":"clone()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"clone()"}],"position":{"start":{"line":286,"column":28,"offset":13431},"end":{"line":286,"column":37,"offset":13440}}}],"position":{"start":{"line":286,"column":27,"offset":13430},"end":{"line":286,"column":112,"offset":13515}}},{"type":"text","value":" method that creates a copy. Both methods of creating a copy will fail if the body of the original request or response has already been read, but reading the body of a cloned response or request will not cause it to be marked as read in the original.","position":{"start":{"line":286,"column":112,"offset":13515},"end":{"line":286,"column":362,"offset":13765}}}],"position":{"start":{"line":286,"column":1,"offset":13404},"end":{"line":286,"column":362,"offset":13765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":288,"column":1,"offset":13767},"end":{"line":288,"column":5,"offset":13771}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers"}],"position":{"start":{"line":288,"column":6,"offset":13772},"end":{"line":288,"column":15,"offset":13781}}}],"position":{"start":{"line":288,"column":5,"offset":13771},"end":{"line":288,"column":74,"offset":13840}}},{"type":"text","value":" interface allows you to create your own headers object via the ","position":{"start":{"line":288,"column":74,"offset":13840},"end":{"line":288,"column":138,"offset":13904}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers","title":"Headers()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers()"}],"position":{"start":{"line":288,"column":139,"offset":13905},"end":{"line":288,"column":150,"offset":13916}}}],"position":{"start":{"line":288,"column":138,"offset":13904},"end":{"line":288,"column":229,"offset":13995}}},{"type":"text","value":" constructor. A headers object is a simple multi-map of names to values:","position":{"start":{"line":288,"column":229,"offset":13995},"end":{"line":288,"column":301,"offset":14067}}}],"position":{"start":{"line":288,"column":1,"offset":13767},"end":{"line":288,"column":301,"offset":14067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const content = 'Hello World';\nconst myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'text/plain');\nmyHeaders.append('Content-Length', content.length.toString());\nmyHeaders.append('X-Custom-Header', 'ProcessThisImmediately');\n"}],"position":{"start":{"line":290,"column":1,"offset":14069},"end":{"line":296,"column":4,"offset":14314}}}],"position":{"start":{"line":290,"column":1,"offset":14069},"end":{"line":296,"column":4,"offset":14314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The same can be achieved by passing an array of arrays or an object literal to the constructor:","position":{"start":{"line":298,"column":1,"offset":14316},"end":{"line":298,"column":96,"offset":14411}}}],"position":{"start":{"line":298,"column":1,"offset":14316},"end":{"line":298,"column":96,"offset":14411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers({\n  'Content-Type': 'text/plain',\n  'Content-Length': content.length.toString(),\n  'X-Custom-Header': 'ProcessThisImmediately'\n});\n"}],"position":{"start":{"line":300,"column":1,"offset":14413},"end":{"line":306,"column":4,"offset":14581}}}],"position":{"start":{"line":300,"column":1,"offset":14413},"end":{"line":306,"column":4,"offset":14581}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The contents can be queried and retrieved:","position":{"start":{"line":308,"column":1,"offset":14583},"end":{"line":308,"column":43,"offset":14625}}}],"position":{"start":{"line":308,"column":1,"offset":14583},"end":{"line":308,"column":43,"offset":14625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log(myHeaders.has('Content-Type')); // true\nconsole.log(myHeaders.has('Set-Cookie')); // false\nmyHeaders.set('Content-Type', 'text/html');\nmyHeaders.append('X-Custom-Header', 'AnotherValue');\n\nconsole.log(myHeaders.get('Content-Length')); // 11\nconsole.log(myHeaders.get('X-Custom-Header')); // ['ProcessThisImmediately', 'AnotherValue']\n\nmyHeaders.delete('X-Custom-Header');\nconsole.log(myHeaders.get('X-Custom-Header')); // null\n"}],"position":{"start":{"line":310,"column":1,"offset":14627},"end":{"line":321,"column":4,"offset":15073}}}],"position":{"start":{"line":310,"column":1,"offset":14627},"end":{"line":321,"column":4,"offset":15073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some of these operations are only useful in ","position":{"start":{"line":323,"column":1,"offset":15075},"end":{"line":323,"column":45,"offset":15119}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"ServiceWorkers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ServiceWorkers"}],"position":{"start":{"line":323,"column":46,"offset":15120},"end":{"line":323,"column":62,"offset":15136}}}],"position":{"start":{"line":323,"column":45,"offset":15119},"end":{"line":323,"column":149,"offset":15223}}},{"type":"text","value":", but they provide a much nicer API for manipulating headers.","position":{"start":{"line":323,"column":149,"offset":15223},"end":{"line":323,"column":210,"offset":15284}}}],"position":{"start":{"line":323,"column":1,"offset":15075},"end":{"line":323,"column":210,"offset":15284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All of the Headers methods throw a ","position":{"start":{"line":325,"column":1,"offset":15286},"end":{"line":325,"column":36,"offset":15321}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":325,"column":36,"offset":15321},"end":{"line":325,"column":47,"offset":15332}}},{"type":"text","value":" if a header name is used that is not a valid HTTP Header name. The mutation operations will throw a ","position":{"start":{"line":325,"column":47,"offset":15332},"end":{"line":325,"column":148,"offset":15433}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":325,"column":148,"offset":15433},"end":{"line":325,"column":159,"offset":15444}}},{"type":"text","value":" if there is an immutable guard (","position":{"start":{"line":325,"column":159,"offset":15444},"end":{"line":325,"column":192,"offset":15477}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard"},"children":[{"type":"text","value":"see below","position":{"start":{"line":325,"column":193,"offset":15478},"end":{"line":325,"column":202,"offset":15487}}}],"position":{"start":{"line":325,"column":192,"offset":15477},"end":{"line":325,"column":281,"offset":15566}}},{"type":"text","value":"). Otherwise, they fail silently. For example:","position":{"start":{"line":325,"column":281,"offset":15566},"end":{"line":325,"column":327,"offset":15612}}}],"position":{"start":{"line":325,"column":1,"offset":15286},"end":{"line":325,"column":327,"offset":15612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myResponse = Response.error();\ntry {\n  myResponse.headers.set('Origin', 'http://mybank.com');\n} catch (e) {\n  console.log('Cannot pretend to be a bank!');\n}\n"}],"position":{"start":{"line":327,"column":1,"offset":15614},"end":{"line":334,"column":4,"offset":15784}}}],"position":{"start":{"line":327,"column":1,"offset":15614},"end":{"line":334,"column":4,"offset":15784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A good use case for headers is checking whether the content type is correct before you process it further. For example:","position":{"start":{"line":336,"column":1,"offset":15786},"end":{"line":336,"column":120,"offset":15905}}}],"position":{"start":{"line":336,"column":1,"offset":15786},"end":{"line":336,"column":120,"offset":15905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch(myRequest)\n  .then(response => {\n     const contentType = response.headers.get('content-type');\n     if (!contentType || !contentType.includes('application/json')) {\n       throw new TypeError(\"Oops, we haven't got JSON!\");\n     }\n     return response.json();\n  })\n  .then(data => {\n      /* process your data further */\n  })\n  .catch(error => console.error(error));\n"}],"position":{"start":{"line":338,"column":1,"offset":15907},"end":{"line":351,"column":4,"offset":16287}}}],"position":{"start":{"line":338,"column":1,"offset":15907},"end":{"line":351,"column":4,"offset":16287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard","title":"Permalink to Guard"},"children":[{"type":"text","value":"Guard","position":{"start":{"line":353,"column":6,"offset":16294},"end":{"line":353,"column":11,"offset":16299}}}],"position":{"start":{"line":353,"column":5,"offset":16293},"end":{"line":353,"column":111,"offset":16399}}}],"position":{"start":{"line":353,"column":1,"offset":16289},"end":{"line":353,"column":111,"offset":16399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since headers can be sent in requests and received in responses, and have various limitations about what information can and should be mutable, headers' objects have a ","position":{"start":{"line":355,"column":1,"offset":16401},"end":{"line":355,"column":169,"offset":16569}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"guard","position":{"start":{"line":355,"column":170,"offset":16570},"end":{"line":355,"column":175,"offset":16575}}}],"position":{"start":{"line":355,"column":169,"offset":16569},"end":{"line":355,"column":176,"offset":16576}}},{"type":"text","value":" property. This is not exposed to the Web, but it affects which mutation operations are allowed on the headers object.","position":{"start":{"line":355,"column":176,"offset":16576},"end":{"line":355,"column":294,"offset":16694}}}],"position":{"start":{"line":355,"column":1,"offset":16401},"end":{"line":355,"column":294,"offset":16694}}},{"type":"text","value":"\n"},{"type":"raw","value":"</details>","position":{"start":{"line":359,"column":1,"offset":16698},"end":{"line":359,"column":11,"offset":16708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Fetch","position":{"start":{"line":361,"column":3,"offset":16712},"end":{"line":361,"column":8,"offset":16717}}}],"position":{"start":{"line":361,"column":1,"offset":16710},"end":{"line":361,"column":8,"offset":16717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json')  .then(response => response.json())  .then(data => {    console.log(data)  })  .catch(err => ...)\n"}],"position":{"start":{"line":363,"column":1,"offset":16719},"end":{"line":365,"column":4,"offset":16846}}}],"position":{"start":{"line":363,"column":1,"offset":16719},"end":{"line":365,"column":4,"offset":16846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Response","position":{"start":{"line":367,"column":5,"offset":16852},"end":{"line":367,"column":13,"offset":16860}}}],"position":{"start":{"line":367,"column":1,"offset":16848},"end":{"line":367,"column":13,"offset":16860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json').then(res => {  res.text()       // response body (=> Promise)  res.json()       // parse via JSON (=> Promise)  res.status       //=> 200  res.statusText   //=> 'OK'  res.redirected   //=> false  res.ok           //=> true  res.url          //=> 'http://site.com/data.json'  res.type         //=> 'basic'                   //   ('cors' 'default' 'error'                   //    'opaque' 'opaqueredirect')\n"}],"position":{"start":{"line":369,"column":1,"offset":16862},"end":{"line":371,"column":4,"offset":17296}}}],"position":{"start":{"line":369,"column":1,"offset":16862},"end":{"line":371,"column":4,"offset":17296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  res.headers.get('Content-Type')})\n"}],"position":{"start":{"line":373,"column":1,"offset":17298},"end":{"line":375,"column":4,"offset":17343}}}],"position":{"start":{"line":373,"column":1,"offset":17298},"end":{"line":375,"column":4,"offset":17343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Request options","position":{"start":{"line":377,"column":5,"offset":17349},"end":{"line":377,"column":20,"offset":17364}}}],"position":{"start":{"line":377,"column":1,"offset":17345},"end":{"line":377,"column":20,"offset":17364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json', {  method: 'post',  body: new FormData(form), // post body  body: JSON.stringify(...),\n"}],"position":{"start":{"line":379,"column":1,"offset":17366},"end":{"line":381,"column":4,"offset":17482}}}],"position":{"start":{"line":379,"column":1,"offset":17366},"end":{"line":381,"column":4,"offset":17482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  headers: {    'Accept': 'application/json'  },\n"}],"position":{"start":{"line":383,"column":1,"offset":17484},"end":{"line":385,"column":4,"offset":17542}}}],"position":{"start":{"line":383,"column":1,"offset":17484},"end":{"line":385,"column":4,"offset":17542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  credentials: 'same-origin', // send cookies  credentials: 'include',     // send cookies, even in CORS\n"}],"position":{"start":{"line":387,"column":1,"offset":17544},"end":{"line":389,"column":4,"offset":17658}}}],"position":{"start":{"line":387,"column":1,"offset":17544},"end":{"line":389,"column":4,"offset":17658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"})\n"}],"position":{"start":{"line":391,"column":1,"offset":17660},"end":{"line":393,"column":4,"offset":17672}}}],"position":{"start":{"line":391,"column":1,"offset":17660},"end":{"line":393,"column":4,"offset":17672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Catching errors","position":{"start":{"line":395,"column":5,"offset":17678},"end":{"line":395,"column":20,"offset":17693}}}],"position":{"start":{"line":395,"column":1,"offset":17674},"end":{"line":395,"column":20,"offset":17693}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json')  .then(checkStatus)\n"}],"position":{"start":{"line":397,"column":1,"offset":17695},"end":{"line":399,"column":4,"offset":17744}}}],"position":{"start":{"line":397,"column":1,"offset":17695},"end":{"line":399,"column":4,"offset":17744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function checkStatus (res) {  if (res.status >= 200 && res.status < 300) {    return res  } else {    let err = new Error(res.statusText)    err.response = res    throw err  }}\n"}],"position":{"start":{"line":401,"column":1,"offset":17746},"end":{"line":403,"column":4,"offset":17932}}}],"position":{"start":{"line":401,"column":1,"offset":17746},"end":{"line":403,"column":4,"offset":17932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Non-2xx responses are still successful requests. Use another function to turn them to errors.","position":{"start":{"line":405,"column":1,"offset":17934},"end":{"line":405,"column":94,"offset":18027}}}],"position":{"start":{"line":405,"column":1,"offset":17934},"end":{"line":405,"column":94,"offset":18027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Using with node.js","position":{"start":{"line":407,"column":5,"offset":18033},"end":{"line":407,"column":23,"offset":18051}}}],"position":{"start":{"line":407,"column":1,"offset":18029},"end":{"line":407,"column":23,"offset":18051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const fetch = require('isomorphic-fetch')\n"}],"position":{"start":{"line":409,"column":1,"offset":18053},"end":{"line":411,"column":4,"offset":18104}}}],"position":{"start":{"line":409,"column":1,"offset":18053},"end":{"line":411,"column":4,"offset":18104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See: ","position":{"start":{"line":413,"column":1,"offset":18106},"end":{"line":413,"column":6,"offset":18111}}},{"type":"element","tagName":"a","properties":{"href":"https://npmjs.com/package/isomorphic-fetch"},"children":[{"type":"text","value":"isomorphic-fetch","position":{"start":{"line":413,"column":7,"offset":18112},"end":{"line":413,"column":23,"offset":18128}}}],"position":{"start":{"line":413,"column":6,"offset":18111},"end":{"line":413,"column":68,"offset":18173}}},{"type":"text","value":" ","position":{"start":{"line":413,"column":68,"offset":18173},"end":{"line":413,"column":69,"offset":18174}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"(npmjs.com)","position":{"start":{"line":413,"column":70,"offset":18175},"end":{"line":413,"column":81,"offset":18186}}}],"position":{"start":{"line":413,"column":69,"offset":18174},"end":{"line":413,"column":82,"offset":18187}}}],"position":{"start":{"line":413,"column":1,"offset":18106},"end":{"line":413,"column":82,"offset":18187}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":414,"column":1,"offset":18188}}}}