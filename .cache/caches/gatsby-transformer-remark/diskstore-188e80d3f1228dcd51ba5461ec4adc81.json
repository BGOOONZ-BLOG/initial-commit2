{"expireTime":9007200903816788000,"key":"transformer-remark-markdown-html-ast-992189bb35de103973dfa45bd884f0f2--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/divide-two-integers/description/"},"children":[{"type":"text","value":"29. Divide Two Integers","position":{"start":{"line":2,"column":5,"offset":6},"end":{"line":2,"column":28,"offset":29}}}],"position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":93,"offset":94}}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":93,"offset":94}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":4,"column":5,"offset":102},"end":{"line":4,"column":13,"offset":110}}}],"position":{"start":{"line":4,"column":1,"offset":98},"end":{"line":4,"column":13,"offset":110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two integers ","position":{"start":{"line":6,"column":1,"offset":114},"end":{"line":6,"column":20,"offset":133}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dividend"}],"position":{"start":{"line":6,"column":20,"offset":133},"end":{"line":6,"column":30,"offset":143}}},{"type":"text","value":" and ","position":{"start":{"line":6,"column":30,"offset":143},"end":{"line":6,"column":35,"offset":148}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"divisor"}],"position":{"start":{"line":6,"column":35,"offset":148},"end":{"line":6,"column":44,"offset":157}}},{"type":"text","value":", divide two integers without using multiplication, division and mod operator.","position":{"start":{"line":6,"column":44,"offset":157},"end":{"line":6,"column":122,"offset":235}}}],"position":{"start":{"line":6,"column":1,"offset":114},"end":{"line":6,"column":122,"offset":235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Return the quotient after dividing ","position":{"start":{"line":8,"column":1,"offset":239},"end":{"line":8,"column":36,"offset":274}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dividend"}],"position":{"start":{"line":8,"column":36,"offset":274},"end":{"line":8,"column":46,"offset":284}}},{"type":"text","value":" by ","position":{"start":{"line":8,"column":46,"offset":284},"end":{"line":8,"column":50,"offset":288}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"divisor"}],"position":{"start":{"line":8,"column":50,"offset":288},"end":{"line":8,"column":59,"offset":297}}},{"type":"text","value":".","position":{"start":{"line":8,"column":59,"offset":297},"end":{"line":8,"column":60,"offset":298}}}],"position":{"start":{"line":8,"column":1,"offset":239},"end":{"line":8,"column":60,"offset":298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The integer division should truncate toward zero.","position":{"start":{"line":10,"column":1,"offset":302},"end":{"line":10,"column":50,"offset":351}}}],"position":{"start":{"line":10,"column":1,"offset":302},"end":{"line":10,"column":50,"offset":351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":12,"column":3,"offset":357},"end":{"line":12,"column":13,"offset":367}}}],"position":{"start":{"line":12,"column":1,"offset":355},"end":{"line":12,"column":15,"offset":369}}}],"position":{"start":{"line":12,"column":1,"offset":355},"end":{"line":12,"column":15,"offset":369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: dividend = 10, divisor = 3\nOutput: 3\n"}],"position":{"start":{"line":14,"column":1,"offset":373},"end":{"line":17,"column":4,"offset":427}}}],"position":{"start":{"line":14,"column":1,"offset":373},"end":{"line":17,"column":4,"offset":427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":19,"column":3,"offset":433},"end":{"line":19,"column":13,"offset":443}}}],"position":{"start":{"line":19,"column":1,"offset":431},"end":{"line":19,"column":15,"offset":445}}}],"position":{"start":{"line":19,"column":1,"offset":431},"end":{"line":19,"column":15,"offset":445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: dividend = 7, divisor = -3\nOutput: -2\n"}],"position":{"start":{"line":21,"column":1,"offset":449},"end":{"line":24,"column":4,"offset":504}}}],"position":{"start":{"line":21,"column":1,"offset":449},"end":{"line":24,"column":4,"offset":504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":26,"column":3,"offset":510},"end":{"line":26,"column":8,"offset":515}}}],"position":{"start":{"line":26,"column":1,"offset":508},"end":{"line":26,"column":10,"offset":517}}}],"position":{"start":{"line":26,"column":1,"offset":508},"end":{"line":26,"column":10,"offset":517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Both dividend and divisor will be 32-bit signed integers.","position":{"start":{"line":28,"column":3,"offset":523},"end":{"line":28,"column":60,"offset":580}}}],"position":{"start":{"line":28,"column":1,"offset":521},"end":{"line":28,"column":60,"offset":580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The divisor will never be 0.","position":{"start":{"line":29,"column":3,"offset":584},"end":{"line":29,"column":31,"offset":612}}}],"position":{"start":{"line":29,"column":1,"offset":582},"end":{"line":29,"column":31,"offset":612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: ","position":{"start":{"line":30,"column":3,"offset":616},"end":{"line":30,"column":117,"offset":730}}},{"type":"text","value":"[−231, 231 − 1]","position":{"start":{"line":30,"column":118,"offset":731},"end":{"line":30,"column":131,"offset":744}}},{"type":"text","value":". For the purpose of this problem, assume that your function returns 231 − 1 when the division result overflows.","position":{"start":{"line":30,"column":132,"offset":745},"end":{"line":30,"column":244,"offset":857}}}],"position":{"start":{"line":30,"column":1,"offset":614},"end":{"line":30,"column":244,"offset":857}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":521},"end":{"line":30,"column":244,"offset":857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":32,"column":5,"offset":865},"end":{"line":32,"column":14,"offset":874}}}],"position":{"start":{"line":32,"column":1,"offset":861},"end":{"line":32,"column":14,"offset":874}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Every decimal number can be represented as ","position":{"start":{"line":34,"column":1,"offset":878},"end":{"line":34,"column":44,"offset":921}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"a0*2^0 + a1*2^1 + a2*2^2 + ... + an*2^n"}],"position":{"start":{"line":34,"column":44,"offset":921},"end":{"line":34,"column":85,"offset":962}}},{"type":"text","value":".","position":{"start":{"line":34,"column":85,"offset":962},"end":{"line":34,"column":86,"offset":963}}}],"position":{"start":{"line":34,"column":1,"offset":878},"end":{"line":34,"column":86,"offset":963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Replace multiplication and division with binary shifting.","position":{"start":{"line":36,"column":1,"offset":967},"end":{"line":36,"column":58,"offset":1024}}}],"position":{"start":{"line":36,"column":1,"offset":967},"end":{"line":36,"column":58,"offset":1024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number} dividend\n * @param {number} divisor\n * @return {number}\n */\nlet divide = function (dividend, divisor) {\n    if (divisor === 0 || (divisor === -1 && dividend < -2147483647) || dividend > 2147483647 || dividend < -2147483648) {\n        return 2147483647;\n    }\n\n    const isNegative = (dividend < 0 && divisor >= 0) || (dividend >= 0 && divisor < 0);\n    const pDividend = Math.abs(dividend);\n    const pDivisor = Math.abs(divisor);\n\n    if (dividend === 0 || pDividend < pDivisor) {\n        return 0;\n    }\n\n    let doubling = pDivisor;\n    let count = 1;\n    while (doubling < pDividend && !(doubling & (1 << 30))) {\n        doubling <<= 1;\n        count <<= 1;\n    }\n    if (doubling > pDividend) {\n        doubling >>>= 1;\n        count >>>= 1;\n    }\n\n    const result = count + divide(pDividend - doubling, pDivisor);\n    return isNegative ? -result : result;\n};\n"}],"position":{"start":{"line":38,"column":1,"offset":1028},"end":{"line":71,"column":4,"offset":1959}}}],"position":{"start":{"line":38,"column":1,"offset":1028},"end":{"line":71,"column":4,"offset":1959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":73,"column":1,"offset":1963},"end":{"line":73,"column":4,"offset":1966}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":75,"column":1,"offset":1970},"end":{"line":75,"column":2,"offset":1971}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":3,"offset":1972},"end":{"line":75,"column":21,"offset":1990}}}],"position":{"start":{"line":75,"column":2,"offset":1971},"end":{"line":75,"column":22,"offset":1991}}},{"type":"text","value":"☆☆","position":{"start":{"line":75,"column":22,"offset":1991},"end":{"line":75,"column":24,"offset":1993}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":25,"offset":1994},"end":{"line":75,"column":43,"offset":2012}}}],"position":{"start":{"line":75,"column":24,"offset":1993},"end":{"line":75,"column":44,"offset":2013}}},{"type":"text","value":"☆☆","position":{"start":{"line":75,"column":44,"offset":2013},"end":{"line":75,"column":46,"offset":2015}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":47,"offset":2016},"end":{"line":75,"column":65,"offset":2034}}}],"position":{"start":{"line":75,"column":46,"offset":2015},"end":{"line":75,"column":66,"offset":2035}}},{"type":"text","value":"☆","position":{"start":{"line":75,"column":66,"offset":2035},"end":{"line":75,"column":67,"offset":2036}}}],"position":{"start":{"line":75,"column":1,"offset":1970},"end":{"line":75,"column":67,"offset":2036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":77,"column":1,"offset":2040},"end":{"line":77,"column":4,"offset":2043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":79,"column":1,"offset":2047},"end":{"line":79,"column":4,"offset":2050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":81,"column":1,"offset":2054},"end":{"line":81,"column":2,"offset":2055}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":81,"column":3,"offset":2056},"end":{"line":81,"column":21,"offset":2074}}}],"position":{"start":{"line":81,"column":2,"offset":2055},"end":{"line":81,"column":22,"offset":2075}}},{"type":"text","value":"☆☆","position":{"start":{"line":81,"column":22,"offset":2075},"end":{"line":81,"column":24,"offset":2077}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":81,"column":25,"offset":2078},"end":{"line":81,"column":43,"offset":2096}}}],"position":{"start":{"line":81,"column":24,"offset":2077},"end":{"line":81,"column":44,"offset":2097}}},{"type":"text","value":"☆","position":{"start":{"line":81,"column":44,"offset":2097},"end":{"line":81,"column":45,"offset":2098}}}],"position":{"start":{"line":81,"column":1,"offset":2054},"end":{"line":81,"column":45,"offset":2098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":83,"column":1,"offset":2102},"end":{"line":83,"column":4,"offset":2105}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":1,"offset":2107}}}}