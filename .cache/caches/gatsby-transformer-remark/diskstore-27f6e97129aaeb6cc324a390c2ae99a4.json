{"expireTime":9007200903816782000,"key":"transformer-remark-markdown-ast-fa24026bacdf5511802ba1e08ec37c17--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":2,"column":3,"offset":4},"end":{"line":2,"column":11,"offset":12},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":11,"offset":12},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":4,"column":4,"offset":19},"end":{"line":4,"column":32,"offset":47},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":16},"end":{"line":4,"column":32,"offset":47},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":6,"column":2,"offset":52},"end":{"line":6,"column":18,"offset":68},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":51},"end":{"line":6,"column":77,"offset":127},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":51},"end":{"line":6,"column":77,"offset":127},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":8,"column":2,"offset":132},"end":{"line":8,"column":142,"offset":272},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":227,"offset":357},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":131},"end":{"line":8,"column":227,"offset":357},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":10,"column":4,"offset":364},"end":{"line":10,"column":6,"offset":366},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":10,"column":7,"offset":367},"end":{"line":10,"column":33,"offset":393},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":366},"end":{"line":10,"column":100,"offset":460},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":361},"end":{"line":10,"column":100,"offset":460},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":12,"column":5,"offset":468},"end":{"line":12,"column":13,"offset":476},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":464},"end":{"line":12,"column":13,"offset":476},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":14,"column":1,"offset":480},"end":{"line":14,"column":16,"offset":495},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":18,"offset":497},"end":{"line":14,"column":19,"offset":498},"indent":[]}}],"position":{"start":{"line":14,"column":16,"offset":495},"end":{"line":14,"column":21,"offset":500},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":14,"column":21,"offset":500},"end":{"line":14,"column":35,"offset":514},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":37,"offset":516},"end":{"line":14,"column":38,"offset":517},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":514},"end":{"line":14,"column":40,"offset":519},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":14,"column":40,"offset":519},"end":{"line":14,"column":87,"offset":566},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":89,"offset":568},"end":{"line":14,"column":90,"offset":569},"indent":[]}}],"position":{"start":{"line":14,"column":87,"offset":566},"end":{"line":14,"column":92,"offset":571},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":14,"column":92,"offset":571},"end":{"line":14,"column":106,"offset":585},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":108,"offset":587},"end":{"line":14,"column":109,"offset":588},"indent":[]}}],"position":{"start":{"line":14,"column":106,"offset":585},"end":{"line":14,"column":111,"offset":590},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":111,"offset":590},"end":{"line":14,"column":112,"offset":591},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":480},"end":{"line":14,"column":112,"offset":591},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":16,"column":1,"offset":595},"end":{"line":16,"column":209,"offset":803},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":16,"column":209,"offset":803},"end":{"line":16,"column":216,"offset":810},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":16,"column":216,"offset":810},"end":{"line":16,"column":237,"offset":831},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":16,"column":237,"offset":831},"end":{"line":16,"column":246,"offset":840},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":16,"column":246,"offset":840},"end":{"line":16,"column":253,"offset":847},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":16,"column":253,"offset":847},"end":{"line":16,"column":260,"offset":854},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":16,"column":260,"offset":854},"end":{"line":16,"column":269,"offset":863},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":595},"end":{"line":16,"column":269,"offset":863},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":18,"column":3,"offset":869},"end":{"line":18,"column":13,"offset":879},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":867},"end":{"line":18,"column":15,"offset":881},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":867},"end":{"line":18,"column":15,"offset":881},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":20,"column":1,"offset":885},"end":{"line":32,"column":12,"offset":1161},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1167},"end":{"line":34,"column":13,"offset":1177},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1165},"end":{"line":34,"column":15,"offset":1179},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1165},"end":{"line":34,"column":15,"offset":1179},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1183},"end":{"line":52,"column":12,"offset":1502},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":54,"column":5,"offset":1510},"end":{"line":54,"column":14,"offset":1519},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1506},"end":{"line":54,"column":14,"offset":1519},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":56,"column":1,"offset":1523},"end":{"line":56,"column":8,"offset":1530},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":56,"column":8,"offset":1530},"end":{"line":56,"column":17,"offset":1539},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":56,"column":17,"offset":1539},"end":{"line":56,"column":57,"offset":1579},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":56,"column":57,"offset":1579},"end":{"line":56,"column":67,"offset":1589},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":56,"column":67,"offset":1589},"end":{"line":56,"column":73,"offset":1595},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":56,"column":73,"offset":1595},"end":{"line":56,"column":83,"offset":1605},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":83,"offset":1605},"end":{"line":56,"column":84,"offset":1606},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1523},"end":{"line":56,"column":84,"offset":1606},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":58,"column":1,"offset":1610},"end":{"line":58,"column":5,"offset":1614},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":5,"offset":1614},"end":{"line":58,"column":14,"offset":1623},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":58,"column":14,"offset":1623},"end":{"line":58,"column":35,"offset":1644},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":58,"column":35,"offset":1644},"end":{"line":58,"column":43,"offset":1652},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":58,"column":43,"offset":1652},"end":{"line":58,"column":71,"offset":1680},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":58,"column":71,"offset":1680},"end":{"line":58,"column":90,"offset":1699},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":90,"offset":1699},"end":{"line":58,"column":91,"offset":1700},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1610},"end":{"line":58,"column":91,"offset":1700},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":60,"column":1,"offset":1704},"end":{"line":64,"column":4,"offset":1843},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":66,"column":1,"offset":1847},"end":{"line":66,"column":27,"offset":1873},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1847},"end":{"line":66,"column":27,"offset":1873},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":68,"column":1,"offset":1877},"end":{"line":88,"column":4,"offset":2336},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":90,"column":1,"offset":2340},"end":{"line":90,"column":4,"offset":2343},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":92,"column":1,"offset":2347},"end":{"line":94,"column":9,"offset":2392},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":94,"column":9,"offset":2392},"end":{"line":94,"column":38,"offset":2421},"indent":[]}}],"position":{"start":{"line":94,"column":9,"offset":2392},"end":{"line":94,"column":38,"offset":2421},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":94,"column":38,"offset":2421},"end":{"line":95,"column":23,"offset":2445},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":95,"column":23,"offset":2445},"end":{"line":95,"column":66,"offset":2488},"indent":[]}}],"position":{"start":{"line":95,"column":23,"offset":2445},"end":{"line":95,"column":66,"offset":2488},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":95,"column":66,"offset":2488},"end":{"line":97,"column":51,"offset":2560},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":97,"column":51,"offset":2560},"end":{"line":97,"column":127,"offset":2636},"indent":[]}}],"position":{"start":{"line":97,"column":51,"offset":2560},"end":{"line":97,"column":127,"offset":2636},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":97,"column":127,"offset":2636},"end":{"line":98,"column":32,"offset":2669},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":98,"column":32,"offset":2669},"end":{"line":98,"column":89,"offset":2726},"indent":[]}}],"position":{"start":{"line":98,"column":32,"offset":2669},"end":{"line":98,"column":89,"offset":2726},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2347},"end":{"line":98,"column":89,"offset":2726},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":100,"column":1,"offset":2730},"end":{"line":100,"column":4,"offset":2733},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":102,"column":2,"offset":2738},"end":{"line":102,"column":142,"offset":2878},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2737},"end":{"line":102,"column":271,"offset":3007},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2737},"end":{"line":102,"column":271,"offset":3007},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":104,"column":4,"offset":3014},"end":{"line":104,"column":6,"offset":3016},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":104,"column":7,"offset":3017},"end":{"line":104,"column":55,"offset":3065},"indent":[]}}],"position":{"start":{"line":104,"column":6,"offset":3016},"end":{"line":104,"column":144,"offset":3154},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3011},"end":{"line":104,"column":144,"offset":3154},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":106,"column":5,"offset":3162},"end":{"line":106,"column":13,"offset":3170},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3158},"end":{"line":106,"column":13,"offset":3170},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":108,"column":1,"offset":3174},"end":{"line":108,"column":20,"offset":3193},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3174},"end":{"line":108,"column":20,"offset":3193},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":110,"column":1,"offset":3197},"end":{"line":117,"column":4,"offset":3303},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":119,"column":1,"offset":3307},"end":{"line":119,"column":127,"offset":3433},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":119,"column":127,"offset":3433},"end":{"line":119,"column":133,"offset":3439},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":119,"column":133,"offset":3439},"end":{"line":119,"column":134,"offset":3440},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3307},"end":{"line":119,"column":134,"offset":3440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":121,"column":1,"offset":3444},"end":{"line":121,"column":41,"offset":3484},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":41,"offset":3484},"end":{"line":121,"column":47,"offset":3490},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":47,"offset":3490},"end":{"line":121,"column":48,"offset":3491},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3444},"end":{"line":121,"column":48,"offset":3491},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":123,"column":3,"offset":3497},"end":{"line":123,"column":8,"offset":3502},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3495},"end":{"line":123,"column":10,"offset":3504},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3495},"end":{"line":123,"column":10,"offset":3504},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":125,"column":3,"offset":3510},"end":{"line":125,"column":41,"offset":3548},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":3510},"end":{"line":125,"column":41,"offset":3548},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3508},"end":{"line":125,"column":41,"offset":3548},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":126,"column":3,"offset":3552},"end":{"line":126,"column":99,"offset":3648},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3552},"end":{"line":126,"column":99,"offset":3648},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3550},"end":{"line":126,"column":99,"offset":3648},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":127,"column":3,"offset":3652},"end":{"line":127,"column":125,"offset":3774},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":3652},"end":{"line":127,"column":125,"offset":3774},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3650},"end":{"line":127,"column":125,"offset":3774},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3508},"end":{"line":127,"column":125,"offset":3774},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":129,"column":3,"offset":3780},"end":{"line":129,"column":11,"offset":3788},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3778},"end":{"line":129,"column":13,"offset":3790},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3778},"end":{"line":129,"column":13,"offset":3790},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":131,"column":1,"offset":3794},"end":{"line":131,"column":41,"offset":3834},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3794},"end":{"line":131,"column":41,"offset":3834},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":133,"column":1,"offset":3838},"end":{"line":140,"column":4,"offset":3898},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":142,"column":1,"offset":3902},"end":{"line":142,"column":56,"offset":3957},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3902},"end":{"line":142,"column":56,"offset":3957},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":144,"column":1,"offset":3961},"end":{"line":151,"column":4,"offset":4045},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":153,"column":5,"offset":4053},"end":{"line":153,"column":14,"offset":4062},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4049},"end":{"line":153,"column":14,"offset":4062},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":155,"column":6,"offset":4071},"end":{"line":155,"column":9,"offset":4074},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4066},"end":{"line":155,"column":9,"offset":4074},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":157,"column":1,"offset":4078},"end":{"line":157,"column":11,"offset":4088},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4078},"end":{"line":157,"column":11,"offset":4088},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":159,"column":1,"offset":4092},"end":{"line":159,"column":11,"offset":4102},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":159,"column":11,"offset":4102},"end":{"line":159,"column":17,"offset":4108},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":159,"column":17,"offset":4108},"end":{"line":159,"column":18,"offset":4109},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":4092},"end":{"line":159,"column":18,"offset":4109},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":161,"column":3,"offset":4115},"end":{"line":161,"column":25,"offset":4137},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":161,"column":25,"offset":4137},"end":{"line":161,"column":37,"offset":4149},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":161,"column":37,"offset":4149},"end":{"line":161,"column":38,"offset":4150},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":4115},"end":{"line":161,"column":38,"offset":4150},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4113},"end":{"line":161,"column":38,"offset":4150},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":162,"column":3,"offset":4154},"end":{"line":162,"column":26,"offset":4177},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":162,"column":26,"offset":4177},"end":{"line":162,"column":42,"offset":4193},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":162,"column":42,"offset":4193},"end":{"line":162,"column":46,"offset":4197},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":162,"column":46,"offset":4197},"end":{"line":162,"column":57,"offset":4208},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":162,"column":57,"offset":4208},"end":{"line":162,"column":65,"offset":4216},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":4154},"end":{"line":162,"column":65,"offset":4216},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":4152},"end":{"line":162,"column":65,"offset":4216},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4113},"end":{"line":162,"column":65,"offset":4216},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":164,"column":1,"offset":4220},"end":{"line":192,"column":4,"offset":4866},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":194,"column":6,"offset":4875},"end":{"line":194,"column":9,"offset":4878},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":4870},"end":{"line":194,"column":9,"offset":4878},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":196,"column":1,"offset":4882},"end":{"line":196,"column":23,"offset":4904},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4882},"end":{"line":196,"column":23,"offset":4904},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":198,"column":1,"offset":4908},"end":{"line":234,"column":4,"offset":5800},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":236,"column":1,"offset":5804},"end":{"line":236,"column":4,"offset":5807},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":238,"column":1,"offset":5811},"end":{"line":240,"column":9,"offset":5856},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":240,"column":9,"offset":5856},"end":{"line":240,"column":38,"offset":5885},"indent":[]}}],"position":{"start":{"line":240,"column":9,"offset":5856},"end":{"line":240,"column":38,"offset":5885},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":240,"column":38,"offset":5885},"end":{"line":241,"column":23,"offset":5909},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":241,"column":23,"offset":5909},"end":{"line":241,"column":66,"offset":5952},"indent":[]}}],"position":{"start":{"line":241,"column":23,"offset":5909},"end":{"line":241,"column":66,"offset":5952},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":241,"column":66,"offset":5952},"end":{"line":243,"column":48,"offset":6021},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":243,"column":48,"offset":6021},"end":{"line":243,"column":121,"offset":6094},"indent":[]}}],"position":{"start":{"line":243,"column":48,"offset":6021},"end":{"line":243,"column":121,"offset":6094},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5811},"end":{"line":243,"column":121,"offset":6094},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":245,"column":1,"offset":6098},"end":{"line":245,"column":4,"offset":6101},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":247,"column":2,"offset":6106},"end":{"line":247,"column":142,"offset":6246},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":6105},"end":{"line":247,"column":277,"offset":6381},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":6105},"end":{"line":247,"column":277,"offset":6381},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":249,"column":4,"offset":6388},"end":{"line":249,"column":6,"offset":6390},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":249,"column":7,"offset":6391},"end":{"line":249,"column":58,"offset":6442},"indent":[]}}],"position":{"start":{"line":249,"column":6,"offset":6390},"end":{"line":249,"column":150,"offset":6534},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6385},"end":{"line":249,"column":150,"offset":6534},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":251,"column":5,"offset":6542},"end":{"line":251,"column":13,"offset":6550},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":6538},"end":{"line":251,"column":13,"offset":6550},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":253,"column":1,"offset":6554},"end":{"line":253,"column":20,"offset":6573},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6554},"end":{"line":253,"column":20,"offset":6573},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":255,"column":1,"offset":6577},"end":{"line":262,"column":4,"offset":6683},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":264,"column":1,"offset":6687},"end":{"line":264,"column":127,"offset":6813},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":264,"column":127,"offset":6813},"end":{"line":264,"column":133,"offset":6819},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":264,"column":133,"offset":6819},"end":{"line":264,"column":134,"offset":6820},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6687},"end":{"line":264,"column":134,"offset":6820},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":266,"column":1,"offset":6824},"end":{"line":266,"column":41,"offset":6864},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":266,"column":41,"offset":6864},"end":{"line":266,"column":47,"offset":6870},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":266,"column":47,"offset":6870},"end":{"line":266,"column":48,"offset":6871},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6824},"end":{"line":266,"column":48,"offset":6871},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":268,"column":3,"offset":6877},"end":{"line":268,"column":8,"offset":6882},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6875},"end":{"line":268,"column":10,"offset":6884},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6875},"end":{"line":268,"column":10,"offset":6884},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":270,"column":3,"offset":6890},"end":{"line":270,"column":41,"offset":6928},"indent":[]}}],"position":{"start":{"line":270,"column":3,"offset":6890},"end":{"line":270,"column":41,"offset":6928},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6888},"end":{"line":270,"column":41,"offset":6928},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":271,"column":3,"offset":6932},"end":{"line":271,"column":99,"offset":7028},"indent":[]}}],"position":{"start":{"line":271,"column":3,"offset":6932},"end":{"line":271,"column":99,"offset":7028},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":6930},"end":{"line":271,"column":99,"offset":7028},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6888},"end":{"line":271,"column":99,"offset":7028},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":273,"column":3,"offset":7034},"end":{"line":273,"column":11,"offset":7042},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":7032},"end":{"line":273,"column":13,"offset":7044},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":7032},"end":{"line":273,"column":13,"offset":7044},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":275,"column":1,"offset":7048},"end":{"line":275,"column":33,"offset":7080},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":7048},"end":{"line":275,"column":33,"offset":7080},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":277,"column":1,"offset":7084},"end":{"line":284,"column":4,"offset":7144},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":286,"column":1,"offset":7148},"end":{"line":286,"column":56,"offset":7203},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":7148},"end":{"line":286,"column":56,"offset":7203},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":288,"column":1,"offset":7207},"end":{"line":295,"column":4,"offset":7291},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":297,"column":5,"offset":7299},"end":{"line":297,"column":14,"offset":7308},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":7295},"end":{"line":297,"column":14,"offset":7308},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":299,"column":6,"offset":7317},"end":{"line":299,"column":9,"offset":7320},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7312},"end":{"line":299,"column":9,"offset":7320},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":301,"column":1,"offset":7324},"end":{"line":301,"column":16,"offset":7339},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":301,"column":17,"offset":7340},"end":{"line":301,"column":65,"offset":7388},"indent":[]}}],"position":{"start":{"line":301,"column":16,"offset":7339},"end":{"line":301,"column":135,"offset":7458},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":301,"column":135,"offset":7458},"end":{"line":301,"column":136,"offset":7459},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7324},"end":{"line":301,"column":136,"offset":7459},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":303,"column":1,"offset":7463},"end":{"line":303,"column":50,"offset":7512},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":303,"column":50,"offset":7512},"end":{"line":303,"column":56,"offset":7518},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":303,"column":56,"offset":7518},"end":{"line":303,"column":97,"offset":7559},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":303,"column":97,"offset":7559},"end":{"line":303,"column":103,"offset":7565},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":303,"column":103,"offset":7565},"end":{"line":303,"column":104,"offset":7566},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7463},"end":{"line":303,"column":104,"offset":7566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":305,"column":1,"offset":7570},"end":{"line":305,"column":50,"offset":7619},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7570},"end":{"line":305,"column":50,"offset":7619},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":307,"column":1,"offset":7623},"end":{"line":344,"column":4,"offset":8501},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":346,"column":6,"offset":8510},"end":{"line":346,"column":9,"offset":8513},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":8505},"end":{"line":346,"column":9,"offset":8513},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":348,"column":1,"offset":8517},"end":{"line":348,"column":38,"offset":8554},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":348,"column":39,"offset":8555},"end":{"line":348,"column":87,"offset":8603},"indent":[]}}],"position":{"start":{"line":348,"column":38,"offset":8554},"end":{"line":348,"column":157,"offset":8673},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":348,"column":157,"offset":8673},"end":{"line":348,"column":158,"offset":8674},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8517},"end":{"line":348,"column":158,"offset":8674},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":350,"column":1,"offset":8678},"end":{"line":386,"column":4,"offset":9570},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":388,"column":1,"offset":9574},"end":{"line":388,"column":4,"offset":9577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":390,"column":1,"offset":9581},"end":{"line":392,"column":10,"offset":9625},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":392,"column":10,"offset":9625},"end":{"line":392,"column":40,"offset":9655},"indent":[]}}],"position":{"start":{"line":392,"column":10,"offset":9625},"end":{"line":392,"column":40,"offset":9655},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":392,"column":40,"offset":9655},"end":{"line":394,"column":25,"offset":9701},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":394,"column":25,"offset":9701},"end":{"line":394,"column":74,"offset":9750},"indent":[]}}],"position":{"start":{"line":394,"column":25,"offset":9701},"end":{"line":394,"column":74,"offset":9750},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":9581},"end":{"line":394,"column":74,"offset":9750},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":396,"column":1,"offset":9754},"end":{"line":396,"column":4,"offset":9757},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":398,"column":2,"offset":9762},"end":{"line":398,"column":142,"offset":9902},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9761},"end":{"line":398,"column":217,"offset":9977},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9761},"end":{"line":398,"column":217,"offset":9977},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":400,"column":4,"offset":9984},"end":{"line":400,"column":6,"offset":9986},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":400,"column":7,"offset":9987},"end":{"line":400,"column":29,"offset":10009},"indent":[]}}],"position":{"start":{"line":400,"column":6,"offset":9986},"end":{"line":400,"column":91,"offset":10071},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9981},"end":{"line":400,"column":91,"offset":10071},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":402,"column":5,"offset":10079},"end":{"line":402,"column":13,"offset":10087},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":10075},"end":{"line":402,"column":13,"offset":10087},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":404,"column":1,"offset":10091},"end":{"line":404,"column":30,"offset":10120},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":31,"offset":10121},"end":{"line":404,"column":38,"offset":10128},"indent":[]}}],"position":{"start":{"line":404,"column":30,"offset":10120},"end":{"line":404,"column":39,"offset":10129},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":404,"column":39,"offset":10129},"end":{"line":404,"column":60,"offset":10150},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":61,"offset":10151},"end":{"line":404,"column":68,"offset":10158},"indent":[]}}],"position":{"start":{"line":404,"column":60,"offset":10150},"end":{"line":404,"column":69,"offset":10159},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":404,"column":69,"offset":10159},"end":{"line":404,"column":91,"offset":10181},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":10091},"end":{"line":404,"column":91,"offset":10181},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":406,"column":1,"offset":10185},"end":{"line":406,"column":112,"offset":10296},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":10185},"end":{"line":406,"column":112,"offset":10296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":408,"column":1,"offset":10300},"end":{"line":408,"column":83,"offset":10382},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":10300},"end":{"line":408,"column":83,"offset":10382},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":410,"column":3,"offset":10388},"end":{"line":410,"column":11,"offset":10396},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":10386},"end":{"line":410,"column":13,"offset":10398},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":10386},"end":{"line":410,"column":13,"offset":10398},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":412,"column":1,"offset":10402},"end":{"line":423,"column":4,"offset":10501},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":425,"column":5,"offset":10509},"end":{"line":425,"column":14,"offset":10518},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":10505},"end":{"line":425,"column":14,"offset":10518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":427,"column":1,"offset":10522},"end":{"line":427,"column":25,"offset":10546},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":10522},"end":{"line":427,"column":25,"offset":10546},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":429,"column":1,"offset":10550},"end":{"line":452,"column":4,"offset":11031},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":454,"column":1,"offset":11035},"end":{"line":454,"column":4,"offset":11038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":456,"column":1,"offset":11042},"end":{"line":458,"column":10,"offset":11086},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":458,"column":10,"offset":11086},"end":{"line":458,"column":40,"offset":11116},"indent":[]}}],"position":{"start":{"line":458,"column":10,"offset":11086},"end":{"line":458,"column":40,"offset":11116},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":458,"column":40,"offset":11116},"end":{"line":460,"column":22,"offset":11159},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":460,"column":22,"offset":11159},"end":{"line":460,"column":68,"offset":11205},"indent":[]}}],"position":{"start":{"line":460,"column":22,"offset":11159},"end":{"line":460,"column":68,"offset":11205},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":11042},"end":{"line":460,"column":68,"offset":11205},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":462,"column":1,"offset":11209},"end":{"line":462,"column":4,"offset":11212},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":464,"column":2,"offset":11217},"end":{"line":464,"column":142,"offset":11357},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":11216},"end":{"line":464,"column":223,"offset":11438},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":11216},"end":{"line":464,"column":223,"offset":11438},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":466,"column":4,"offset":11445},"end":{"line":466,"column":6,"offset":11447},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":466,"column":7,"offset":11448},"end":{"line":466,"column":32,"offset":11473},"indent":[]}}],"position":{"start":{"line":466,"column":6,"offset":11447},"end":{"line":466,"column":97,"offset":11538},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":11442},"end":{"line":466,"column":97,"offset":11538},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":468,"column":5,"offset":11546},"end":{"line":468,"column":13,"offset":11554},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":11542},"end":{"line":468,"column":13,"offset":11554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":470,"column":1,"offset":11558},"end":{"line":470,"column":28,"offset":11585},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":29,"offset":11586},"end":{"line":470,"column":30,"offset":11587},"indent":[]}}],"position":{"start":{"line":470,"column":28,"offset":11585},"end":{"line":470,"column":31,"offset":11588},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":470,"column":31,"offset":11588},"end":{"line":470,"column":38,"offset":11595},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":39,"offset":11596},"end":{"line":470,"column":40,"offset":11597},"indent":[]}}],"position":{"start":{"line":470,"column":38,"offset":11595},"end":{"line":470,"column":41,"offset":11598},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":470,"column":41,"offset":11598},"end":{"line":470,"column":59,"offset":11616},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":60,"offset":11617},"end":{"line":470,"column":61,"offset":11618},"indent":[]}}],"position":{"start":{"line":470,"column":59,"offset":11616},"end":{"line":470,"column":62,"offset":11619},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":470,"column":62,"offset":11619},"end":{"line":470,"column":100,"offset":11657},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":11558},"end":{"line":470,"column":100,"offset":11657},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":472,"column":1,"offset":11661},"end":{"line":472,"column":39,"offset":11699},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":11661},"end":{"line":472,"column":39,"offset":11699},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":474,"column":1,"offset":11703},"end":{"line":474,"column":112,"offset":11814},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":11703},"end":{"line":474,"column":112,"offset":11814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":476,"column":1,"offset":11818},"end":{"line":476,"column":83,"offset":11900},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":11818},"end":{"line":476,"column":83,"offset":11900},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":478,"column":3,"offset":11906},"end":{"line":478,"column":11,"offset":11914},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11904},"end":{"line":478,"column":13,"offset":11916},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11904},"end":{"line":478,"column":13,"offset":11916},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":480,"column":1,"offset":11920},"end":{"line":484,"column":4,"offset":11959},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":486,"column":3,"offset":11965},"end":{"line":486,"column":13,"offset":11975},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11963},"end":{"line":486,"column":15,"offset":11977},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11963},"end":{"line":486,"column":15,"offset":11977},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":488,"column":1,"offset":11981},"end":{"line":488,"column":47,"offset":12027},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":488,"column":48,"offset":12028},"end":{"line":488,"column":49,"offset":12029},"indent":[]}}],"position":{"start":{"line":488,"column":47,"offset":12027},"end":{"line":488,"column":50,"offset":12030},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":488,"column":50,"offset":12030},"end":{"line":488,"column":51,"offset":12031},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":488,"column":52,"offset":12032},"end":{"line":488,"column":53,"offset":12033},"indent":[]}}],"position":{"start":{"line":488,"column":51,"offset":12031},"end":{"line":488,"column":54,"offset":12034},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":488,"column":54,"offset":12034},"end":{"line":488,"column":68,"offset":12048},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11981},"end":{"line":488,"column":68,"offset":12048},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":490,"column":5,"offset":12056},"end":{"line":490,"column":14,"offset":12065},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":12052},"end":{"line":490,"column":14,"offset":12065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":492,"column":1,"offset":12069},"end":{"line":492,"column":44,"offset":12112},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":12069},"end":{"line":492,"column":44,"offset":12112},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":494,"column":1,"offset":12116},"end":{"line":494,"column":7,"offset":12122},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":494,"column":7,"offset":12122},"end":{"line":494,"column":15,"offset":12130},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":494,"column":15,"offset":12130},"end":{"line":494,"column":27,"offset":12142},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":494,"column":27,"offset":12142},"end":{"line":494,"column":37,"offset":12152},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":494,"column":37,"offset":12152},"end":{"line":494,"column":42,"offset":12157},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":42,"offset":12157},"end":{"line":494,"column":54,"offset":12169},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":494,"column":54,"offset":12169},"end":{"line":494,"column":69,"offset":12184},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":69,"offset":12184},"end":{"line":494,"column":81,"offset":12196},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":494,"column":81,"offset":12196},"end":{"line":494,"column":119,"offset":12234},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":12116},"end":{"line":494,"column":119,"offset":12234},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":496,"column":1,"offset":12238},"end":{"line":516,"column":4,"offset":12606},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":518,"column":1,"offset":12610},"end":{"line":518,"column":4,"offset":12613},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":520,"column":1,"offset":12617},"end":{"line":522,"column":10,"offset":12663},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":522,"column":10,"offset":12663},"end":{"line":522,"column":40,"offset":12693},"indent":[]}}],"position":{"start":{"line":522,"column":10,"offset":12663},"end":{"line":522,"column":40,"offset":12693},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":522,"column":40,"offset":12693},"end":{"line":523,"column":24,"offset":12718},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":523,"column":24,"offset":12718},"end":{"line":523,"column":68,"offset":12762},"indent":[]}}],"position":{"start":{"line":523,"column":24,"offset":12718},"end":{"line":523,"column":68,"offset":12762},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12617},"end":{"line":523,"column":68,"offset":12762},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":525,"column":1,"offset":12766},"end":{"line":525,"column":4,"offset":12769},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":527,"column":2,"offset":12774},"end":{"line":527,"column":142,"offset":12914},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12773},"end":{"line":527,"column":201,"offset":12973},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12773},"end":{"line":527,"column":201,"offset":12973},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":529,"column":4,"offset":12980},"end":{"line":529,"column":6,"offset":12982},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":529,"column":7,"offset":12983},"end":{"line":529,"column":20,"offset":12996},"indent":[]}}],"position":{"start":{"line":529,"column":6,"offset":12982},"end":{"line":529,"column":74,"offset":13050},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12977},"end":{"line":529,"column":74,"offset":13050},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":531,"column":5,"offset":13058},"end":{"line":531,"column":13,"offset":13066},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":13054},"end":{"line":531,"column":13,"offset":13066},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":533,"column":1,"offset":13070},"end":{"line":533,"column":125,"offset":13194},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":13070},"end":{"line":533,"column":125,"offset":13194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":535,"column":1,"offset":13198},"end":{"line":535,"column":42,"offset":13239},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":13198},"end":{"line":535,"column":42,"offset":13239},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":537,"column":1,"offset":13243},"end":{"line":545,"column":4,"offset":13308},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":547,"column":1,"offset":13312},"end":{"line":547,"column":44,"offset":13355},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":547,"column":44,"offset":13355},"end":{"line":547,"column":48,"offset":13359},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":547,"column":48,"offset":13359},"end":{"line":547,"column":56,"offset":13367},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":547,"column":58,"offset":13369},"end":{"line":547,"column":59,"offset":13370},"indent":[]}}],"position":{"start":{"line":547,"column":56,"offset":13367},"end":{"line":547,"column":61,"offset":13372},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":61,"offset":13372},"end":{"line":547,"column":64,"offset":13375},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":547,"column":66,"offset":13377},"end":{"line":547,"column":67,"offset":13378},"indent":[]}}],"position":{"start":{"line":547,"column":64,"offset":13375},"end":{"line":547,"column":69,"offset":13380},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":69,"offset":13380},"end":{"line":547,"column":72,"offset":13383},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":547,"column":74,"offset":13385},"end":{"line":547,"column":75,"offset":13386},"indent":[]}}],"position":{"start":{"line":547,"column":72,"offset":13383},"end":{"line":547,"column":77,"offset":13388},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":77,"offset":13388},"end":{"line":547,"column":80,"offset":13391},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":547,"column":82,"offset":13393},"end":{"line":547,"column":83,"offset":13394},"indent":[]}}],"position":{"start":{"line":547,"column":80,"offset":13391},"end":{"line":547,"column":85,"offset":13396},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":547,"column":85,"offset":13396},"end":{"line":547,"column":92,"offset":13403},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":13312},"end":{"line":547,"column":92,"offset":13403},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":549,"column":3,"offset":13409},"end":{"line":549,"column":8,"offset":13414},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":13407},"end":{"line":549,"column":10,"offset":13416},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":13407},"end":{"line":549,"column":10,"offset":13416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":551,"column":1,"offset":13420},"end":{"line":551,"column":51,"offset":13470},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":551,"column":52,"offset":13471},"end":{"line":551,"column":53,"offset":13472},"indent":[]}}],"position":{"start":{"line":551,"column":51,"offset":13470},"end":{"line":551,"column":54,"offset":13473},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":551,"column":54,"offset":13473},"end":{"line":551,"column":55,"offset":13474},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":56,"offset":13475},"end":{"line":551,"column":57,"offset":13476},"indent":[]}}],"position":{"start":{"line":551,"column":55,"offset":13474},"end":{"line":551,"column":58,"offset":13477},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":551,"column":58,"offset":13477},"end":{"line":551,"column":79,"offset":13498},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":80,"offset":13499},"end":{"line":551,"column":81,"offset":13500},"indent":[]}}],"position":{"start":{"line":551,"column":79,"offset":13498},"end":{"line":551,"column":82,"offset":13501},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":551,"column":82,"offset":13501},"end":{"line":551,"column":127,"offset":13546},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":13420},"end":{"line":551,"column":127,"offset":13546},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":553,"column":5,"offset":13554},"end":{"line":553,"column":14,"offset":13563},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":13550},"end":{"line":553,"column":14,"offset":13563},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":555,"column":1,"offset":13567},"end":{"line":555,"column":8,"offset":13574},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":555,"column":8,"offset":13574},"end":{"line":555,"column":17,"offset":13583},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":555,"column":17,"offset":13583},"end":{"line":555,"column":50,"offset":13616},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":555,"column":50,"offset":13616},"end":{"line":555,"column":66,"offset":13632},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":555,"column":66,"offset":13632},"end":{"line":555,"column":70,"offset":13636},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":555,"column":70,"offset":13636},"end":{"line":555,"column":86,"offset":13652},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":555,"column":86,"offset":13652},"end":{"line":555,"column":87,"offset":13653},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":13567},"end":{"line":555,"column":87,"offset":13653},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":557,"column":1,"offset":13657},"end":{"line":559,"column":50,"offset":13821},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":561,"column":1,"offset":13825},"end":{"line":561,"column":27,"offset":13851},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":13825},"end":{"line":561,"column":27,"offset":13851},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":563,"column":1,"offset":13855},"end":{"line":583,"column":4,"offset":14355},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":585,"column":1,"offset":14359},"end":{"line":585,"column":4,"offset":14362},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":587,"column":1,"offset":14366},"end":{"line":589,"column":10,"offset":14410},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":589,"column":10,"offset":14410},"end":{"line":589,"column":40,"offset":14440},"indent":[]}}],"position":{"start":{"line":589,"column":10,"offset":14410},"end":{"line":589,"column":40,"offset":14440},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":589,"column":40,"offset":14440},"end":{"line":590,"column":24,"offset":14465},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":590,"column":24,"offset":14465},"end":{"line":590,"column":68,"offset":14509},"indent":[]}}],"position":{"start":{"line":590,"column":24,"offset":14465},"end":{"line":590,"column":68,"offset":14509},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":590,"column":68,"offset":14509},"end":{"line":592,"column":21,"offset":14551},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":592,"column":21,"offset":14551},"end":{"line":592,"column":67,"offset":14597},"indent":[]}}],"position":{"start":{"line":592,"column":21,"offset":14551},"end":{"line":592,"column":67,"offset":14597},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":592,"column":67,"offset":14597},"end":{"line":593,"column":39,"offset":14637},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":593,"column":39,"offset":14637},"end":{"line":593,"column":103,"offset":14701},"indent":[]}}],"position":{"start":{"line":593,"column":39,"offset":14637},"end":{"line":593,"column":103,"offset":14701},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":593,"column":103,"offset":14701},"end":{"line":594,"column":40,"offset":14742},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":594,"column":40,"offset":14742},"end":{"line":594,"column":105,"offset":14807},"indent":[]}}],"position":{"start":{"line":594,"column":40,"offset":14742},"end":{"line":594,"column":105,"offset":14807},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":594,"column":105,"offset":14807},"end":{"line":595,"column":39,"offset":14847},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":595,"column":39,"offset":14847},"end":{"line":595,"column":103,"offset":14911},"indent":[]}}],"position":{"start":{"line":595,"column":39,"offset":14847},"end":{"line":595,"column":103,"offset":14911},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":595,"column":103,"offset":14911},"end":{"line":596,"column":50,"offset":14962},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":596,"column":50,"offset":14962},"end":{"line":596,"column":125,"offset":15037},"indent":[]}}],"position":{"start":{"line":596,"column":50,"offset":14962},"end":{"line":596,"column":125,"offset":15037},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":14366},"end":{"line":596,"column":125,"offset":15037},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":598,"column":1,"offset":15041},"end":{"line":598,"column":4,"offset":15044},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":600,"column":2,"offset":15049},"end":{"line":600,"column":142,"offset":15189},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":15048},"end":{"line":600,"column":247,"offset":15294},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":15048},"end":{"line":600,"column":247,"offset":15294},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":602,"column":4,"offset":15301},"end":{"line":602,"column":6,"offset":15303},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":602,"column":7,"offset":15304},"end":{"line":602,"column":43,"offset":15340},"indent":[]}}],"position":{"start":{"line":602,"column":6,"offset":15303},"end":{"line":602,"column":120,"offset":15417},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":15298},"end":{"line":602,"column":120,"offset":15417},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":604,"column":5,"offset":15425},"end":{"line":604,"column":13,"offset":15433},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":15421},"end":{"line":604,"column":13,"offset":15433},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":606,"column":1,"offset":15437},"end":{"line":606,"column":37,"offset":15473},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":38,"offset":15474},"end":{"line":606,"column":39,"offset":15475},"indent":[]}}],"position":{"start":{"line":606,"column":37,"offset":15473},"end":{"line":606,"column":40,"offset":15476},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":606,"column":40,"offset":15476},"end":{"line":606,"column":88,"offset":15524},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":89,"offset":15525},"end":{"line":606,"column":90,"offset":15526},"indent":[]}}],"position":{"start":{"line":606,"column":88,"offset":15524},"end":{"line":606,"column":91,"offset":15527},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":606,"column":91,"offset":15527},"end":{"line":606,"column":92,"offset":15528},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":15437},"end":{"line":606,"column":92,"offset":15528},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":608,"column":1,"offset":15532},"end":{"line":608,"column":160,"offset":15691},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":15532},"end":{"line":608,"column":160,"offset":15691},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":610,"column":1,"offset":15695},"end":{"line":610,"column":54,"offset":15748},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":15695},"end":{"line":610,"column":54,"offset":15748},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":612,"column":3,"offset":15754},"end":{"line":612,"column":13,"offset":15764},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15752},"end":{"line":612,"column":15,"offset":15766},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15752},"end":{"line":612,"column":15,"offset":15766},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":614,"column":1,"offset":15770},"end":{"line":620,"column":4,"offset":15983},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":622,"column":3,"offset":15989},"end":{"line":622,"column":13,"offset":15999},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15987},"end":{"line":622,"column":15,"offset":16001},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15987},"end":{"line":622,"column":15,"offset":16001},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":624,"column":1,"offset":16005},"end":{"line":629,"column":4,"offset":16119},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":631,"column":5,"offset":16127},"end":{"line":631,"column":14,"offset":16136},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":16123},"end":{"line":631,"column":14,"offset":16136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":633,"column":1,"offset":16140},"end":{"line":633,"column":110,"offset":16249},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":110,"offset":16249},"end":{"line":633,"column":113,"offset":16252},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":633,"column":113,"offset":16252},"end":{"line":633,"column":126,"offset":16265},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":633,"column":126,"offset":16265},"end":{"line":633,"column":136,"offset":16275},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":633,"column":136,"offset":16275},"end":{"line":633,"column":227,"offset":16366},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":633,"column":227,"offset":16366},"end":{"line":633,"column":232,"offset":16371},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":633,"column":232,"offset":16371},"end":{"line":633,"column":250,"offset":16389},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":250,"offset":16389},"end":{"line":633,"column":253,"offset":16392},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":633,"column":253,"offset":16392},"end":{"line":633,"column":267,"offset":16406},"indent":[]}}],"position":{"start":{"line":633,"column":1,"offset":16140},"end":{"line":633,"column":267,"offset":16406},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":635,"column":1,"offset":16410},"end":{"line":635,"column":9,"offset":16418},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":635,"column":9,"offset":16418},"end":{"line":635,"column":19,"offset":16428},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":635,"column":19,"offset":16428},"end":{"line":635,"column":50,"offset":16459},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":635,"column":50,"offset":16459},"end":{"line":635,"column":53,"offset":16462},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":635,"column":53,"offset":16462},"end":{"line":635,"column":125,"offset":16534},"indent":[]}}],"position":{"start":{"line":635,"column":1,"offset":16410},"end":{"line":635,"column":125,"offset":16534},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":637,"column":1,"offset":16538},"end":{"line":655,"column":4,"offset":16939},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":657,"column":1,"offset":16943},"end":{"line":657,"column":4,"offset":16946},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":659,"column":1,"offset":16950},"end":{"line":661,"column":10,"offset":16994},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":661,"column":10,"offset":16994},"end":{"line":661,"column":40,"offset":17024},"indent":[]}}],"position":{"start":{"line":661,"column":10,"offset":16994},"end":{"line":661,"column":40,"offset":17024},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":661,"column":40,"offset":17024},"end":{"line":662,"column":11,"offset":17036},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":662,"column":11,"offset":17036},"end":{"line":662,"column":42,"offset":17067},"indent":[]}}],"position":{"start":{"line":662,"column":11,"offset":17036},"end":{"line":662,"column":42,"offset":17067},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":662,"column":42,"offset":17067},"end":{"line":664,"column":36,"offset":17124},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":664,"column":36,"offset":17124},"end":{"line":664,"column":97,"offset":17185},"indent":[]}}],"position":{"start":{"line":664,"column":36,"offset":17124},"end":{"line":664,"column":97,"offset":17185},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":664,"column":97,"offset":17185},"end":{"line":665,"column":40,"offset":17226},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":665,"column":40,"offset":17226},"end":{"line":665,"column":105,"offset":17291},"indent":[]}}],"position":{"start":{"line":665,"column":40,"offset":17226},"end":{"line":665,"column":105,"offset":17291},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":665,"column":105,"offset":17291},"end":{"line":666,"column":39,"offset":17331},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":666,"column":39,"offset":17331},"end":{"line":666,"column":103,"offset":17395},"indent":[]}}],"position":{"start":{"line":666,"column":39,"offset":17331},"end":{"line":666,"column":103,"offset":17395},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":666,"column":103,"offset":17395},"end":{"line":667,"column":50,"offset":17446},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":667,"column":50,"offset":17446},"end":{"line":667,"column":125,"offset":17521},"indent":[]}}],"position":{"start":{"line":667,"column":50,"offset":17446},"end":{"line":667,"column":125,"offset":17521},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":667,"column":125,"offset":17521},"end":{"line":668,"column":57,"offset":17579},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":668,"column":57,"offset":17579},"end":{"line":668,"column":139,"offset":17661},"indent":[]}}],"position":{"start":{"line":668,"column":57,"offset":17579},"end":{"line":668,"column":139,"offset":17661},"indent":[]}}],"position":{"start":{"line":659,"column":1,"offset":16950},"end":{"line":668,"column":139,"offset":17661},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":670,"column":1,"offset":17665},"end":{"line":670,"column":4,"offset":17668},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":672,"column":2,"offset":17673},"end":{"line":672,"column":142,"offset":17813},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17672},"end":{"line":672,"column":253,"offset":17924},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17672},"end":{"line":672,"column":253,"offset":17924},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":674,"column":4,"offset":17931},"end":{"line":674,"column":6,"offset":17933},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":674,"column":7,"offset":17934},"end":{"line":674,"column":46,"offset":17973},"indent":[]}}],"position":{"start":{"line":674,"column":6,"offset":17933},"end":{"line":674,"column":126,"offset":18053},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":17928},"end":{"line":674,"column":126,"offset":18053},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":676,"column":5,"offset":18061},"end":{"line":676,"column":13,"offset":18069},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":18057},"end":{"line":676,"column":13,"offset":18069},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":678,"column":1,"offset":18073},"end":{"line":678,"column":37,"offset":18109},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":38,"offset":18110},"end":{"line":678,"column":39,"offset":18111},"indent":[]}}],"position":{"start":{"line":678,"column":37,"offset":18109},"end":{"line":678,"column":40,"offset":18112},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":678,"column":40,"offset":18112},"end":{"line":678,"column":88,"offset":18160},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":89,"offset":18161},"end":{"line":678,"column":90,"offset":18162},"indent":[]}}],"position":{"start":{"line":678,"column":88,"offset":18160},"end":{"line":678,"column":91,"offset":18163},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":678,"column":91,"offset":18163},"end":{"line":678,"column":92,"offset":18164},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":18073},"end":{"line":678,"column":92,"offset":18164},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":680,"column":1,"offset":18168},"end":{"line":680,"column":162,"offset":18329},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":18168},"end":{"line":680,"column":162,"offset":18329},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":682,"column":3,"offset":18335},"end":{"line":682,"column":8,"offset":18340},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":18333},"end":{"line":682,"column":10,"offset":18342},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":682,"column":10,"offset":18342},"end":{"line":682,"column":125,"offset":18457},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":18333},"end":{"line":682,"column":125,"offset":18457},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":684,"column":3,"offset":18463},"end":{"line":684,"column":13,"offset":18473},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":18461},"end":{"line":684,"column":15,"offset":18475},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":18461},"end":{"line":684,"column":15,"offset":18475},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":686,"column":1,"offset":18479},"end":{"line":692,"column":4,"offset":18703},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":694,"column":3,"offset":18709},"end":{"line":694,"column":13,"offset":18719},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18707},"end":{"line":694,"column":15,"offset":18721},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18707},"end":{"line":694,"column":15,"offset":18721},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":696,"column":1,"offset":18725},"end":{"line":703,"column":4,"offset":19046},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":705,"column":3,"offset":19052},"end":{"line":705,"column":13,"offset":19062},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":19050},"end":{"line":705,"column":15,"offset":19064},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":19050},"end":{"line":705,"column":15,"offset":19064},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":707,"column":1,"offset":19068},"end":{"line":709,"column":76,"offset":19182},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":711,"column":5,"offset":19190},"end":{"line":711,"column":14,"offset":19199},"indent":[]}}],"position":{"start":{"line":711,"column":1,"offset":19186},"end":{"line":711,"column":14,"offset":19199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":713,"column":1,"offset":19203},"end":{"line":713,"column":144,"offset":19346},"indent":[]}}],"position":{"start":{"line":713,"column":1,"offset":19203},"end":{"line":713,"column":144,"offset":19346},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":715,"column":1,"offset":19350},"end":{"line":729,"column":4,"offset":19650},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":731,"column":1,"offset":19654},"end":{"line":731,"column":4,"offset":19657},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":733,"column":1,"offset":19661},"end":{"line":735,"column":10,"offset":19705},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":735,"column":10,"offset":19705},"end":{"line":735,"column":40,"offset":19735},"indent":[]}}],"position":{"start":{"line":735,"column":10,"offset":19705},"end":{"line":735,"column":40,"offset":19735},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":735,"column":40,"offset":19735},"end":{"line":736,"column":24,"offset":19760},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":736,"column":24,"offset":19760},"end":{"line":736,"column":68,"offset":19804},"indent":[]}}],"position":{"start":{"line":736,"column":24,"offset":19760},"end":{"line":736,"column":68,"offset":19804},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":736,"column":68,"offset":19804},"end":{"line":738,"column":36,"offset":19861},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":738,"column":36,"offset":19861},"end":{"line":738,"column":97,"offset":19922},"indent":[]}}],"position":{"start":{"line":738,"column":36,"offset":19861},"end":{"line":738,"column":97,"offset":19922},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":738,"column":97,"offset":19922},"end":{"line":739,"column":39,"offset":19962},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":739,"column":39,"offset":19962},"end":{"line":739,"column":103,"offset":20026},"indent":[]}}],"position":{"start":{"line":739,"column":39,"offset":19962},"end":{"line":739,"column":103,"offset":20026},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":739,"column":103,"offset":20026},"end":{"line":740,"column":39,"offset":20066},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":740,"column":39,"offset":20066},"end":{"line":740,"column":103,"offset":20130},"indent":[]}}],"position":{"start":{"line":740,"column":39,"offset":20066},"end":{"line":740,"column":103,"offset":20130},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":740,"column":103,"offset":20130},"end":{"line":741,"column":47,"offset":20178},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":741,"column":47,"offset":20178},"end":{"line":741,"column":119,"offset":20250},"indent":[]}}],"position":{"start":{"line":741,"column":47,"offset":20178},"end":{"line":741,"column":119,"offset":20250},"indent":[]}}],"position":{"start":{"line":733,"column":1,"offset":19661},"end":{"line":741,"column":119,"offset":20250},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":743,"column":1,"offset":20254},"end":{"line":743,"column":4,"offset":20257},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":745,"column":2,"offset":20262},"end":{"line":745,"column":142,"offset":20402},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":20261},"end":{"line":745,"column":255,"offset":20515},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":20261},"end":{"line":745,"column":255,"offset":20515},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":747,"column":4,"offset":20522},"end":{"line":747,"column":6,"offset":20524},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":747,"column":7,"offset":20525},"end":{"line":747,"column":47,"offset":20565},"indent":[]}}],"position":{"start":{"line":747,"column":6,"offset":20524},"end":{"line":747,"column":128,"offset":20646},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":20519},"end":{"line":747,"column":128,"offset":20646},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":749,"column":5,"offset":20654},"end":{"line":749,"column":13,"offset":20662},"indent":[]}}],"position":{"start":{"line":749,"column":1,"offset":20650},"end":{"line":749,"column":13,"offset":20662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":751,"column":1,"offset":20666},"end":{"line":751,"column":37,"offset":20702},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":38,"offset":20703},"end":{"line":751,"column":39,"offset":20704},"indent":[]}}],"position":{"start":{"line":751,"column":37,"offset":20702},"end":{"line":751,"column":40,"offset":20705},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":751,"column":40,"offset":20705},"end":{"line":751,"column":88,"offset":20753},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":89,"offset":20754},"end":{"line":751,"column":90,"offset":20755},"indent":[]}}],"position":{"start":{"line":751,"column":88,"offset":20753},"end":{"line":751,"column":91,"offset":20756},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":751,"column":91,"offset":20756},"end":{"line":751,"column":92,"offset":20757},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":20666},"end":{"line":751,"column":92,"offset":20757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":753,"column":1,"offset":20761},"end":{"line":753,"column":74,"offset":20834},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":753,"column":75,"offset":20835},"end":{"line":753,"column":78,"offset":20838},"indent":[]}}],"position":{"start":{"line":753,"column":74,"offset":20834},"end":{"line":753,"column":79,"offset":20839},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":753,"column":79,"offset":20839},"end":{"line":753,"column":93,"offset":20853},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":20761},"end":{"line":753,"column":93,"offset":20853},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*","position":{"start":{"line":755,"column":1,"offset":20857},"end":{"line":755,"column":3,"offset":20859},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":3,"offset":20859},"end":{"line":755,"column":5,"offset":20861},"indent":[]}},{"type":"text","value":"Note:","position":{"start":{"line":755,"column":5,"offset":20861},"end":{"line":755,"column":10,"offset":20866},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":10,"offset":20866},"end":{"line":755,"column":12,"offset":20868},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":12,"offset":20868},"end":{"line":755,"column":14,"offset":20870},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":755,"column":14,"offset":20870},"end":{"line":755,"column":128,"offset":20984},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":20857},"end":{"line":755,"column":128,"offset":20984},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":757,"column":3,"offset":20990},"end":{"line":757,"column":13,"offset":21000},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20988},"end":{"line":757,"column":15,"offset":21002},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20988},"end":{"line":757,"column":15,"offset":21002},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":759,"column":1,"offset":21006},"end":{"line":762,"column":96,"offset":21238},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":764,"column":3,"offset":21244},"end":{"line":764,"column":13,"offset":21254},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":21242},"end":{"line":764,"column":15,"offset":21256},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":21242},"end":{"line":764,"column":15,"offset":21256},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":766,"column":1,"offset":21260},"end":{"line":773,"column":4,"offset":21581},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":775,"column":3,"offset":21587},"end":{"line":775,"column":13,"offset":21597},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":21585},"end":{"line":775,"column":15,"offset":21599},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":21585},"end":{"line":775,"column":15,"offset":21599},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":777,"column":1,"offset":21603},"end":{"line":779,"column":76,"offset":21717},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":781,"column":5,"offset":21725},"end":{"line":781,"column":14,"offset":21734},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":21721},"end":{"line":781,"column":14,"offset":21734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":783,"column":1,"offset":21738},"end":{"line":783,"column":200,"offset":21937},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":783,"column":201,"offset":21938},"end":{"line":783,"column":204,"offset":21941},"indent":[]}}],"position":{"start":{"line":783,"column":200,"offset":21937},"end":{"line":783,"column":205,"offset":21942},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":783,"column":205,"offset":21942},"end":{"line":783,"column":256,"offset":21993},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":783,"column":256,"offset":21993},"end":{"line":783,"column":265,"offset":22002},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":783,"column":265,"offset":22002},"end":{"line":783,"column":270,"offset":22007},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":783,"column":270,"offset":22007},"end":{"line":783,"column":281,"offset":22018},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":783,"column":281,"offset":22018},"end":{"line":783,"column":290,"offset":22027},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":783,"column":290,"offset":22027},"end":{"line":783,"column":293,"offset":22030},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":783,"column":293,"offset":22030},"end":{"line":783,"column":392,"offset":22129},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":21738},"end":{"line":783,"column":392,"offset":22129},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":785,"column":1,"offset":22133},"end":{"line":785,"column":8,"offset":22140},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":785,"column":8,"offset":22140},"end":{"line":785,"column":15,"offset":22147},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":785,"column":15,"offset":22147},"end":{"line":785,"column":44,"offset":22176},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":785,"column":44,"offset":22176},"end":{"line":785,"column":53,"offset":22185},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":785,"column":53,"offset":22185},"end":{"line":785,"column":88,"offset":22220},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":785,"column":89,"offset":22221},"end":{"line":785,"column":125,"offset":22257},"indent":[]}}],"position":{"start":{"line":785,"column":88,"offset":22220},"end":{"line":785,"column":183,"offset":22315},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":785,"column":183,"offset":22315},"end":{"line":785,"column":184,"offset":22316},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":22133},"end":{"line":785,"column":184,"offset":22316},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":787,"column":1,"offset":22320},"end":{"line":788,"column":87,"offset":22421},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":790,"column":1,"offset":22425},"end":{"line":790,"column":8,"offset":22432},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":790,"column":8,"offset":22432},"end":{"line":790,"column":15,"offset":22439},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":790,"column":15,"offset":22439},"end":{"line":790,"column":44,"offset":22468},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":790,"column":44,"offset":22468},"end":{"line":790,"column":55,"offset":22479},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":790,"column":55,"offset":22479},"end":{"line":790,"column":79,"offset":22503},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":790,"column":79,"offset":22503},"end":{"line":790,"column":83,"offset":22507},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":790,"column":83,"offset":22507},"end":{"line":790,"column":84,"offset":22508},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":22425},"end":{"line":790,"column":84,"offset":22508},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":792,"column":1,"offset":22512},"end":{"line":793,"column":87,"offset":22615},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":22619},"end":{"line":795,"column":8,"offset":22626},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":795,"column":8,"offset":22626},"end":{"line":795,"column":14,"offset":22632},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":795,"column":14,"offset":22632},"end":{"line":795,"column":21,"offset":22639},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":795,"column":21,"offset":22639},"end":{"line":795,"column":36,"offset":22654},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":795,"column":36,"offset":22654},"end":{"line":795,"column":53,"offset":22671},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":795,"column":53,"offset":22671},"end":{"line":795,"column":79,"offset":22697},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":795,"column":79,"offset":22697},"end":{"line":795,"column":80,"offset":22698},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":22619},"end":{"line":795,"column":80,"offset":22698},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":797,"column":1,"offset":22702},"end":{"line":826,"column":4,"offset":23322},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":828,"column":1,"offset":23326},"end":{"line":828,"column":4,"offset":23329},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":830,"column":1,"offset":23333},"end":{"line":832,"column":9,"offset":23376},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":832,"column":9,"offset":23376},"end":{"line":832,"column":38,"offset":23405},"indent":[]}}],"position":{"start":{"line":832,"column":9,"offset":23376},"end":{"line":832,"column":38,"offset":23405},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":832,"column":38,"offset":23405},"end":{"line":833,"column":23,"offset":23429},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":833,"column":23,"offset":23429},"end":{"line":833,"column":66,"offset":23472},"indent":[]}}],"position":{"start":{"line":833,"column":23,"offset":23429},"end":{"line":833,"column":66,"offset":23472},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":833,"column":66,"offset":23472},"end":{"line":835,"column":13,"offset":23506},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":835,"column":13,"offset":23506},"end":{"line":835,"column":51,"offset":23544},"indent":[]}}],"position":{"start":{"line":835,"column":13,"offset":23506},"end":{"line":835,"column":51,"offset":23544},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":835,"column":51,"offset":23544},"end":{"line":836,"column":29,"offset":23574},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":836,"column":29,"offset":23574},"end":{"line":836,"column":83,"offset":23628},"indent":[]}}],"position":{"start":{"line":836,"column":29,"offset":23574},"end":{"line":836,"column":83,"offset":23628},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":836,"column":83,"offset":23628},"end":{"line":837,"column":16,"offset":23645},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":837,"column":16,"offset":23645},"end":{"line":837,"column":57,"offset":23686},"indent":[]}}],"position":{"start":{"line":837,"column":16,"offset":23645},"end":{"line":837,"column":57,"offset":23686},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":837,"column":57,"offset":23686},"end":{"line":838,"column":26,"offset":23713},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":838,"column":26,"offset":23713},"end":{"line":838,"column":77,"offset":23764},"indent":[]}}],"position":{"start":{"line":838,"column":26,"offset":23713},"end":{"line":838,"column":77,"offset":23764},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":23333},"end":{"line":838,"column":77,"offset":23764},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":840,"column":1,"offset":23768},"end":{"line":840,"column":4,"offset":23771},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":842,"column":2,"offset":23776},"end":{"line":842,"column":142,"offset":23916},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":23775},"end":{"line":842,"column":241,"offset":24015},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":23775},"end":{"line":842,"column":241,"offset":24015},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":844,"column":4,"offset":24022},"end":{"line":844,"column":6,"offset":24024},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":844,"column":7,"offset":24025},"end":{"line":844,"column":40,"offset":24058},"indent":[]}}],"position":{"start":{"line":844,"column":6,"offset":24024},"end":{"line":844,"column":114,"offset":24132},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":24019},"end":{"line":844,"column":114,"offset":24132},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":846,"column":5,"offset":24140},"end":{"line":846,"column":13,"offset":24148},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":24136},"end":{"line":846,"column":13,"offset":24148},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":848,"column":1,"offset":24152},"end":{"line":848,"column":9,"offset":24160},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":848,"column":11,"offset":24162},"end":{"line":848,"column":20,"offset":24171},"indent":[]}}],"position":{"start":{"line":848,"column":9,"offset":24160},"end":{"line":848,"column":22,"offset":24173},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":848,"column":22,"offset":24173},"end":{"line":848,"column":62,"offset":24213},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":24152},"end":{"line":848,"column":62,"offset":24213},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":850,"column":1,"offset":24217},"end":{"line":850,"column":168,"offset":24384},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":850,"column":170,"offset":24386},"end":{"line":850,"column":187,"offset":24403},"indent":[]}}],"position":{"start":{"line":850,"column":168,"offset":24384},"end":{"line":850,"column":189,"offset":24405},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":850,"column":189,"offset":24405},"end":{"line":850,"column":231,"offset":24447},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":24217},"end":{"line":850,"column":231,"offset":24447},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":852,"column":3,"offset":24453},"end":{"line":852,"column":13,"offset":24463},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":24451},"end":{"line":852,"column":15,"offset":24465},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":24451},"end":{"line":852,"column":15,"offset":24465},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":854,"column":1,"offset":24469},"end":{"line":863,"column":4,"offset":24543},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":865,"column":3,"offset":24549},"end":{"line":865,"column":13,"offset":24559},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":24547},"end":{"line":865,"column":15,"offset":24561},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":24547},"end":{"line":865,"column":15,"offset":24561},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":867,"column":1,"offset":24565},"end":{"line":878,"column":4,"offset":24671},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":880,"column":5,"offset":24679},"end":{"line":880,"column":14,"offset":24688},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":24675},"end":{"line":880,"column":14,"offset":24688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":882,"column":1,"offset":24692},"end":{"line":882,"column":11,"offset":24702},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":882,"column":11,"offset":24702},"end":{"line":882,"column":17,"offset":24708},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":882,"column":17,"offset":24708},"end":{"line":882,"column":71,"offset":24762},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":24692},"end":{"line":882,"column":71,"offset":24762},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":884,"column":3,"offset":24768},"end":{"line":884,"column":8,"offset":24773},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":884,"column":8,"offset":24773},"end":{"line":884,"column":18,"offset":24783},"indent":[]}}],"position":{"start":{"line":884,"column":3,"offset":24768},"end":{"line":884,"column":18,"offset":24783},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":885,"column":9,"offset":24793},"end":{"line":885,"column":19,"offset":24803},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":885,"column":19,"offset":24803},"end":{"line":885,"column":62,"offset":24846},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":885,"column":62,"offset":24846},"end":{"line":885,"column":73,"offset":24857},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":885,"column":73,"offset":24857},"end":{"line":885,"column":74,"offset":24858},"indent":[]}}],"position":{"start":{"line":885,"column":9,"offset":24793},"end":{"line":885,"column":74,"offset":24858},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":24789},"end":{"line":885,"column":74,"offset":24858},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":886,"column":9,"offset":24868},"end":{"line":886,"column":19,"offset":24878},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":886,"column":19,"offset":24878},"end":{"line":886,"column":64,"offset":24923},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":886,"column":64,"offset":24923},"end":{"line":886,"column":76,"offset":24935},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":886,"column":76,"offset":24935},"end":{"line":886,"column":77,"offset":24936},"indent":[]}}],"position":{"start":{"line":886,"column":9,"offset":24868},"end":{"line":886,"column":77,"offset":24936},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":24864},"end":{"line":886,"column":77,"offset":24936},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":887,"column":9,"offset":24946},"end":{"line":887,"column":19,"offset":24956},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":887,"column":19,"offset":24956},"end":{"line":887,"column":51,"offset":24988},"indent":[]}}],"position":{"start":{"line":887,"column":9,"offset":24946},"end":{"line":887,"column":51,"offset":24988},"indent":[]}}],"position":{"start":{"line":887,"column":5,"offset":24942},"end":{"line":887,"column":51,"offset":24988},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":888,"column":9,"offset":24998},"end":{"line":888,"column":14,"offset":25003},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":888,"column":14,"offset":25003},"end":{"line":888,"column":24,"offset":25013},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":888,"column":24,"offset":25013},"end":{"line":888,"column":66,"offset":25055},"indent":[]}}],"position":{"start":{"line":888,"column":9,"offset":24998},"end":{"line":888,"column":66,"offset":25055},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":24994},"end":{"line":888,"column":66,"offset":25055},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":24789},"end":{"line":888,"column":66,"offset":25055},"indent":[5,5,5]}}],"position":{"start":{"line":884,"column":1,"offset":24766},"end":{"line":888,"column":66,"offset":25055},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":889,"column":3,"offset":25059},"end":{"line":889,"column":10,"offset":25066},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":889,"column":10,"offset":25066},"end":{"line":889,"column":20,"offset":25076},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":889,"column":20,"offset":25076},"end":{"line":889,"column":35,"offset":25091},"indent":[]}}],"position":{"start":{"line":889,"column":3,"offset":25059},"end":{"line":889,"column":35,"offset":25091},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":890,"column":9,"offset":25101},"end":{"line":890,"column":49,"offset":25141},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":890,"column":49,"offset":25141},"end":{"line":890,"column":60,"offset":25152},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":890,"column":60,"offset":25152},"end":{"line":890,"column":69,"offset":25161},"indent":[]}}],"position":{"start":{"line":890,"column":9,"offset":25101},"end":{"line":890,"column":69,"offset":25161},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":25097},"end":{"line":890,"column":69,"offset":25161},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":891,"column":9,"offset":25171},"end":{"line":891,"column":49,"offset":25211},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":891,"column":49,"offset":25211},"end":{"line":891,"column":61,"offset":25223},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":891,"column":61,"offset":25223},"end":{"line":891,"column":70,"offset":25232},"indent":[]}}],"position":{"start":{"line":891,"column":9,"offset":25171},"end":{"line":891,"column":70,"offset":25232},"indent":[]}}],"position":{"start":{"line":891,"column":5,"offset":25167},"end":{"line":891,"column":70,"offset":25232},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":25097},"end":{"line":891,"column":70,"offset":25232},"indent":[5]}}],"position":{"start":{"line":889,"column":1,"offset":25057},"end":{"line":891,"column":70,"offset":25232},"indent":[1,1]}}],"position":{"start":{"line":884,"column":1,"offset":24766},"end":{"line":891,"column":70,"offset":25232},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":893,"column":1,"offset":25236},"end":{"line":893,"column":38,"offset":25273},"indent":[]}}],"position":{"start":{"line":893,"column":1,"offset":25236},"end":{"line":893,"column":38,"offset":25273},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":895,"column":6,"offset":25282},"end":{"line":895,"column":9,"offset":25285},"indent":[]}}],"position":{"start":{"line":895,"column":1,"offset":25277},"end":{"line":895,"column":9,"offset":25285},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":897,"column":1,"offset":25289},"end":{"line":897,"column":95,"offset":25383},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":95,"offset":25383},"end":{"line":897,"column":101,"offset":25389},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":897,"column":101,"offset":25389},"end":{"line":897,"column":151,"offset":25439},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":151,"offset":25439},"end":{"line":897,"column":157,"offset":25445},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":897,"column":157,"offset":25445},"end":{"line":897,"column":163,"offset":25451},"indent":[]}}],"position":{"start":{"line":897,"column":1,"offset":25289},"end":{"line":897,"column":163,"offset":25451},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":899,"column":1,"offset":25455},"end":{"line":928,"column":4,"offset":26151},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":930,"column":6,"offset":26160},"end":{"line":930,"column":9,"offset":26163},"indent":[]}}],"position":{"start":{"line":930,"column":1,"offset":26155},"end":{"line":930,"column":9,"offset":26163},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":932,"column":1,"offset":26167},"end":{"line":932,"column":57,"offset":26223},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":932,"column":57,"offset":26223},"end":{"line":932,"column":63,"offset":26229},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":932,"column":63,"offset":26229},"end":{"line":932,"column":127,"offset":26293},"indent":[]}}],"position":{"start":{"line":932,"column":1,"offset":26167},"end":{"line":932,"column":127,"offset":26293},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":934,"column":1,"offset":26297},"end":{"line":969,"column":4,"offset":27121},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":971,"column":1,"offset":27125},"end":{"line":971,"column":4,"offset":27128},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":973,"column":1,"offset":27132},"end":{"line":975,"column":17,"offset":27183},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":975,"column":17,"offset":27183},"end":{"line":975,"column":54,"offset":27220},"indent":[]}}],"position":{"start":{"line":975,"column":17,"offset":27183},"end":{"line":975,"column":54,"offset":27220},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":975,"column":54,"offset":27220},"end":{"line":976,"column":11,"offset":27232},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":976,"column":11,"offset":27232},"end":{"line":976,"column":42,"offset":27263},"indent":[]}}],"position":{"start":{"line":976,"column":11,"offset":27232},"end":{"line":976,"column":42,"offset":27263},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":976,"column":42,"offset":27263},"end":{"line":978,"column":27,"offset":27311},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":978,"column":27,"offset":27311},"end":{"line":978,"column":79,"offset":27363},"indent":[]}}],"position":{"start":{"line":978,"column":27,"offset":27311},"end":{"line":978,"column":79,"offset":27363},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":978,"column":79,"offset":27363},"end":{"line":979,"column":24,"offset":27388},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":979,"column":24,"offset":27388},"end":{"line":979,"column":73,"offset":27437},"indent":[]}}],"position":{"start":{"line":979,"column":24,"offset":27388},"end":{"line":979,"column":73,"offset":27437},"indent":[]}}],"position":{"start":{"line":973,"column":1,"offset":27132},"end":{"line":979,"column":73,"offset":27437},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":981,"column":1,"offset":27441},"end":{"line":981,"column":4,"offset":27444},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":983,"column":2,"offset":27449},"end":{"line":983,"column":142,"offset":27589},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":27448},"end":{"line":983,"column":217,"offset":27664},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":27448},"end":{"line":983,"column":217,"offset":27664},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":985,"column":4,"offset":27671},"end":{"line":985,"column":6,"offset":27673},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":985,"column":7,"offset":27674},"end":{"line":985,"column":28,"offset":27695},"indent":[]}}],"position":{"start":{"line":985,"column":6,"offset":27673},"end":{"line":985,"column":90,"offset":27757},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":27668},"end":{"line":985,"column":90,"offset":27757},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":987,"column":5,"offset":27765},"end":{"line":987,"column":13,"offset":27773},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":27761},"end":{"line":987,"column":13,"offset":27773},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":989,"column":1,"offset":27777},"end":{"line":989,"column":110,"offset":27886},"indent":[]}}],"position":{"start":{"line":989,"column":1,"offset":27777},"end":{"line":989,"column":110,"offset":27886},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":991,"column":3,"offset":27892},"end":{"line":991,"column":8,"offset":27897},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":27890},"end":{"line":991,"column":10,"offset":27899},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":991,"column":10,"offset":27899},"end":{"line":991,"column":87,"offset":27976},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":27890},"end":{"line":991,"column":87,"offset":27976},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":993,"column":3,"offset":27982},"end":{"line":993,"column":13,"offset":27992},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":27980},"end":{"line":993,"column":15,"offset":27994},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":27980},"end":{"line":993,"column":15,"offset":27994},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":995,"column":1,"offset":27998},"end":{"line":999,"column":4,"offset":28063},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1001,"column":3,"offset":28069},"end":{"line":1001,"column":13,"offset":28079},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":28067},"end":{"line":1001,"column":15,"offset":28081},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":28067},"end":{"line":1001,"column":15,"offset":28081},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1003,"column":1,"offset":28085},"end":{"line":1007,"column":4,"offset":28131},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1009,"column":5,"offset":28139},"end":{"line":1009,"column":14,"offset":28148},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":28135},"end":{"line":1009,"column":14,"offset":28148},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1011,"column":6,"offset":28157},"end":{"line":1011,"column":9,"offset":28160},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":28152},"end":{"line":1011,"column":9,"offset":28160},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1013,"column":1,"offset":28164},"end":{"line":1022,"column":4,"offset":28380},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1024,"column":6,"offset":28389},"end":{"line":1024,"column":9,"offset":28392},"indent":[]}}],"position":{"start":{"line":1024,"column":1,"offset":28384},"end":{"line":1024,"column":9,"offset":28392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1026,"column":1,"offset":28396},"end":{"line":1026,"column":49,"offset":28444},"indent":[]}}],"position":{"start":{"line":1026,"column":1,"offset":28396},"end":{"line":1026,"column":49,"offset":28444},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1028,"column":1,"offset":28448},"end":{"line":1042,"column":4,"offset":28779},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1044,"column":6,"offset":28788},"end":{"line":1044,"column":11,"offset":28793},"indent":[]}}],"position":{"start":{"line":1044,"column":1,"offset":28783},"end":{"line":1044,"column":11,"offset":28793},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1046,"column":1,"offset":28797},"end":{"line":1046,"column":24,"offset":28820},"indent":[]}}],"position":{"start":{"line":1046,"column":1,"offset":28797},"end":{"line":1046,"column":24,"offset":28820},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1048,"column":1,"offset":28824},"end":{"line":1084,"column":4,"offset":29764},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1086,"column":1,"offset":29768},"end":{"line":1086,"column":4,"offset":29771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1088,"column":1,"offset":29775},"end":{"line":1090,"column":10,"offset":29819},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1090,"column":10,"offset":29819},"end":{"line":1090,"column":40,"offset":29849},"indent":[]}}],"position":{"start":{"line":1090,"column":10,"offset":29819},"end":{"line":1090,"column":40,"offset":29849},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1090,"column":40,"offset":29849},"end":{"line":1091,"column":11,"offset":29861},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1091,"column":11,"offset":29861},"end":{"line":1091,"column":42,"offset":29892},"indent":[]}}],"position":{"start":{"line":1091,"column":11,"offset":29861},"end":{"line":1091,"column":42,"offset":29892},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1091,"column":42,"offset":29892},"end":{"line":1092,"column":17,"offset":29910},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1092,"column":17,"offset":29910},"end":{"line":1092,"column":54,"offset":29947},"indent":[]}}],"position":{"start":{"line":1092,"column":17,"offset":29910},"end":{"line":1092,"column":54,"offset":29947},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1092,"column":54,"offset":29947},"end":{"line":1093,"column":25,"offset":29973},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1093,"column":25,"offset":29973},"end":{"line":1093,"column":70,"offset":30018},"indent":[]}}],"position":{"start":{"line":1093,"column":25,"offset":29973},"end":{"line":1093,"column":70,"offset":30018},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1093,"column":70,"offset":30018},"end":{"line":1095,"column":16,"offset":30055},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1095,"column":16,"offset":30055},"end":{"line":1095,"column":57,"offset":30096},"indent":[]}}],"position":{"start":{"line":1095,"column":16,"offset":30055},"end":{"line":1095,"column":57,"offset":30096},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":29775},"end":{"line":1095,"column":57,"offset":30096},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1097,"column":1,"offset":30100},"end":{"line":1097,"column":4,"offset":30103},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1099,"column":2,"offset":30108},"end":{"line":1099,"column":142,"offset":30248},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":30107},"end":{"line":1099,"column":213,"offset":30319},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":30107},"end":{"line":1099,"column":213,"offset":30319},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1101,"column":4,"offset":30326},"end":{"line":1101,"column":6,"offset":30328},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1101,"column":7,"offset":30329},"end":{"line":1101,"column":26,"offset":30348},"indent":[]}}],"position":{"start":{"line":1101,"column":6,"offset":30328},"end":{"line":1101,"column":86,"offset":30408},"indent":[]}}],"position":{"start":{"line":1101,"column":1,"offset":30323},"end":{"line":1101,"column":86,"offset":30408},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1103,"column":5,"offset":30416},"end":{"line":1103,"column":13,"offset":30424},"indent":[]}}],"position":{"start":{"line":1103,"column":1,"offset":30412},"end":{"line":1103,"column":13,"offset":30424},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1105,"column":1,"offset":30428},"end":{"line":1105,"column":18,"offset":30445},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":19,"offset":30446},"end":{"line":1105,"column":28,"offset":30455},"indent":[]}}],"position":{"start":{"line":1105,"column":18,"offset":30445},"end":{"line":1105,"column":29,"offset":30456},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1105,"column":29,"offset":30456},"end":{"line":1105,"column":34,"offset":30461},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":35,"offset":30462},"end":{"line":1105,"column":42,"offset":30469},"indent":[]}}],"position":{"start":{"line":1105,"column":34,"offset":30461},"end":{"line":1105,"column":43,"offset":30470},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1105,"column":43,"offset":30470},"end":{"line":1105,"column":126,"offset":30553},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":127,"offset":30554},"end":{"line":1105,"column":136,"offset":30563},"indent":[]}}],"position":{"start":{"line":1105,"column":126,"offset":30553},"end":{"line":1105,"column":137,"offset":30564},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1105,"column":137,"offset":30564},"end":{"line":1105,"column":141,"offset":30568},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":142,"offset":30569},"end":{"line":1105,"column":149,"offset":30576},"indent":[]}}],"position":{"start":{"line":1105,"column":141,"offset":30568},"end":{"line":1105,"column":150,"offset":30577},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1105,"column":150,"offset":30577},"end":{"line":1105,"column":162,"offset":30589},"indent":[]}}],"position":{"start":{"line":1105,"column":1,"offset":30428},"end":{"line":1105,"column":162,"offset":30589},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1107,"column":5,"offset":30597},"end":{"line":1107,"column":45,"offset":30637},"indent":[]}}],"position":{"start":{"line":1107,"column":5,"offset":30597},"end":{"line":1107,"column":45,"offset":30637},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":30593},"end":{"line":1107,"column":45,"offset":30637},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1108,"column":5,"offset":30643},"end":{"line":1108,"column":66,"offset":30704},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1108,"column":67,"offset":30705},"end":{"line":1108,"column":76,"offset":30714},"indent":[]}}],"position":{"start":{"line":1108,"column":66,"offset":30704},"end":{"line":1108,"column":77,"offset":30715},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1108,"column":77,"offset":30715},"end":{"line":1108,"column":81,"offset":30719},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1108,"column":82,"offset":30720},"end":{"line":1108,"column":85,"offset":30723},"indent":[]}}],"position":{"start":{"line":1108,"column":81,"offset":30719},"end":{"line":1108,"column":86,"offset":30724},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1108,"column":86,"offset":30724},"end":{"line":1108,"column":106,"offset":30744},"indent":[]}}],"position":{"start":{"line":1108,"column":5,"offset":30643},"end":{"line":1108,"column":106,"offset":30744},"indent":[]}}],"position":{"start":{"line":1108,"column":1,"offset":30639},"end":{"line":1108,"column":106,"offset":30744},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":30593},"end":{"line":1108,"column":106,"offset":30744},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1110,"column":3,"offset":30750},"end":{"line":1110,"column":8,"offset":30755},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":30748},"end":{"line":1110,"column":10,"offset":30757},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":30748},"end":{"line":1110,"column":10,"offset":30757},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1112,"column":3,"offset":30763},"end":{"line":1112,"column":68,"offset":30828},"indent":[]}}],"position":{"start":{"line":1112,"column":3,"offset":30763},"end":{"line":1112,"column":68,"offset":30828},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":30761},"end":{"line":1112,"column":68,"offset":30828},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1113,"column":3,"offset":30832},"end":{"line":1113,"column":34,"offset":30863},"indent":[]}}],"position":{"start":{"line":1113,"column":3,"offset":30832},"end":{"line":1113,"column":34,"offset":30863},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":30830},"end":{"line":1113,"column":34,"offset":30863},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1114,"column":3,"offset":30867},"end":{"line":1114,"column":58,"offset":30922},"indent":[]}}],"position":{"start":{"line":1114,"column":3,"offset":30867},"end":{"line":1114,"column":58,"offset":30922},"indent":[]}}],"position":{"start":{"line":1114,"column":1,"offset":30865},"end":{"line":1114,"column":58,"offset":30922},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1115,"column":3,"offset":30926},"end":{"line":1115,"column":49,"offset":30972},"indent":[]}}],"position":{"start":{"line":1115,"column":3,"offset":30926},"end":{"line":1115,"column":49,"offset":30972},"indent":[]}}],"position":{"start":{"line":1115,"column":1,"offset":30924},"end":{"line":1115,"column":49,"offset":30972},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1116,"column":3,"offset":30976},"end":{"line":1116,"column":18,"offset":30991},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1116,"column":19,"offset":30992},"end":{"line":1116,"column":28,"offset":31001},"indent":[]}}],"position":{"start":{"line":1116,"column":18,"offset":30991},"end":{"line":1116,"column":29,"offset":31002},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1116,"column":29,"offset":31002},"end":{"line":1116,"column":34,"offset":31007},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1116,"column":35,"offset":31008},"end":{"line":1116,"column":42,"offset":31015},"indent":[]}}],"position":{"start":{"line":1116,"column":34,"offset":31007},"end":{"line":1116,"column":43,"offset":31016},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1116,"column":43,"offset":31016},"end":{"line":1116,"column":79,"offset":31052},"indent":[]}}],"position":{"start":{"line":1116,"column":3,"offset":30976},"end":{"line":1116,"column":79,"offset":31052},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":30974},"end":{"line":1116,"column":79,"offset":31052},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":30761},"end":{"line":1116,"column":79,"offset":31052},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1118,"column":3,"offset":31058},"end":{"line":1118,"column":13,"offset":31068},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":31056},"end":{"line":1118,"column":15,"offset":31070},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":31056},"end":{"line":1118,"column":15,"offset":31070},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1120,"column":1,"offset":31074},"end":{"line":1132,"column":4,"offset":31268},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1134,"column":3,"offset":31274},"end":{"line":1134,"column":13,"offset":31284},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":31272},"end":{"line":1134,"column":15,"offset":31286},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":31272},"end":{"line":1134,"column":15,"offset":31286},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1136,"column":1,"offset":31290},"end":{"line":1146,"column":4,"offset":31494},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1148,"column":5,"offset":31502},"end":{"line":1148,"column":14,"offset":31511},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":31498},"end":{"line":1148,"column":14,"offset":31511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1150,"column":1,"offset":31515},"end":{"line":1150,"column":19,"offset":31533},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1150,"column":20,"offset":31534},"end":{"line":1150,"column":36,"offset":31550},"indent":[]}}],"position":{"start":{"line":1150,"column":19,"offset":31533},"end":{"line":1150,"column":61,"offset":31575},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1150,"column":61,"offset":31575},"end":{"line":1150,"column":62,"offset":31576},"indent":[]}}],"position":{"start":{"line":1150,"column":1,"offset":31515},"end":{"line":1150,"column":62,"offset":31576},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1152,"column":1,"offset":31580},"end":{"line":1152,"column":204,"offset":31783},"indent":[]}}],"position":{"start":{"line":1152,"column":1,"offset":31580},"end":{"line":1152,"column":204,"offset":31783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1154,"column":1,"offset":31787},"end":{"line":1154,"column":122,"offset":31908},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":31787},"end":{"line":1154,"column":122,"offset":31908},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1156,"column":1,"offset":31912},"end":{"line":1216,"column":4,"offset":33646},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1218,"column":1,"offset":33650},"end":{"line":1218,"column":4,"offset":33653},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1220,"column":1,"offset":33657},"end":{"line":1222,"column":25,"offset":33718},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1222,"column":25,"offset":33718},"end":{"line":1222,"column":70,"offset":33763},"indent":[]}}],"position":{"start":{"line":1222,"column":25,"offset":33718},"end":{"line":1222,"column":70,"offset":33763},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1222,"column":70,"offset":33763},"end":{"line":1224,"column":19,"offset":33803},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1224,"column":19,"offset":33803},"end":{"line":1224,"column":63,"offset":33847},"indent":[]}}],"position":{"start":{"line":1224,"column":19,"offset":33803},"end":{"line":1224,"column":63,"offset":33847},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1224,"column":63,"offset":33847},"end":{"line":1225,"column":29,"offset":33877},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1225,"column":29,"offset":33877},"end":{"line":1225,"column":83,"offset":33931},"indent":[]}}],"position":{"start":{"line":1225,"column":29,"offset":33877},"end":{"line":1225,"column":83,"offset":33931},"indent":[]}}],"position":{"start":{"line":1220,"column":1,"offset":33657},"end":{"line":1225,"column":83,"offset":33931},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1227,"column":1,"offset":33935},"end":{"line":1227,"column":4,"offset":33938},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1229,"column":2,"offset":33943},"end":{"line":1229,"column":142,"offset":34083},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":33942},"end":{"line":1229,"column":207,"offset":34148},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":33942},"end":{"line":1229,"column":207,"offset":34148},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1231,"column":4,"offset":34155},"end":{"line":1231,"column":6,"offset":34157},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1231,"column":7,"offset":34158},"end":{"line":1231,"column":23,"offset":34174},"indent":[]}}],"position":{"start":{"line":1231,"column":6,"offset":34157},"end":{"line":1231,"column":80,"offset":34231},"indent":[]}}],"position":{"start":{"line":1231,"column":1,"offset":34152},"end":{"line":1231,"column":80,"offset":34231},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1233,"column":5,"offset":34239},"end":{"line":1233,"column":13,"offset":34247},"indent":[]}}],"position":{"start":{"line":1233,"column":1,"offset":34235},"end":{"line":1233,"column":13,"offset":34247},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1235,"column":1,"offset":34251},"end":{"line":1235,"column":18,"offset":34268},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":19,"offset":34269},"end":{"line":1235,"column":28,"offset":34278},"indent":[]}}],"position":{"start":{"line":1235,"column":18,"offset":34268},"end":{"line":1235,"column":29,"offset":34279},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1235,"column":29,"offset":34279},"end":{"line":1235,"column":34,"offset":34284},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":35,"offset":34285},"end":{"line":1235,"column":42,"offset":34292},"indent":[]}}],"position":{"start":{"line":1235,"column":34,"offset":34284},"end":{"line":1235,"column":43,"offset":34293},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1235,"column":43,"offset":34293},"end":{"line":1235,"column":133,"offset":34383},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":134,"offset":34384},"end":{"line":1235,"column":143,"offset":34393},"indent":[]}}],"position":{"start":{"line":1235,"column":133,"offset":34383},"end":{"line":1235,"column":144,"offset":34394},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1235,"column":144,"offset":34394},"end":{"line":1235,"column":148,"offset":34398},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":149,"offset":34399},"end":{"line":1235,"column":156,"offset":34406},"indent":[]}}],"position":{"start":{"line":1235,"column":148,"offset":34398},"end":{"line":1235,"column":157,"offset":34407},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1235,"column":157,"offset":34407},"end":{"line":1235,"column":169,"offset":34419},"indent":[]}}],"position":{"start":{"line":1235,"column":1,"offset":34251},"end":{"line":1235,"column":169,"offset":34419},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1237,"column":5,"offset":34427},"end":{"line":1237,"column":46,"offset":34468},"indent":[]}}],"position":{"start":{"line":1237,"column":5,"offset":34427},"end":{"line":1237,"column":46,"offset":34468},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":34423},"end":{"line":1237,"column":46,"offset":34468},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1238,"column":5,"offset":34474},"end":{"line":1238,"column":66,"offset":34535},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1238,"column":67,"offset":34536},"end":{"line":1238,"column":76,"offset":34545},"indent":[]}}],"position":{"start":{"line":1238,"column":66,"offset":34535},"end":{"line":1238,"column":77,"offset":34546},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1238,"column":77,"offset":34546},"end":{"line":1238,"column":81,"offset":34550},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1238,"column":82,"offset":34551},"end":{"line":1238,"column":85,"offset":34554},"indent":[]}}],"position":{"start":{"line":1238,"column":81,"offset":34550},"end":{"line":1238,"column":86,"offset":34555},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1238,"column":86,"offset":34555},"end":{"line":1238,"column":106,"offset":34575},"indent":[]}}],"position":{"start":{"line":1238,"column":5,"offset":34474},"end":{"line":1238,"column":106,"offset":34575},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":34470},"end":{"line":1238,"column":106,"offset":34575},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":34423},"end":{"line":1238,"column":106,"offset":34575},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1240,"column":3,"offset":34581},"end":{"line":1240,"column":8,"offset":34586},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":34579},"end":{"line":1240,"column":10,"offset":34588},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":34579},"end":{"line":1240,"column":10,"offset":34588},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1242,"column":3,"offset":34594},"end":{"line":1242,"column":56,"offset":34647},"indent":[]}}],"position":{"start":{"line":1242,"column":3,"offset":34594},"end":{"line":1242,"column":56,"offset":34647},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":34592},"end":{"line":1242,"column":56,"offset":34647},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1243,"column":3,"offset":34651},"end":{"line":1243,"column":34,"offset":34682},"indent":[]}}],"position":{"start":{"line":1243,"column":3,"offset":34651},"end":{"line":1243,"column":34,"offset":34682},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":34649},"end":{"line":1243,"column":34,"offset":34682},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1244,"column":3,"offset":34686},"end":{"line":1244,"column":58,"offset":34741},"indent":[]}}],"position":{"start":{"line":1244,"column":3,"offset":34686},"end":{"line":1244,"column":58,"offset":34741},"indent":[]}}],"position":{"start":{"line":1244,"column":1,"offset":34684},"end":{"line":1244,"column":58,"offset":34741},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1245,"column":3,"offset":34745},"end":{"line":1245,"column":49,"offset":34791},"indent":[]}}],"position":{"start":{"line":1245,"column":3,"offset":34745},"end":{"line":1245,"column":49,"offset":34791},"indent":[]}}],"position":{"start":{"line":1245,"column":1,"offset":34743},"end":{"line":1245,"column":49,"offset":34791},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1246,"column":3,"offset":34795},"end":{"line":1246,"column":18,"offset":34810},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1246,"column":19,"offset":34811},"end":{"line":1246,"column":28,"offset":34820},"indent":[]}}],"position":{"start":{"line":1246,"column":18,"offset":34810},"end":{"line":1246,"column":29,"offset":34821},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1246,"column":29,"offset":34821},"end":{"line":1246,"column":34,"offset":34826},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1246,"column":35,"offset":34827},"end":{"line":1246,"column":42,"offset":34834},"indent":[]}}],"position":{"start":{"line":1246,"column":34,"offset":34826},"end":{"line":1246,"column":43,"offset":34835},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1246,"column":43,"offset":34835},"end":{"line":1246,"column":79,"offset":34871},"indent":[]}}],"position":{"start":{"line":1246,"column":3,"offset":34795},"end":{"line":1246,"column":79,"offset":34871},"indent":[]}}],"position":{"start":{"line":1246,"column":1,"offset":34793},"end":{"line":1246,"column":79,"offset":34871},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":34592},"end":{"line":1246,"column":79,"offset":34871},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1248,"column":3,"offset":34877},"end":{"line":1248,"column":13,"offset":34887},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":34875},"end":{"line":1248,"column":15,"offset":34889},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":34875},"end":{"line":1248,"column":15,"offset":34889},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1250,"column":1,"offset":34893},"end":{"line":1261,"column":4,"offset":35127},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1263,"column":3,"offset":35133},"end":{"line":1263,"column":13,"offset":35143},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":35131},"end":{"line":1263,"column":15,"offset":35145},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":35131},"end":{"line":1263,"column":15,"offset":35145},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1265,"column":1,"offset":35149},"end":{"line":1275,"column":4,"offset":35352},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1277,"column":5,"offset":35360},"end":{"line":1277,"column":14,"offset":35369},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":35356},"end":{"line":1277,"column":14,"offset":35369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1279,"column":1,"offset":35373},"end":{"line":1279,"column":38,"offset":35410},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1279,"column":38,"offset":35410},"end":{"line":1279,"column":50,"offset":35422},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1279,"column":50,"offset":35422},"end":{"line":1279,"column":63,"offset":35435},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1279,"column":63,"offset":35435},"end":{"line":1279,"column":72,"offset":35444},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1279,"column":72,"offset":35444},"end":{"line":1279,"column":83,"offset":35455},"indent":[]}}],"position":{"start":{"line":1279,"column":1,"offset":35373},"end":{"line":1279,"column":83,"offset":35455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1281,"column":1,"offset":35459},"end":{"line":1281,"column":128,"offset":35586},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":35459},"end":{"line":1281,"column":128,"offset":35586},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1283,"column":1,"offset":35590},"end":{"line":1283,"column":205,"offset":35794},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":205,"offset":35794},"end":{"line":1283,"column":208,"offset":35797},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1283,"column":208,"offset":35797},"end":{"line":1283,"column":282,"offset":35871},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":282,"offset":35871},"end":{"line":1283,"column":285,"offset":35874},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1283,"column":285,"offset":35874},"end":{"line":1283,"column":365,"offset":35954},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1283,"column":365,"offset":35954},"end":{"line":1283,"column":375,"offset":35964},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1283,"column":375,"offset":35964},"end":{"line":1283,"column":376,"offset":35965},"indent":[]}}],"position":{"start":{"line":1283,"column":1,"offset":35590},"end":{"line":1283,"column":376,"offset":35965},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1285,"column":1,"offset":35969},"end":{"line":1285,"column":54,"offset":36022},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":54,"offset":36022},"end":{"line":1285,"column":64,"offset":36032},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1285,"column":64,"offset":36032},"end":{"line":1285,"column":114,"offset":36082},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":114,"offset":36082},"end":{"line":1285,"column":124,"offset":36092},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1285,"column":124,"offset":36092},"end":{"line":1285,"column":125,"offset":36093},"indent":[]}}],"position":{"start":{"line":1285,"column":1,"offset":35969},"end":{"line":1285,"column":125,"offset":36093},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1287,"column":1,"offset":36097},"end":{"line":1333,"column":4,"offset":37287},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1335,"column":1,"offset":37291},"end":{"line":1335,"column":4,"offset":37294},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1337,"column":1,"offset":37298},"end":{"line":1339,"column":10,"offset":37342},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1339,"column":10,"offset":37342},"end":{"line":1339,"column":40,"offset":37372},"indent":[]}}],"position":{"start":{"line":1339,"column":10,"offset":37342},"end":{"line":1339,"column":40,"offset":37372},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1339,"column":40,"offset":37372},"end":{"line":1340,"column":15,"offset":37388},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1340,"column":15,"offset":37388},"end":{"line":1340,"column":50,"offset":37423},"indent":[]}}],"position":{"start":{"line":1340,"column":15,"offset":37388},"end":{"line":1340,"column":50,"offset":37423},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1340,"column":50,"offset":37423},"end":{"line":1342,"column":45,"offset":37489},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1342,"column":45,"offset":37489},"end":{"line":1342,"column":115,"offset":37559},"indent":[]}}],"position":{"start":{"line":1342,"column":45,"offset":37489},"end":{"line":1342,"column":115,"offset":37559},"indent":[]}}],"position":{"start":{"line":1337,"column":1,"offset":37298},"end":{"line":1342,"column":115,"offset":37559},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1344,"column":1,"offset":37563},"end":{"line":1344,"column":4,"offset":37566},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1346,"column":2,"offset":37571},"end":{"line":1346,"column":142,"offset":37711},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":37570},"end":{"line":1346,"column":241,"offset":37810},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":37570},"end":{"line":1346,"column":241,"offset":37810},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1348,"column":4,"offset":37817},"end":{"line":1348,"column":6,"offset":37819},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1348,"column":7,"offset":37820},"end":{"line":1348,"column":40,"offset":37853},"indent":[]}}],"position":{"start":{"line":1348,"column":6,"offset":37819},"end":{"line":1348,"column":114,"offset":37927},"indent":[]}}],"position":{"start":{"line":1348,"column":1,"offset":37814},"end":{"line":1348,"column":114,"offset":37927},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1350,"column":5,"offset":37935},"end":{"line":1350,"column":13,"offset":37943},"indent":[]}}],"position":{"start":{"line":1350,"column":1,"offset":37931},"end":{"line":1350,"column":13,"offset":37943},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1352,"column":1,"offset":37947},"end":{"line":1352,"column":99,"offset":38045},"indent":[]}}],"position":{"start":{"line":1352,"column":1,"offset":37947},"end":{"line":1352,"column":99,"offset":38045},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1354,"column":1,"offset":38049},"end":{"line":1354,"column":32,"offset":38080},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1354,"column":33,"offset":38081},"end":{"line":1354,"column":34,"offset":38082},"indent":[]}}],"position":{"start":{"line":1354,"column":32,"offset":38080},"end":{"line":1354,"column":35,"offset":38083},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1354,"column":35,"offset":38083},"end":{"line":1354,"column":48,"offset":38096},"indent":[]}}],"position":{"start":{"line":1354,"column":1,"offset":38049},"end":{"line":1354,"column":48,"offset":38096},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1356,"column":3,"offset":38102},"end":{"line":1356,"column":11,"offset":38110},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":38100},"end":{"line":1356,"column":13,"offset":38112},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":38100},"end":{"line":1356,"column":13,"offset":38112},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1358,"column":1,"offset":38116},"end":{"line":1363,"column":4,"offset":38268},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1365,"column":5,"offset":38276},"end":{"line":1365,"column":14,"offset":38285},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":38272},"end":{"line":1365,"column":14,"offset":38285},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1367,"column":1,"offset":38289},"end":{"line":1367,"column":208,"offset":38496},"indent":[]}}],"position":{"start":{"line":1367,"column":1,"offset":38289},"end":{"line":1367,"column":208,"offset":38496},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1369,"column":1,"offset":38500},"end":{"line":1393,"column":4,"offset":39091},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1395,"column":1,"offset":39095},"end":{"line":1395,"column":4,"offset":39098},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1397,"column":1,"offset":39102},"end":{"line":1399,"column":9,"offset":39147},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1399,"column":9,"offset":39147},"end":{"line":1399,"column":38,"offset":39176},"indent":[]}}],"position":{"start":{"line":1399,"column":9,"offset":39147},"end":{"line":1399,"column":38,"offset":39176},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1399,"column":38,"offset":39176},"end":{"line":1400,"column":23,"offset":39200},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1400,"column":23,"offset":39200},"end":{"line":1400,"column":66,"offset":39243},"indent":[]}}],"position":{"start":{"line":1400,"column":23,"offset":39200},"end":{"line":1400,"column":66,"offset":39243},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1400,"column":66,"offset":39243},"end":{"line":1402,"column":13,"offset":39277},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1402,"column":13,"offset":39277},"end":{"line":1402,"column":51,"offset":39315},"indent":[]}}],"position":{"start":{"line":1402,"column":13,"offset":39277},"end":{"line":1402,"column":51,"offset":39315},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1402,"column":51,"offset":39315},"end":{"line":1403,"column":33,"offset":39349},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1403,"column":33,"offset":39349},"end":{"line":1403,"column":91,"offset":39407},"indent":[]}}],"position":{"start":{"line":1403,"column":33,"offset":39349},"end":{"line":1403,"column":91,"offset":39407},"indent":[]}}],"position":{"start":{"line":1397,"column":1,"offset":39102},"end":{"line":1403,"column":91,"offset":39407},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1405,"column":1,"offset":39411},"end":{"line":1405,"column":4,"offset":39414},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1407,"column":2,"offset":39419},"end":{"line":1407,"column":142,"offset":39559},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":39418},"end":{"line":1407,"column":233,"offset":39650},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":39418},"end":{"line":1407,"column":233,"offset":39650},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1409,"column":4,"offset":39657},"end":{"line":1409,"column":6,"offset":39659},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1409,"column":7,"offset":39660},"end":{"line":1409,"column":36,"offset":39689},"indent":[]}}],"position":{"start":{"line":1409,"column":6,"offset":39659},"end":{"line":1409,"column":106,"offset":39759},"indent":[]}}],"position":{"start":{"line":1409,"column":1,"offset":39654},"end":{"line":1409,"column":106,"offset":39759},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1411,"column":5,"offset":39767},"end":{"line":1411,"column":13,"offset":39775},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":39763},"end":{"line":1411,"column":13,"offset":39775},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1413,"column":1,"offset":39779},"end":{"line":1413,"column":44,"offset":39822},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1413,"column":44,"offset":39822},"end":{"line":1413,"column":49,"offset":39827},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1413,"column":49,"offset":39827},"end":{"line":1413,"column":104,"offset":39882},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":39779},"end":{"line":1413,"column":104,"offset":39882},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1415,"column":1,"offset":39886},"end":{"line":1415,"column":37,"offset":39922},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1415,"column":37,"offset":39922},"end":{"line":1415,"column":46,"offset":39931},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1415,"column":46,"offset":39931},"end":{"line":1415,"column":75,"offset":39960},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1415,"column":75,"offset":39960},"end":{"line":1415,"column":80,"offset":39965},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1415,"column":80,"offset":39965},"end":{"line":1415,"column":81,"offset":39966},"indent":[]}}],"position":{"start":{"line":1415,"column":1,"offset":39886},"end":{"line":1415,"column":81,"offset":39966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1417,"column":1,"offset":39970},"end":{"line":1417,"column":48,"offset":40017},"indent":[]}}],"position":{"start":{"line":1417,"column":1,"offset":39970},"end":{"line":1417,"column":48,"offset":40017},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1419,"column":3,"offset":40023},"end":{"line":1419,"column":8,"offset":40028},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":40021},"end":{"line":1419,"column":10,"offset":40030},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1419,"column":10,"offset":40030},"end":{"line":1419,"column":45,"offset":40065},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":40021},"end":{"line":1419,"column":45,"offset":40065},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1421,"column":3,"offset":40071},"end":{"line":1421,"column":11,"offset":40079},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":40069},"end":{"line":1421,"column":13,"offset":40081},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":40069},"end":{"line":1421,"column":13,"offset":40081},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1423,"column":1,"offset":40085},"end":{"line":1431,"column":35,"offset":40325},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1433,"column":3,"offset":40331},"end":{"line":1433,"column":13,"offset":40341},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40329},"end":{"line":1433,"column":15,"offset":40343},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":40329},"end":{"line":1433,"column":15,"offset":40343},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1435,"column":1,"offset":40347},"end":{"line":1446,"column":44,"offset":40689},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1448,"column":5,"offset":40697},"end":{"line":1448,"column":14,"offset":40706},"indent":[]}}],"position":{"start":{"line":1448,"column":1,"offset":40693},"end":{"line":1448,"column":14,"offset":40706},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1450,"column":1,"offset":40710},"end":{"line":1450,"column":50,"offset":40759},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":50,"offset":40759},"end":{"line":1450,"column":53,"offset":40762},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1450,"column":53,"offset":40762},"end":{"line":1450,"column":105,"offset":40814},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":105,"offset":40814},"end":{"line":1450,"column":108,"offset":40817},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1450,"column":108,"offset":40817},"end":{"line":1450,"column":161,"offset":40870},"indent":[]}}],"position":{"start":{"line":1450,"column":1,"offset":40710},"end":{"line":1450,"column":161,"offset":40870},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1452,"column":1,"offset":40874},"end":{"line":1471,"column":4,"offset":41291},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1473,"column":1,"offset":41295},"end":{"line":1473,"column":4,"offset":41298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1475,"column":1,"offset":41302},"end":{"line":1477,"column":23,"offset":41361},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1477,"column":23,"offset":41361},"end":{"line":1477,"column":66,"offset":41404},"indent":[]}}],"position":{"start":{"line":1477,"column":23,"offset":41361},"end":{"line":1477,"column":66,"offset":41404},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1477,"column":66,"offset":41404},"end":{"line":1478,"column":25,"offset":41430},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1478,"column":25,"offset":41430},"end":{"line":1478,"column":70,"offset":41475},"indent":[]}}],"position":{"start":{"line":1478,"column":25,"offset":41430},"end":{"line":1478,"column":70,"offset":41475},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1478,"column":70,"offset":41475},"end":{"line":1479,"column":15,"offset":41491},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1479,"column":15,"offset":41491},"end":{"line":1479,"column":50,"offset":41526},"indent":[]}}],"position":{"start":{"line":1479,"column":15,"offset":41491},"end":{"line":1479,"column":50,"offset":41526},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1479,"column":50,"offset":41526},"end":{"line":1481,"column":22,"offset":41569},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1481,"column":22,"offset":41569},"end":{"line":1481,"column":69,"offset":41616},"indent":[]}}],"position":{"start":{"line":1481,"column":22,"offset":41569},"end":{"line":1481,"column":69,"offset":41616},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1481,"column":69,"offset":41616},"end":{"line":1482,"column":20,"offset":41637},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1482,"column":20,"offset":41637},"end":{"line":1482,"column":65,"offset":41682},"indent":[]}}],"position":{"start":{"line":1482,"column":20,"offset":41637},"end":{"line":1482,"column":65,"offset":41682},"indent":[]}}],"position":{"start":{"line":1475,"column":1,"offset":41302},"end":{"line":1482,"column":65,"offset":41682},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1484,"column":1,"offset":41686},"end":{"line":1484,"column":4,"offset":41689},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1486,"column":2,"offset":41694},"end":{"line":1486,"column":142,"offset":41834},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":41693},"end":{"line":1486,"column":221,"offset":41913},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":41693},"end":{"line":1486,"column":221,"offset":41913},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1488,"column":4,"offset":41920},"end":{"line":1488,"column":6,"offset":41922},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1488,"column":7,"offset":41923},"end":{"line":1488,"column":30,"offset":41946},"indent":[]}}],"position":{"start":{"line":1488,"column":6,"offset":41922},"end":{"line":1488,"column":94,"offset":42010},"indent":[]}}],"position":{"start":{"line":1488,"column":1,"offset":41917},"end":{"line":1488,"column":94,"offset":42010},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1490,"column":5,"offset":42018},"end":{"line":1490,"column":13,"offset":42026},"indent":[]}}],"position":{"start":{"line":1490,"column":1,"offset":42014},"end":{"line":1490,"column":13,"offset":42026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1492,"column":1,"offset":42030},"end":{"line":1492,"column":29,"offset":42058},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":29,"offset":42058},"end":{"line":1492,"column":34,"offset":42063},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1492,"column":34,"offset":42063},"end":{"line":1492,"column":39,"offset":42068},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1492,"column":39,"offset":42068},"end":{"line":1492,"column":44,"offset":42073},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1492,"column":44,"offset":42073},"end":{"line":1492,"column":46,"offset":42075},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1492,"column":48,"offset":42077},"end":{"line":1492,"column":60,"offset":42089},"indent":[]}}],"position":{"start":{"line":1492,"column":46,"offset":42075},"end":{"line":1492,"column":62,"offset":42091},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1492,"column":62,"offset":42091},"end":{"line":1492,"column":99,"offset":42128},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":99,"offset":42128},"end":{"line":1492,"column":104,"offset":42133},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1492,"column":104,"offset":42133},"end":{"line":1492,"column":105,"offset":42134},"indent":[]}}],"position":{"start":{"line":1492,"column":1,"offset":42030},"end":{"line":1492,"column":105,"offset":42134},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1494,"column":1,"offset":42138},"end":{"line":1494,"column":38,"offset":42175},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1494,"column":38,"offset":42175},"end":{"line":1494,"column":43,"offset":42180},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1494,"column":43,"offset":42180},"end":{"line":1494,"column":50,"offset":42187},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1494,"column":50,"offset":42187},"end":{"line":1494,"column":55,"offset":42192},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1494,"column":55,"offset":42192},"end":{"line":1494,"column":83,"offset":42220},"indent":[]}}],"position":{"start":{"line":1494,"column":1,"offset":42138},"end":{"line":1494,"column":83,"offset":42220},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1496,"column":3,"offset":42226},"end":{"line":1496,"column":11,"offset":42234},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":42224},"end":{"line":1496,"column":13,"offset":42236},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":42224},"end":{"line":1496,"column":13,"offset":42236},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1498,"column":1,"offset":42240},"end":{"line":1504,"column":4,"offset":42286},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1506,"column":1,"offset":42290},"end":{"line":1506,"column":50,"offset":42339},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":42290},"end":{"line":1506,"column":50,"offset":42339},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1508,"column":1,"offset":42343},"end":{"line":1514,"column":4,"offset":42389},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1516,"column":3,"offset":42395},"end":{"line":1516,"column":15,"offset":42407},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":42393},"end":{"line":1516,"column":17,"offset":42409},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":42393},"end":{"line":1516,"column":17,"offset":42409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1518,"column":1,"offset":42413},"end":{"line":1518,"column":69,"offset":42481},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":69,"offset":42481},"end":{"line":1518,"column":74,"offset":42486},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1518,"column":74,"offset":42486},"end":{"line":1518,"column":121,"offset":42533},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":121,"offset":42533},"end":{"line":1518,"column":126,"offset":42538},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1518,"column":126,"offset":42538},"end":{"line":1518,"column":132,"offset":42544},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":132,"offset":42544},"end":{"line":1518,"column":137,"offset":42549},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1518,"column":137,"offset":42549},"end":{"line":1518,"column":194,"offset":42606},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":194,"offset":42606},"end":{"line":1518,"column":199,"offset":42611},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1518,"column":199,"offset":42611},"end":{"line":1518,"column":233,"offset":42645},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":233,"offset":42645},"end":{"line":1518,"column":238,"offset":42650},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1518,"column":238,"offset":42650},"end":{"line":1518,"column":328,"offset":42740},"indent":[]}}],"position":{"start":{"line":1518,"column":1,"offset":42413},"end":{"line":1518,"column":328,"offset":42740},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1520,"column":5,"offset":42748},"end":{"line":1520,"column":14,"offset":42757},"indent":[]}}],"position":{"start":{"line":1520,"column":1,"offset":42744},"end":{"line":1520,"column":14,"offset":42757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1522,"column":1,"offset":42761},"end":{"line":1522,"column":14,"offset":42774},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":14,"offset":42774},"end":{"line":1522,"column":17,"offset":42777},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1522,"column":17,"offset":42777},"end":{"line":1522,"column":45,"offset":42805},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":45,"offset":42805},"end":{"line":1522,"column":48,"offset":42808},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1522,"column":48,"offset":42808},"end":{"line":1522,"column":80,"offset":42840},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":80,"offset":42840},"end":{"line":1522,"column":83,"offset":42843},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1522,"column":83,"offset":42843},"end":{"line":1522,"column":113,"offset":42873},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":113,"offset":42873},"end":{"line":1522,"column":116,"offset":42876},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1522,"column":116,"offset":42876},"end":{"line":1522,"column":120,"offset":42880},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1522,"column":120,"offset":42880},"end":{"line":1522,"column":123,"offset":42883},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1522,"column":123,"offset":42883},"end":{"line":1522,"column":128,"offset":42888},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":128,"offset":42888},"end":{"line":1522,"column":131,"offset":42891},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1522,"column":131,"offset":42891},"end":{"line":1522,"column":140,"offset":42900},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":140,"offset":42900},"end":{"line":1522,"column":143,"offset":42903},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1522,"column":143,"offset":42903},"end":{"line":1522,"column":144,"offset":42904},"indent":[]}}],"position":{"start":{"line":1522,"column":1,"offset":42761},"end":{"line":1522,"column":144,"offset":42904},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1524,"column":1,"offset":42908},"end":{"line":1524,"column":38,"offset":42945},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":38,"offset":42945},"end":{"line":1524,"column":41,"offset":42948},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1524,"column":41,"offset":42948},"end":{"line":1524,"column":72,"offset":42979},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":72,"offset":42979},"end":{"line":1524,"column":75,"offset":42982},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1524,"column":75,"offset":42982},"end":{"line":1524,"column":158,"offset":43065},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":42908},"end":{"line":1524,"column":158,"offset":43065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1526,"column":1,"offset":43069},"end":{"line":1526,"column":99,"offset":43167},"indent":[]}}],"position":{"start":{"line":1526,"column":1,"offset":43069},"end":{"line":1526,"column":99,"offset":43167},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1528,"column":1,"offset":43171},"end":{"line":1601,"column":4,"offset":45173},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1603,"column":1,"offset":45177},"end":{"line":1603,"column":4,"offset":45180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1605,"column":1,"offset":45184},"end":{"line":1607,"column":23,"offset":45243},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1607,"column":23,"offset":45243},"end":{"line":1607,"column":66,"offset":45286},"indent":[]}}],"position":{"start":{"line":1607,"column":23,"offset":45243},"end":{"line":1607,"column":66,"offset":45286},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1607,"column":66,"offset":45286},"end":{"line":1608,"column":25,"offset":45312},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1608,"column":25,"offset":45312},"end":{"line":1608,"column":70,"offset":45357},"indent":[]}}],"position":{"start":{"line":1608,"column":25,"offset":45312},"end":{"line":1608,"column":70,"offset":45357},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1608,"column":70,"offset":45357},"end":{"line":1609,"column":10,"offset":45368},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1609,"column":10,"offset":45368},"end":{"line":1609,"column":40,"offset":45398},"indent":[]}}],"position":{"start":{"line":1609,"column":10,"offset":45368},"end":{"line":1609,"column":40,"offset":45398},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1609,"column":40,"offset":45398},"end":{"line":1611,"column":34,"offset":45453},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1611,"column":34,"offset":45453},"end":{"line":1611,"column":93,"offset":45512},"indent":[]}}],"position":{"start":{"line":1611,"column":34,"offset":45453},"end":{"line":1611,"column":93,"offset":45512},"indent":[]}}],"position":{"start":{"line":1605,"column":1,"offset":45184},"end":{"line":1611,"column":93,"offset":45512},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1613,"column":1,"offset":45516},"end":{"line":1613,"column":4,"offset":45519},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1615,"column":2,"offset":45524},"end":{"line":1615,"column":142,"offset":45664},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":45523},"end":{"line":1615,"column":207,"offset":45729},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":45523},"end":{"line":1615,"column":207,"offset":45729},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1617,"column":4,"offset":45736},"end":{"line":1617,"column":6,"offset":45738},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1617,"column":7,"offset":45739},"end":{"line":1617,"column":23,"offset":45755},"indent":[]}}],"position":{"start":{"line":1617,"column":6,"offset":45738},"end":{"line":1617,"column":80,"offset":45812},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":45733},"end":{"line":1617,"column":80,"offset":45812},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1619,"column":5,"offset":45820},"end":{"line":1619,"column":13,"offset":45828},"indent":[]}}],"position":{"start":{"line":1619,"column":1,"offset":45816},"end":{"line":1619,"column":13,"offset":45828},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1621,"column":1,"offset":45832},"end":{"line":1621,"column":103,"offset":45934},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1621,"column":103,"offset":45934},"end":{"line":1621,"column":110,"offset":45941},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1621,"column":110,"offset":45941},"end":{"line":1621,"column":112,"offset":45943},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1621,"column":112,"offset":45943},"end":{"line":1621,"column":117,"offset":45948},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1621,"column":117,"offset":45948},"end":{"line":1621,"column":131,"offset":45962},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1621,"column":131,"offset":45962},"end":{"line":1621,"column":158,"offset":45989},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1621,"column":158,"offset":45989},"end":{"line":1621,"column":167,"offset":45998},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1621,"column":167,"offset":45998},"end":{"line":1621,"column":178,"offset":46009},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1621,"column":178,"offset":46009},"end":{"line":1621,"column":259,"offset":46090},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":45832},"end":{"line":1621,"column":259,"offset":46090},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1623,"column":1,"offset":46094},"end":{"line":1623,"column":74,"offset":46167},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":46094},"end":{"line":1623,"column":74,"offset":46167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1625,"column":1,"offset":46171},"end":{"line":1625,"column":28,"offset":46198},"indent":[]}}],"position":{"start":{"line":1625,"column":1,"offset":46171},"end":{"line":1625,"column":28,"offset":46198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1627,"column":1,"offset":46202},"end":{"line":1627,"column":8,"offset":46209},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1627,"column":8,"offset":46209},"end":{"line":1627,"column":11,"offset":46212},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1627,"column":11,"offset":46212},"end":{"line":1627,"column":46,"offset":46247},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1627,"column":46,"offset":46247},"end":{"line":1627,"column":49,"offset":46250},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1627,"column":49,"offset":46250},"end":{"line":1627,"column":110,"offset":46311},"indent":[]}}],"position":{"start":{"line":1627,"column":1,"offset":46202},"end":{"line":1627,"column":110,"offset":46311},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1629,"column":1,"offset":46315},"end":{"line":1629,"column":46,"offset":46360},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1629,"column":46,"offset":46360},"end":{"line":1629,"column":63,"offset":46377},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1629,"column":63,"offset":46377},"end":{"line":1629,"column":64,"offset":46378},"indent":[]}}],"position":{"start":{"line":1629,"column":1,"offset":46315},"end":{"line":1629,"column":64,"offset":46378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1631,"column":1,"offset":46382},"end":{"line":1631,"column":90,"offset":46471},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1631,"column":90,"offset":46471},"end":{"line":1631,"column":93,"offset":46474},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1631,"column":93,"offset":46474},"end":{"line":1631,"column":94,"offset":46475},"indent":[]}}],"position":{"start":{"line":1631,"column":1,"offset":46382},"end":{"line":1631,"column":94,"offset":46475},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1633,"column":5,"offset":46483},"end":{"line":1633,"column":30,"offset":46508},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":30,"offset":46508},"end":{"line":1633,"column":33,"offset":46511},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1633,"column":33,"offset":46511},"end":{"line":1633,"column":48,"offset":46526},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":48,"offset":46526},"end":{"line":1633,"column":51,"offset":46529},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1633,"column":51,"offset":46529},"end":{"line":1633,"column":66,"offset":46544},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1633,"column":66,"offset":46544},"end":{"line":1633,"column":69,"offset":46547},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1633,"column":69,"offset":46547},"end":{"line":1633,"column":74,"offset":46552},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1633,"column":74,"offset":46552},"end":{"line":1633,"column":77,"offset":46555},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1633,"column":77,"offset":46555},"end":{"line":1633,"column":78,"offset":46556},"indent":[]}}],"position":{"start":{"line":1633,"column":5,"offset":46483},"end":{"line":1633,"column":78,"offset":46556},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":46479},"end":{"line":1633,"column":78,"offset":46556},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1634,"column":5,"offset":46562},"end":{"line":1634,"column":31,"offset":46588},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":31,"offset":46588},"end":{"line":1634,"column":34,"offset":46591},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1634,"column":34,"offset":46591},"end":{"line":1634,"column":49,"offset":46606},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":49,"offset":46606},"end":{"line":1634,"column":52,"offset":46609},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1634,"column":52,"offset":46609},"end":{"line":1634,"column":61,"offset":46618},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1634,"column":61,"offset":46618},"end":{"line":1634,"column":64,"offset":46621},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1634,"column":64,"offset":46621},"end":{"line":1634,"column":65,"offset":46622},"indent":[]}}],"position":{"start":{"line":1634,"column":5,"offset":46562},"end":{"line":1634,"column":65,"offset":46622},"indent":[]}}],"position":{"start":{"line":1634,"column":1,"offset":46558},"end":{"line":1634,"column":65,"offset":46622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1635,"column":5,"offset":46628},"end":{"line":1635,"column":30,"offset":46653},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":30,"offset":46653},"end":{"line":1635,"column":33,"offset":46656},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1635,"column":33,"offset":46656},"end":{"line":1635,"column":48,"offset":46671},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":48,"offset":46671},"end":{"line":1635,"column":51,"offset":46674},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1635,"column":51,"offset":46674},"end":{"line":1635,"column":60,"offset":46683},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":60,"offset":46683},"end":{"line":1635,"column":63,"offset":46686},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1635,"column":63,"offset":46686},"end":{"line":1635,"column":100,"offset":46723},"indent":[]}}],"position":{"start":{"line":1635,"column":5,"offset":46628},"end":{"line":1635,"column":100,"offset":46723},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":46624},"end":{"line":1635,"column":100,"offset":46723},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":46479},"end":{"line":1635,"column":100,"offset":46723},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1637,"column":1,"offset":46727},"end":{"line":1637,"column":46,"offset":46772},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":46727},"end":{"line":1637,"column":46,"offset":46772},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1639,"column":1,"offset":46776},"end":{"line":1647,"column":4,"offset":46860},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1649,"column":3,"offset":46866},"end":{"line":1649,"column":7,"offset":46870},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":46864},"end":{"line":1649,"column":9,"offset":46872},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1649,"column":9,"offset":46872},"end":{"line":1649,"column":205,"offset":47068},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":46864},"end":{"line":1649,"column":205,"offset":47068},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1651,"column":5,"offset":47076},"end":{"line":1651,"column":14,"offset":47085},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":47072},"end":{"line":1651,"column":14,"offset":47085},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1653,"column":1,"offset":47089},"end":{"line":1653,"column":64,"offset":47152},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":47089},"end":{"line":1653,"column":64,"offset":47152},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1655,"column":1,"offset":47156},"end":{"line":1684,"column":4,"offset":47862},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1686,"column":1,"offset":47866},"end":{"line":1686,"column":127,"offset":47992},"indent":[]}}],"position":{"start":{"line":1686,"column":1,"offset":47866},"end":{"line":1686,"column":127,"offset":47992},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1688,"column":1,"offset":47996},"end":{"line":1729,"column":4,"offset":48889},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1731,"column":1,"offset":48893},"end":{"line":1731,"column":138,"offset":49030},"indent":[]}}],"position":{"start":{"line":1731,"column":1,"offset":48893},"end":{"line":1731,"column":138,"offset":49030},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1733,"column":1,"offset":49034},"end":{"line":1753,"column":4,"offset":49557},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1755,"column":2,"offset":49562},"end":{"line":1755,"column":142,"offset":49702},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":49561},"end":{"line":1755,"column":177,"offset":49737},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":49561},"end":{"line":1755,"column":177,"offset":49737},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1757,"column":3,"offset":49743},"end":{"line":1757,"column":36,"offset":49776},"indent":[]}}],"position":{"start":{"line":1757,"column":1,"offset":49741},"end":{"line":1757,"column":36,"offset":49776},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1759,"column":3,"offset":49782},"end":{"line":1759,"column":144,"offset":49923},"indent":[]}}],"position":{"start":{"line":1759,"column":3,"offset":49782},"end":{"line":1759,"column":144,"offset":49923},"indent":[]}}],"position":{"start":{"line":1759,"column":1,"offset":49780},"end":{"line":1759,"column":144,"offset":49923},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1761,"column":1,"offset":49927},"end":{"line":1761,"column":57,"offset":49983},"indent":[]}}],"position":{"start":{"line":1761,"column":1,"offset":49927},"end":{"line":1761,"column":57,"offset":49983},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1763,"column":1,"offset":49987},"end":{"line":1763,"column":63,"offset":50049},"indent":[]}}],"position":{"start":{"line":1763,"column":1,"offset":49987},"end":{"line":1763,"column":63,"offset":50049},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1765,"column":3,"offset":50055},"end":{"line":1765,"column":57,"offset":50109},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1765,"column":58,"offset":50110},"end":{"line":1765,"column":63,"offset":50115},"indent":[]}}],"position":{"start":{"line":1765,"column":57,"offset":50109},"end":{"line":1765,"column":64,"offset":50116},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1765,"column":64,"offset":50116},"end":{"line":1765,"column":105,"offset":50157},"indent":[]}}],"position":{"start":{"line":1765,"column":3,"offset":50055},"end":{"line":1765,"column":105,"offset":50157},"indent":[]}}],"position":{"start":{"line":1765,"column":1,"offset":50053},"end":{"line":1765,"column":105,"offset":50157},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1767,"column":3,"offset":50163},"end":{"line":1767,"column":13,"offset":50173},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":50161},"end":{"line":1767,"column":15,"offset":50175},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":50161},"end":{"line":1767,"column":15,"offset":50175},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1769,"column":1,"offset":50179},"end":{"line":1769,"column":66,"offset":50244},"indent":[]}}],"position":{"start":{"line":1769,"column":1,"offset":50179},"end":{"line":1769,"column":66,"offset":50244},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1771,"column":3,"offset":50250},"end":{"line":1771,"column":9,"offset":50256},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":50248},"end":{"line":1771,"column":11,"offset":50258},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1771,"column":11,"offset":50258},"end":{"line":1771,"column":19,"offset":50266},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1771,"column":19,"offset":50266},"end":{"line":1771,"column":21,"offset":50268},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":1771,"column":21,"offset":50268},"end":{"line":1772,"column":1,"offset":50292},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1772,"column":3,"offset":50294},"end":{"line":1772,"column":10,"offset":50301},"indent":[]}}],"position":{"start":{"line":1772,"column":1,"offset":50292},"end":{"line":1772,"column":12,"offset":50303},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1772,"column":12,"offset":50303},"end":{"line":1772,"column":17,"offset":50308},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":50248},"end":{"line":1772,"column":17,"offset":50308},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1774,"column":3,"offset":50314},"end":{"line":1774,"column":13,"offset":50324},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":50312},"end":{"line":1774,"column":15,"offset":50326},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":50312},"end":{"line":1774,"column":15,"offset":50326},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1776,"column":1,"offset":50330},"end":{"line":1776,"column":66,"offset":50395},"indent":[]}}],"position":{"start":{"line":1776,"column":1,"offset":50330},"end":{"line":1776,"column":66,"offset":50395},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1778,"column":3,"offset":50401},"end":{"line":1778,"column":9,"offset":50407},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":50399},"end":{"line":1778,"column":11,"offset":50409},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1778,"column":11,"offset":50409},"end":{"line":1778,"column":19,"offset":50417},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1778,"column":19,"offset":50417},"end":{"line":1778,"column":21,"offset":50419},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":1778,"column":21,"offset":50419},"end":{"line":1779,"column":1,"offset":50445},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1779,"column":3,"offset":50447},"end":{"line":1779,"column":10,"offset":50454},"indent":[]}}],"position":{"start":{"line":1779,"column":1,"offset":50445},"end":{"line":1779,"column":12,"offset":50456},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1779,"column":12,"offset":50456},"end":{"line":1779,"column":18,"offset":50462},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":50399},"end":{"line":1779,"column":18,"offset":50462},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1781,"column":3,"offset":50468},"end":{"line":1781,"column":13,"offset":50478},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":50466},"end":{"line":1781,"column":15,"offset":50480},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":50466},"end":{"line":1781,"column":15,"offset":50480},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1783,"column":3,"offset":50486},"end":{"line":1783,"column":9,"offset":50492},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":50484},"end":{"line":1783,"column":11,"offset":50494},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1783,"column":11,"offset":50494},"end":{"line":1783,"column":19,"offset":50502},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1783,"column":19,"offset":50502},"end":{"line":1783,"column":21,"offset":50504},"indent":[]}},{"type":"text","value":"]\n","position":{"start":{"line":1783,"column":21,"offset":50504},"end":{"line":1784,"column":1,"offset":50507},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1784,"column":3,"offset":50509},"end":{"line":1784,"column":10,"offset":50516},"indent":[]}}],"position":{"start":{"line":1784,"column":1,"offset":50507},"end":{"line":1784,"column":12,"offset":50518},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1784,"column":12,"offset":50518},"end":{"line":1784,"column":17,"offset":50523},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":50484},"end":{"line":1784,"column":17,"offset":50523},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1786,"column":3,"offset":50529},"end":{"line":1786,"column":15,"offset":50541},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":50527},"end":{"line":1786,"column":17,"offset":50543},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":50527},"end":{"line":1786,"column":17,"offset":50543},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1788,"column":3,"offset":50549},"end":{"line":1788,"column":51,"offset":50597},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1788,"column":51,"offset":50597},"end":{"line":1788,"column":62,"offset":50608},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1788,"column":62,"offset":50608},"end":{"line":1788,"column":63,"offset":50609},"indent":[]}}],"position":{"start":{"line":1788,"column":3,"offset":50549},"end":{"line":1788,"column":63,"offset":50609},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":50547},"end":{"line":1788,"column":63,"offset":50609},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1789,"column":3,"offset":50613},"end":{"line":1789,"column":28,"offset":50638},"indent":[]}}],"position":{"start":{"line":1789,"column":3,"offset":50613},"end":{"line":1789,"column":28,"offset":50638},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":50611},"end":{"line":1789,"column":28,"offset":50638},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":50547},"end":{"line":1789,"column":28,"offset":50638},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1791,"column":2,"offset":50643},"end":{"line":1791,"column":8,"offset":50649},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":50642},"end":{"line":1791,"column":62,"offset":50703},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1791,"column":62,"offset":50703},"end":{"line":1791,"column":106,"offset":50747},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":50642},"end":{"line":1791,"column":106,"offset":50747},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1793,"column":3,"offset":50753},"end":{"line":1793,"column":144,"offset":50894},"indent":[]}}],"position":{"start":{"line":1793,"column":3,"offset":50753},"end":{"line":1793,"column":144,"offset":50894},"indent":[]}}],"position":{"start":{"line":1793,"column":1,"offset":50751},"end":{"line":1793,"column":144,"offset":50894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1795,"column":1,"offset":50898},"end":{"line":1795,"column":98,"offset":50995},"indent":[]}}],"position":{"start":{"line":1795,"column":1,"offset":50898},"end":{"line":1795,"column":98,"offset":50995},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1797,"column":1,"offset":50999},"end":{"line":1797,"column":119,"offset":51117},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1797,"column":120,"offset":51118},"end":{"line":1797,"column":125,"offset":51123},"indent":[]}}],"position":{"start":{"line":1797,"column":119,"offset":51117},"end":{"line":1797,"column":126,"offset":51124},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1797,"column":126,"offset":51124},"end":{"line":1797,"column":160,"offset":51158},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":50999},"end":{"line":1797,"column":160,"offset":51158},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1799,"column":3,"offset":51164},"end":{"line":1799,"column":11,"offset":51172},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":51162},"end":{"line":1799,"column":13,"offset":51174},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":51162},"end":{"line":1799,"column":13,"offset":51174},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1801,"column":1,"offset":51178},"end":{"line":1801,"column":25,"offset":51202},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":25,"offset":51202},"end":{"line":1801,"column":27,"offset":51204},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":1801,"column":27,"offset":51204},"end":{"line":1801,"column":41,"offset":51218},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":51178},"end":{"line":1801,"column":41,"offset":51218},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1803,"column":1,"offset":51222},"end":{"line":1803,"column":25,"offset":51246},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1803,"column":25,"offset":51246},"end":{"line":1803,"column":27,"offset":51248},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":1803,"column":27,"offset":51248},"end":{"line":1803,"column":98,"offset":51319},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":51222},"end":{"line":1803,"column":98,"offset":51319},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1805,"column":1,"offset":51323},"end":{"line":1806,"column":10,"offset":51341},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":1808,"column":1,"offset":51345},"end":{"line":1808,"column":3,"offset":51347},"indent":[]}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":1808,"column":3,"offset":51347},"end":{"line":1810,"column":1,"offset":51357},"indent":[1,1]}},{"type":"text","value":"-","position":{"start":{"line":1810,"column":1,"offset":51357},"end":{"line":1810,"column":3,"offset":51359},"indent":[]}},{"type":"text","value":"10 5","position":{"start":{"line":1810,"column":3,"offset":51359},"end":{"line":1810,"column":7,"offset":51363},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":51345},"end":{"line":1810,"column":7,"offset":51363},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1812,"column":2,"offset":51368},"end":{"line":1812,"column":8,"offset":51374},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":51367},"end":{"line":1812,"column":84,"offset":51450},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1812,"column":84,"offset":51450},"end":{"line":1812,"column":106,"offset":51472},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":51367},"end":{"line":1812,"column":106,"offset":51472},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1814,"column":3,"offset":51478},"end":{"line":1814,"column":144,"offset":51619},"indent":[]}}],"position":{"start":{"line":1814,"column":3,"offset":51478},"end":{"line":1814,"column":144,"offset":51619},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":51476},"end":{"line":1814,"column":144,"offset":51619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1816,"column":1,"offset":51623},"end":{"line":1816,"column":157,"offset":51779},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":51623},"end":{"line":1816,"column":157,"offset":51779},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1818,"column":1,"offset":51783},"end":{"line":1818,"column":56,"offset":51838},"indent":[]}}],"position":{"start":{"line":1818,"column":1,"offset":51783},"end":{"line":1818,"column":56,"offset":51838},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1820,"column":5,"offset":51846},"end":{"line":1820,"column":33,"offset":51874},"indent":[]}}],"position":{"start":{"line":1820,"column":5,"offset":51846},"end":{"line":1820,"column":33,"offset":51874},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":51842},"end":{"line":1820,"column":33,"offset":51874},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1821,"column":5,"offset":51880},"end":{"line":1821,"column":43,"offset":51918},"indent":[]}}],"position":{"start":{"line":1821,"column":5,"offset":51880},"end":{"line":1821,"column":43,"offset":51918},"indent":[]}}],"position":{"start":{"line":1821,"column":1,"offset":51876},"end":{"line":1821,"column":43,"offset":51918},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":51842},"end":{"line":1821,"column":43,"offset":51918},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1823,"column":3,"offset":51924},"end":{"line":1823,"column":13,"offset":51934},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":51922},"end":{"line":1823,"column":15,"offset":51936},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1823,"column":15,"offset":51936},"end":{"line":1823,"column":54,"offset":51975},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1823,"column":54,"offset":51975},"end":{"line":1823,"column":73,"offset":51994},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1823,"column":73,"offset":51994},"end":{"line":1823,"column":74,"offset":51995},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":51922},"end":{"line":1823,"column":74,"offset":51995},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1825,"column":3,"offset":52001},"end":{"line":1825,"column":13,"offset":52011},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":51999},"end":{"line":1825,"column":15,"offset":52013},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":51999},"end":{"line":1825,"column":15,"offset":52013},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1827,"column":1,"offset":52017},"end":{"line":1827,"column":67,"offset":52083},"indent":[]}}],"position":{"start":{"line":1827,"column":1,"offset":52017},"end":{"line":1827,"column":67,"offset":52083},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1829,"column":3,"offset":52089},"end":{"line":1829,"column":9,"offset":52095},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":52087},"end":{"line":1829,"column":11,"offset":52097},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1829,"column":11,"offset":52097},"end":{"line":1829,"column":19,"offset":52105},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1829,"column":19,"offset":52105},"end":{"line":1829,"column":21,"offset":52107},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":1829,"column":21,"offset":52107},"end":{"line":1830,"column":1,"offset":52135},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1830,"column":3,"offset":52137},"end":{"line":1830,"column":10,"offset":52144},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":52135},"end":{"line":1830,"column":12,"offset":52146},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1830,"column":12,"offset":52146},"end":{"line":1830,"column":13,"offset":52147},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1830,"column":13,"offset":52147},"end":{"line":1830,"column":15,"offset":52149},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":1830,"column":15,"offset":52149},"end":{"line":1831,"column":1,"offset":52171},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1831,"column":3,"offset":52173},"end":{"line":1831,"column":15,"offset":52185},"indent":[]}}],"position":{"start":{"line":1831,"column":1,"offset":52171},"end":{"line":1831,"column":17,"offset":52187},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1831,"column":17,"offset":52187},"end":{"line":1832,"column":21,"offset":52283},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1832,"column":21,"offset":52283},"end":{"line":1832,"column":23,"offset":52285},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1832,"column":23,"offset":52285},"end":{"line":1833,"column":44,"offset":52375},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1833,"column":44,"offset":52375},"end":{"line":1833,"column":46,"offset":52377},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":1833,"column":46,"offset":52377},"end":{"line":1834,"column":1,"offset":52423},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1834,"column":1,"offset":52423},"end":{"line":1834,"column":70,"offset":52492},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":52087},"end":{"line":1834,"column":70,"offset":52492},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1836,"column":3,"offset":52498},"end":{"line":1836,"column":13,"offset":52508},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":52496},"end":{"line":1836,"column":15,"offset":52510},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":52496},"end":{"line":1836,"column":15,"offset":52510},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1838,"column":3,"offset":52516},"end":{"line":1838,"column":9,"offset":52522},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":52514},"end":{"line":1838,"column":11,"offset":52524},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1838,"column":11,"offset":52524},"end":{"line":1838,"column":19,"offset":52532},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1838,"column":19,"offset":52532},"end":{"line":1838,"column":21,"offset":52534},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":1838,"column":21,"offset":52534},"end":{"line":1839,"column":1,"offset":52562},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1839,"column":3,"offset":52564},"end":{"line":1839,"column":10,"offset":52571},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":52562},"end":{"line":1839,"column":12,"offset":52573},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1839,"column":12,"offset":52573},"end":{"line":1839,"column":13,"offset":52574},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1839,"column":13,"offset":52574},"end":{"line":1839,"column":15,"offset":52576},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":1839,"column":15,"offset":52576},"end":{"line":1840,"column":1,"offset":52595},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1840,"column":3,"offset":52597},"end":{"line":1840,"column":15,"offset":52609},"indent":[]}}],"position":{"start":{"line":1840,"column":1,"offset":52595},"end":{"line":1840,"column":17,"offset":52611},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1840,"column":17,"offset":52611},"end":{"line":1840,"column":66,"offset":52660},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":52514},"end":{"line":1840,"column":66,"offset":52660},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1842,"column":3,"offset":52666},"end":{"line":1842,"column":13,"offset":52676},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":52664},"end":{"line":1842,"column":15,"offset":52678},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":52664},"end":{"line":1842,"column":15,"offset":52678},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1844,"column":3,"offset":52684},"end":{"line":1844,"column":9,"offset":52690},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":52682},"end":{"line":1844,"column":11,"offset":52692},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1844,"column":11,"offset":52692},"end":{"line":1844,"column":19,"offset":52700},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1844,"column":19,"offset":52700},"end":{"line":1844,"column":21,"offset":52702},"indent":[]}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":1844,"column":21,"offset":52702},"end":{"line":1845,"column":1,"offset":52714},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1845,"column":3,"offset":52716},"end":{"line":1845,"column":10,"offset":52723},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":52714},"end":{"line":1845,"column":12,"offset":52725},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1845,"column":12,"offset":52725},"end":{"line":1845,"column":13,"offset":52726},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1845,"column":13,"offset":52726},"end":{"line":1845,"column":15,"offset":52728},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1845,"column":15,"offset":52728},"end":{"line":1845,"column":16,"offset":52729},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":52682},"end":{"line":1845,"column":16,"offset":52729},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1847,"column":3,"offset":52735},"end":{"line":1847,"column":15,"offset":52747},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52733},"end":{"line":1847,"column":17,"offset":52749},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":52733},"end":{"line":1847,"column":17,"offset":52749},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1849,"column":3,"offset":52755},"end":{"line":1849,"column":51,"offset":52803},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1849,"column":51,"offset":52803},"end":{"line":1849,"column":61,"offset":52813},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1849,"column":61,"offset":52813},"end":{"line":1849,"column":62,"offset":52814},"indent":[]}}],"position":{"start":{"line":1849,"column":3,"offset":52755},"end":{"line":1849,"column":62,"offset":52814},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":52753},"end":{"line":1849,"column":62,"offset":52814},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1850,"column":3,"offset":52818},"end":{"line":1850,"column":28,"offset":52843},"indent":[]}}],"position":{"start":{"line":1850,"column":3,"offset":52818},"end":{"line":1850,"column":28,"offset":52843},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":52816},"end":{"line":1850,"column":28,"offset":52843},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1851,"column":3,"offset":52847},"end":{"line":1851,"column":19,"offset":52863},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1851,"column":21,"offset":52865},"end":{"line":1851,"column":27,"offset":52871},"indent":[]}}],"position":{"start":{"line":1851,"column":19,"offset":52863},"end":{"line":1851,"column":29,"offset":52873},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1851,"column":29,"offset":52873},"end":{"line":1851,"column":36,"offset":52880},"indent":[]}}],"position":{"start":{"line":1851,"column":3,"offset":52847},"end":{"line":1851,"column":36,"offset":52880},"indent":[]}}],"position":{"start":{"line":1851,"column":1,"offset":52845},"end":{"line":1851,"column":36,"offset":52880},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1852,"column":3,"offset":52884},"end":{"line":1852,"column":9,"offset":52890},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1852,"column":9,"offset":52890},"end":{"line":1852,"column":40,"offset":52921},"indent":[]}}],"position":{"start":{"line":1852,"column":3,"offset":52884},"end":{"line":1852,"column":40,"offset":52921},"indent":[]}}],"position":{"start":{"line":1852,"column":1,"offset":52882},"end":{"line":1852,"column":40,"offset":52921},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1853,"column":3,"offset":52925},"end":{"line":1853,"column":23,"offset":52945},"indent":[]}}],"position":{"start":{"line":1853,"column":3,"offset":52925},"end":{"line":1853,"column":23,"offset":52945},"indent":[]}}],"position":{"start":{"line":1853,"column":1,"offset":52923},"end":{"line":1853,"column":23,"offset":52945},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":52753},"end":{"line":1853,"column":23,"offset":52945},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1855,"column":2,"offset":52950},"end":{"line":1855,"column":8,"offset":52956},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":52949},"end":{"line":1855,"column":62,"offset":53010},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1855,"column":62,"offset":53010},"end":{"line":1855,"column":173,"offset":53121},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1855,"column":173,"offset":53121},"end":{"line":1856,"column":1,"offset":53123},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1856,"column":1,"offset":53123},"end":{"line":1856,"column":112,"offset":53234},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":52949},"end":{"line":1856,"column":112,"offset":53234},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1858,"column":1,"offset":53238},"end":{"line":1881,"column":4,"offset":53835},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1883,"column":2,"offset":53840},"end":{"line":1883,"column":142,"offset":53980},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":53839},"end":{"line":1883,"column":147,"offset":53985},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":53839},"end":{"line":1883,"column":147,"offset":53985},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1884,"column":1,"offset":53987}}}}